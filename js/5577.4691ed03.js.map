{"version":3,"file":"js/5577.4691ed03.js","mappings":"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","sources":["webpack://tangdata/./src/components/common/ChartPage.vue","webpack://tangdata/./src/components/common/ChartContainer.vue","webpack://tangdata/./src/components/common/ChartCard.vue","webpack://tangdata/./src/components/common/ChartView.vue","webpack://tangdata/./src/components/common/ChartView.vue?7c38","webpack://tangdata/./src/components/common/ChartCard.vue?7a80","webpack://tangdata/./src/components/common/ChartContainer.vue?9df1","webpack://tangdata/./src/components/common/ChartPage.vue?6ceb"],"sourcesContent":["<template>\n  <div class=\"echart-container\">\n    <div v-if=\"internalShowToggles\" class=\"segment-container\">\n      <div class=\"segment-wrapper\">\n        <div class=\"segment-bg\" :class=\"viewMode\"></div>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'monthly' }\"\n          @click=\"viewMode = 'monthly'\">月度</button>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'yearly' }\"\n          @click=\"viewMode = 'yearly'\">年度</button>\n      </div>\n    </div>\n\n    <ChartContainer v-for=\"chart in chartsToRender\" :key=\"chart.id\" :chart=\"chart\" :returnData=\"returnData\"\n      :config=\"config\" :viewMode=\"viewMode\" />\n  </div>\n</template>\n\n<script>\nimport ChartContainer from './ChartContainer.vue';\n\nexport default {\n  components: { ChartContainer },\n  props: {\n    chartMetaList: Array,\n    returnData: Object,\n    config: Object,\n    showToggles: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      viewMode: 'monthly',\n    };\n  },\n  computed: {\n    internalShowToggles() {\n      if (!this.showToggles) return false;\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      return dbCodes.has('yd') && dbCodes.has('nd');\n    },\n    defaultViewMode() {\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      if (dbCodes.has('yd')) return 'monthly';\n      if (dbCodes.has('nd')) return 'yearly';\n      return 'monthly';\n    },\n    filteredCharts() {\n      if (!this.internalShowToggles) return this.chartMetaList;\n      return this.chartMetaList.filter((c) =>\n        this.viewMode === 'monthly' ? c.dbCode === 'yd' : c.dbCode === 'nd'\n      );\n    },\n    chartsToRender() {\n      return this.filteredCharts.filter((chart) => {\n        const sj = this.returnData?.dataList?.sj?.[chart.dbCode];\n        return Array.isArray(sj) && sj.length > 0;\n      });\n    },\n  },\n  created() {\n    this.viewMode = this.defaultViewMode;\n  },\n};\n</script>\n\n<style scoped>\n.segment-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 30px;\n}\n\n.segment-wrapper {\n  position: relative;\n  display: flex;\n  width: 200px;\n  height: 45px;\n  background-color: #fff;\n  border-radius: 999px;\n  padding: 2px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  /* ✅ 外部阴影更明显 */\n}\n\n/* 背景高亮滑块 */\n.segment-bg {\n  position: absolute;\n  top: 2px;\n  bottom: 2px;\n  width: 50%;\n  border-radius: 999px;\n  background-color: #0bc2d6;\n  transition: left 0.25s ease;\n  z-index: 0;\n}\n\n.segment-bg.monthly {\n  left: 2px;\n}\n\n.segment-bg.yearly {\n  left: 50%;\n}\n\n/* 按钮本体 */\n.segment-button {\n  position: relative;\n  flex: 1;\n  z-index: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 999px;\n  cursor: pointer;\n  transition: color 0.25s ease;\n}\n\n.segment-button.active {\n  color: #fff;\n}\n\n\n</style>","<template>\n    <div class=\"chart-container\">\n        <h3 class=\"chart-title\">{{ chart.title }}</h3>\n        <h4 v-if=\"chart.subtitle\" class=\"chart-subtitle\">{{ chart.subtitle }}</h4>\n\n        <!-- 父容器：包含第一行按钮和第二行控件 -->\n        <div class=\"controls-wrap\">\n            <!-- 第一行按钮 -->\n            <div class=\"chart-controls\">\n                <button :class=\"['chart-button', { 'is-active': chartType === 'bar' && !isHorizontal }]\"\n                    @click=\"chartType = 'bar'; isHorizontal = false\">柱状图</button>\n                <button :class=\"['chart-button', { 'is-active': chartType === 'bar' && isHorizontal }]\"\n                    @click=\"chartType = 'bar'; isHorizontal = true\">条形图</button>\n                <button :class=\"['chart-button', { 'is-active': chartType === 'line' && !isHorizontal }]\"\n                    @click=\"chartType = 'line'; isHorizontal = false\">折线图</button>\n            </div>\n\n            <!-- 第二行控件 -->\n            <div class=\"time-legend-row\">\n                <label class=\"year-label\">滑动时间</label>\n                <el-slider v-model=\"yearLimit\" :min=\"1\" :max=\"20\" :step=\"1\" show-tooltip :format-tooltip=\"formatTooltip\"\n                    class=\"year-slider\" />\n                <button class=\"toggle-legend-btn\" :style=\"{ backgroundColor: legendAllSelected ? '#0bc2d6' : '#ccc' }\"\n                    @click=\"toggleLegend\">\n                    {{ legendAllSelected ? '一键未选' : '一键全选' }}\n                </button>\n            </div>\n        </div>\n\n        <!-- 图表 -->\n        <ChartCard :chart=\"chart\" :chartType=\"chartType\" :returnData=\"returnData\" :config=\"config\"\n            :yearLimit=\"yearLimit\" :isHorizontal=\"isHorizontal\" :legendAllSelected=\"legendAllSelected\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport ChartCard from './ChartCard.vue';\n\nexport default {\n    components: { ChartCard },\n    props: {\n        chart: Object,\n        returnData: Object,\n        config: Object,\n        initialChartType: { type: String, default: 'bar' },\n        viewMode: String,\n    },\n    setup(props) {\n        const chartType = ref(props.initialChartType);\n        const isHorizontal = ref(false);\n        const yearLimit = ref(10);\n        const legendAllSelected = ref(true);\n\n        const toggleLegend = () => {\n            legendAllSelected.value = !legendAllSelected.value;\n        };\n\n        const formatTooltip = (val) => {\n            const unit = props.viewMode === 'monthly' ? '个月' : '年';\n            return `近 ${val} ${unit}`;\n        };\n\n        return { chartType, isHorizontal, yearLimit, legendAllSelected, toggleLegend, formatTooltip };\n    },\n};\n</script>\n\n<style scoped>\n.chart-container {\n    width: 100%;\n    max-width: 1500px;\n    margin: 50px auto 60px;\n    padding: 16px;\n    box-sizing: border-box;\n    background-color: #fff;\n    border-radius: 12px;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n}\n\n.chart-title {\n    text-align: center;\n    font-size: 18px;\n    font-weight: 700;\n    color: #333;\n    margin: 24px 0 6px;\n}\n\n.chart-subtitle {\n    font-size: 13px;\n    font-weight: bold;\n    line-height: 20px;\n    color: #666;\n    text-align: center;\n    white-space: pre-line;\n    overflow-wrap: break-word;\n    margin: 0 auto 12px;\n    max-width: 80vw;\n}\n\n/* 父容器：包含第一行按钮和第二行控件 */\n.controls-wrap {\n    display: flex;\n    flex-direction: column;\n    width: fit-content;\n    /* 宽度自适应内容，即第一行按钮总宽度 */\n    margin: 0 auto;\n    /* 整体居中页面 */\n\n}\n\n/* 第一行按钮 */\n.chart-controls {\n    display: flex;\n    justify-content: center;\n    /* 整体居中 */\n    gap: 12px;\n    margin-top: 16px;\n    /* 调整与标题间距，原来可能太小 */\n}\n\n/* 第二行控件 */\n.time-legend-row {\n    display: flex;\n    justify-content: center;\n    /* 主轴居中，方便中间控件固定位置 */\n    margin-top: 16px;\n    gap: 16px;\n    /* 控件之间的间距 */\n    align-items: center;\n}\n\n.year-label {\n  flex-shrink: 0;\n  display: inline-block;\n  padding: 6px 12px;\n  font-size: 13px;\n  font-weight: 500;\n  border-radius: 10px;\n  color: #333;              /* 文本颜色改为深色 */\n  background-color: #f0f0f0; /* 浅灰背景区分按钮 */\n}\n\n.year-slider {\n    max-width: 200px;\n    min-width: 120px;\n}\n\n/* element-plus 滑块样式 */\n::v-deep(.year-slider .el-slider__bar) {\n    background-color: #0bc2d6 !important;\n}\n\n::v-deep(.year-slider .el-slider__button) {\n    background-color: #0bc2d6 !important;\n    border-color: #0bc2d6 !important;\n}\n\n.toggle-legend-btn {\n    flex-shrink: 0;\n    /* 不允许在 flex 行中被压缩 */\n    display: inline-flex;\n    padding: 6px 12px;\n    height: auto;\n    align-items: center;\n    color: #fff;\n    border: none;\n    border-radius: 10px;\n    cursor: pointer;\n    transition: background 0.3s;\n}\n\n/* 按钮样式 */\n.chart-button {\n    padding: 6px 12px;\n    margin: 10px;\n    font-size: 13px;\n    border-radius: 10px;\n    background-color: #ccc;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n    transition: background 0.3s;\n}\n\n.chart-button.is-active {\n    background-color: #0bc2d6;\n}\n</style>","<template>\n  <div class=\"chart-card\">\n    <ChartView :option=\"chartOption\" class=\"chart-wrapper\" />\n  </div>\n</template>\n\n<script>\nimport ChartView from './ChartView.vue';\nimport { getCommonChartOption } from '@/utils/CommonUtil.js';\n\nexport default {\n  components: { ChartView },\n  props: {\n    chart: Object,\n    returnData: Object,\n    config: Object,\n    chartType: String, // 'bar' 或 'line'\n    yearLimit: {\n      type: Number,\n      default: 10\n    },\n    isHorizontal: Boolean,\n    legendAllSelected: Boolean,\n  },\n  computed: {\n    adjustedLegendTop() {\n      const baseTop = this.chart.legendTop || '15%';\n\n      // 处理字符串百分比\n      if (window.innerWidth <= 768) { // 移动端\n        if (typeof baseTop === 'string' && baseTop.endsWith('%')) {\n          const num = parseFloat(baseTop);\n          return (num / 3) + '%'; // 缩小为原来的三分之一\n        }\n        if (typeof baseTop === 'number') {\n          return baseTop / 3; // 数值缩小\n        }\n        return '5%'; // 默认值\n      }\n      // PC端正常返回\n      return baseTop;\n    },\n\n    chartOption() {\n      const params = {\n        // 只取必要字段，避免污染\n        data: this.returnData,\n        cityCodeArr: this.config?.cityCodeArr || [],\n        // 图表相关\n        title: this.chart.title,\n        subtitle: this.chart.subtitle,\n        dbCode: this.chart.dbCode,\n        zbcodeArr: this.chart.zbcodeArr,\n        unit: this.chart.unit,\n        exceptName: this.chart.exceptName,\n        legendTop: this.adjustedLegendTop,\n        gridTop: this.chart.gridTop,\n        echrtId: this.chart.id,\n        chartType: this.chartType,\n        yearLimit: this.yearLimit,\n        isHorizontal: this.isHorizontal,\n        legendAllSelected: this.legendAllSelected,\n        \n      };\n      const option = getCommonChartOption(params);\n\n      if (option.title) delete option.title; // 防止重复标题显示\n\n      return option;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chart-card {\n  width: 95%;\n  height: 600px;\n  margin: 0 auto;\n}\n\n.chart-wrapper {\n  width: 100%;\n  height: 100%;\n}\n</style>","<template>\n  <div ref=\"chartContainer\" class=\"chart-view\"></div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch, nextTick } from 'vue';\nimport * as echarts from 'echarts';\nimport { logger } from '@/utils/Logger';\n\n// 全局图表实例池，用于复用\nconst chartInstancePool = new Map();\nconst MAX_POOL_SIZE = 20;\n\nexport default {\n  name: 'ChartView',\n  props: {\n    option: {\n      type: Object,\n      required: true\n    },\n    debug: { // 可在父组件临时传 debug=true 打开更多日志\n      type: Boolean,\n      default: false\n    },\n    // 新增性能优化选项\n    performance: {\n      type: Object,\n      default: () => ({\n        enableVirtualization: true,\n        enableThrottle: true,\n        throttleDelay: 16, // 60fps\n        enableLazyUpdate: true,\n        enableResizeOptimization: true,\n      })\n    }\n  },\n  setup(props) {\n    const chartContainer = ref(null);\n    let chartInstance = null;\n    let resizeObserver = null;\n    let initCount = 0;\n    let disposeCount = 0;\n    let setOptionCount = 0;\n    let resizeThrottleTimer = null;\n    let lastResizeTime = 0;\n\n    const log = (...args) => {\n      if (props.debug) {\n        logger.debug('[ChartView]', ...args);\n      }\n    };\n\n    // 从实例池获取或创建图表实例\n    const getChartInstance = () => {\n      for (const [key, instance] of chartInstancePool.entries()) {\n        if (!instance.inUse) {\n          instance.inUse = true;\n          chartInstancePool.delete(key);\n\n          // 清空实例并重新初始化\n          const dom = chartContainer.value;\n          instance.dispose(); // 销毁旧实例\n          const newInstance = echarts.init(dom, null, {\n            renderer: 'canvas',\n            useDirtyRect: true,\n            useCoarsePointer: true,\n          });\n          return newInstance;\n        }\n      }\n      return null;\n    };\n\n    // 将实例放回池中\n    const returnToPool = (instance) => {\n      if (!instance || chartInstancePool.size >= MAX_POOL_SIZE) {\n        // 池已满，直接销毁\n        if (instance) {\n          instance.dispose();\n        }\n        return;\n      }\n\n      // 清理实例状态\n      instance.clear();\n      instance.inUse = false;\n      instance.container = null;\n\n      // 生成唯一key\n      const key = `chart_${Date.now()}_${Math.random()}`;\n      chartInstancePool.set(key, instance);\n    };\n\n    const initChart = () => {\n      if (!chartContainer.value) return;\n\n      // 尝试从池中获取实例\n      chartInstance = getChartInstance();\n\n      if (!chartInstance) {\n        initCount++;\n        logger.time(`echarts-init-${initCount}`);\n\n        // 创建新实例时使用性能优化配置\n        chartInstance = echarts.init(chartContainer.value, null, {\n          renderer: 'canvas', // 使用canvas渲染器，性能更好\n          useDirtyRect: true, // 启用脏矩形优化\n          useCoarsePointer: true, // 启用粗指针优化\n        });\n\n        logger.timeEnd(`echarts-init-${initCount}`);\n        log(`init #${initCount} (container):`, chartContainer.value);\n\n        // 优化resize监听\n        if (props.performance.enableResizeOptimization) {\n          window.addEventListener('resize', handleResizeOptimized);\n        } else {\n          window.addEventListener('resize', resizeChart);\n        }\n\n        // 使用ResizeObserver优化容器大小变化监听\n        if (window.ResizeObserver) {\n          resizeObserver = new ResizeObserver(() => {\n            if (chartInstance && props.performance.enableThrottle) {\n              handleResizeOptimized();\n            } else if (chartInstance) {\n              chartInstance.resize();\n            }\n          });\n          resizeObserver.observe(chartContainer.value);\n        }\n      }\n\n      // 首次初始化后，如果已有 option 立即 setOption 一次\n      if (props.option && Object.keys(props.option).length > 0) {\n        applyOption(props.option);\n      }\n    };\n\n    // 优化的resize处理\n    const handleResizeOptimized = () => {\n      const now = Date.now();\n      if (now - lastResizeTime < props.performance.throttleDelay) {\n        if (resizeThrottleTimer) {\n          clearTimeout(resizeThrottleTimer);\n        }\n        resizeThrottleTimer = setTimeout(() => {\n          if (chartInstance) {\n            chartInstance.resize();\n            lastResizeTime = Date.now();\n          }\n        }, props.performance.throttleDelay);\n      } else {\n        if (chartInstance) {\n          chartInstance.resize();\n          lastResizeTime = now;\n        }\n      }\n    };\n\n    const applyOption = (opt) => {\n      if (!chartInstance) return;\n\n      setOptionCount++;\n      const label = `echarts-setOption-${setOptionCount}`;\n      logger.time(label);\n\n      try {\n        // 使用性能优化选项\n        const setOptionParams = [opt, false]; // notMerge = false\n\n        if (props.performance.enableLazyUpdate) {\n          setOptionParams.push(true); // lazyUpdate = true\n        }\n\n        chartInstance.setOption(...setOptionParams);\n\n        // 如果启用了虚拟化，延迟更新\n        if (props.performance.enableVirtualization && opt.series) {\n          nextTick(() => {\n            if (chartInstance) {\n              chartInstance.resize();\n            }\n          });\n        }\n      } catch (e) {\n        logger.error('[ChartView] setOption error', e);\n      }\n\n      logger.timeEnd(label);\n      log(`setOption count=${setOptionCount}`);\n    };\n\n    const resizeChart = () => {\n      if (chartInstance) {\n        chartInstance.resize();\n      }\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      log('onMounted');\n      initChart();\n    });\n\n    watch(\n      () => props.option,\n      (newOption) => {\n        if (newOption && Object.keys(newOption).length > 0) {\n          // 给出更多日志：测量从 watch 到 setOption 的时间\n          const t0 = performance.now();\n          applyOption(newOption);\n          const t1 = performance.now();\n          log(`watch->applyOption elapsed ${(t1 - t0).toFixed(1)} ms`);\n        }\n      },\n      { deep: true }\n    );\n\n    onBeforeUnmount(() => {\n      if (resizeThrottleTimer) {\n        clearTimeout(resizeThrottleTimer);\n      }\n\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n\n      if (chartInstance) {\n        disposeCount++;\n        log(`dispose #${disposeCount}`);\n\n        // 将实例放回池中而不是销毁\n        returnToPool(chartInstance);\n        chartInstance = null;\n      }\n\n      // 清理事件监听\n      window.removeEventListener('resize', handleResizeOptimized);\n      window.removeEventListener('resize', resizeChart);\n    });\n\n    return {\n      chartContainer,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.chart-view {\n  width: 100%;\n  height: 100%;\n}\n</style>","import { render } from \"./ChartView.vue?vue&type=template&id=3ca93d92&scoped=true\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js\"\n\nimport \"./ChartView.vue?vue&type=style&index=0&id=3ca93d92&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3ca93d92\"]])\n\nexport default __exports__","import { render } from \"./ChartCard.vue?vue&type=template&id=16ae2ee1&scoped=true\"\nimport script from \"./ChartCard.vue?vue&type=script&lang=js\"\nexport * from \"./ChartCard.vue?vue&type=script&lang=js\"\n\nimport \"./ChartCard.vue?vue&type=style&index=0&id=16ae2ee1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-16ae2ee1\"]])\n\nexport default __exports__","import { render } from \"./ChartContainer.vue?vue&type=template&id=5283f56c&scoped=true\"\nimport script from \"./ChartContainer.vue?vue&type=script&lang=js\"\nexport * from \"./ChartContainer.vue?vue&type=script&lang=js\"\n\nimport \"./ChartContainer.vue?vue&type=style&index=0&id=5283f56c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5283f56c\"]])\n\nexport default __exports__","import { render } from \"./ChartPage.vue?vue&type=template&id=ce7a7c4e&scoped=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPage.vue?vue&type=style&index=0&id=ce7a7c4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ce7a7c4e\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","$options","internalShowToggles","_hoisted_2","_createElementVNode","_hoisted_3","_normalizeClass","$data","viewMode","active","onClick","_cache","$event","_createCommentVNode","_Fragment","_renderList","chartsToRender","chart","_createBlock","_component_ChartContainer","id","returnData","$props","config","_toDisplayString","title","subtitle","_hoisted_4","_hoisted_5","$setup","chartType","isHorizontal","_hoisted_6","_hoisted_7","_createVNode","_component_el_slider","modelValue","yearLimit","min","max","step","formatTooltip","style","_normalizeStyle","backgroundColor","legendAllSelected","args","toggleLegend","_component_ChartCard","_component_ChartView","option","chartOption","ref","chartInstancePool","Map","MAX_POOL_SIZE","name","props","type","Object","required","debug","Boolean","default","performance","enableVirtualization","enableThrottle","throttleDelay","enableLazyUpdate","enableResizeOptimization","setup","chartContainer","chartInstance","resizeObserver","initCount","disposeCount","setOptionCount","resizeThrottleTimer","lastResizeTime","log","logger","getChartInstance","instance","entries","inUse","delete","dom","value","dispose","newInstance","echarts","renderer","useDirtyRect","useCoarsePointer","returnToPool","size","clear","container","Date","now","Math","random","set","initChart","time","timeEnd","window","addEventListener","handleResizeOptimized","resizeChart","ResizeObserver","resize","observe","keys","length","applyOption","clearTimeout","setTimeout","opt","label","setOptionParams","push","setOption","series","nextTick","e","error","onMounted","async","watch","newOption","t0","t1","toFixed","deep","onBeforeUnmount","disconnect","removeEventListener","__exports__","components","ChartView","String","Number","computed","adjustedLegendTop","baseTop","this","legendTop","innerWidth","endsWith","num","parseFloat","params","data","cityCodeArr","dbCode","zbcodeArr","unit","exceptName","gridTop","echrtId","getCommonChartOption","ChartCard","initialChartType","val","ChartContainer","chartMetaList","Array","showToggles","dbCodes","Set","map","c","has","defaultViewMode","filteredCharts","filter","sj","dataList","isArray","created","render"],"sourceRoot":""}