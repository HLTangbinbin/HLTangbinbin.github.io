{"version":3,"file":"js/3445.93d544a8.js","mappings":"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","sources":["webpack://tangdata/./src/components/MajorProvincial/ProvincialFinance.vue","webpack://tangdata/./src/components/MajorProvincial/ProvincialFinance.vue?b0f8","webpack://tangdata/./src/components/common/ChartPage.vue","webpack://tangdata/./src/components/common/ChartContainer.vue","webpack://tangdata/./src/components/common/ChartView.vue","webpack://tangdata/./src/components/common/ChartView.vue?7c38","webpack://tangdata/./src/components/common/ChartContainer.vue?9df1","webpack://tangdata/./src/components/common/ChartPage.vue?6ceb"],"sourcesContent":["<template>\n  <ChartPage\n    v-if=\"returnData\"\n    :chartMetaList=\"charts\"\n    :returnData=\"returnData\"\n    :config=\"config\" \n    :showToggles=\"false\" ></ChartPage>\n</template>\n\n<script>\nimport ChartPage from '@/components/common/ChartPage.vue';\nimport { ProvincialFinanceCharts } from '@/config/chartMetaProvince.js';\n\nimport { loadChartData } from '@/config/dataLoader.js';\nimport { logger } from '@/utils/Logger.js';\n\nexport default {\n  name: 'ProvincialFinance',\n  components: { ChartPage },\n  data() {\n    return {\n      charts: ProvincialFinanceCharts.charts,\n      returnData: null,\n      config: ProvincialFinanceCharts.source\n    };\n  },\n  async mounted() {\n    try {\n      this.returnData = await loadChartData(\n        this.config\n      );\n    } catch (e) {\n      logger.error('加载数据失败', e);\n    }\n  }\n};\n\n</script>\n","import { render } from \"./ProvincialFinance.vue?vue&type=template&id=18c01bb4\"\nimport script from \"./ProvincialFinance.vue?vue&type=script&lang=js\"\nexport * from \"./ProvincialFinance.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"echart-container\">\n    <div v-if=\"internalShowToggles\" class=\"segment-container\">\n      <div class=\"segment-wrapper\">\n        <div class=\"segment-bg\" :class=\"viewMode\"></div>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'monthly' }\"\n          @click=\"viewMode = 'monthly'\">月度</button>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'yearly' }\"\n          @click=\"viewMode = 'yearly'\">年度</button>\n      </div>\n    </div>\n\n    <ChartContainer v-for=\"chart in chartsToRender\" :key=\"chart.id\" :chart=\"chart\" :returnData=\"returnData\"\n      :config=\"config\" :viewMode=\"viewMode\" />\n  </div>\n</template>\n\n<script>\nimport ChartContainer from './ChartContainer.vue';\n\nexport default {\n  components: { ChartContainer },\n  props: {\n    chartMetaList: Array,\n    returnData: Object,\n    config: Object,\n    showToggles: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      viewMode: 'monthly',\n    };\n  },\n  computed: {\n    internalShowToggles() {\n      if (!this.showToggles) return false;\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      return dbCodes.has('yd') && dbCodes.has('nd');\n    },\n    defaultViewMode() {\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      if (dbCodes.has('yd')) return 'monthly';\n      if (dbCodes.has('nd')) return 'yearly';\n      return 'monthly';\n    },\n    filteredCharts() {\n      if (!this.internalShowToggles) return this.chartMetaList;\n      return this.chartMetaList.filter((c) =>\n        this.viewMode === 'monthly' ? c.dbCode === 'yd' : c.dbCode === 'nd'\n      );\n    },\n    chartsToRender() {\n      return this.filteredCharts.filter((chart) => {\n        const sj = this.returnData?.dataList?.sj?.[chart.dbCode];\n        return Array.isArray(sj) && sj.length > 0;\n      });\n    },\n  },\n  created() {\n    this.viewMode = this.defaultViewMode;\n  },\n};\n</script>\n\n<style scoped>\n.segment-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n\n}\n\n.segment-wrapper {\n  position: relative;\n  display: flex;\n  width: 200px;\n  height: 45px;\n  background-color: #fff;\n  border-radius: 15px;\n  padding: 2px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  /* ✅ 外部阴影更明显 */\n}\n\n/* 背景高亮滑块 */\n.segment-bg {\n  position: absolute;\n  top: 2px;\n  bottom: 2px;\n  width: 50%;\n  border-radius: 15px;\n  background-color: #0bc2d6;\n  transition: left 0.25s ease;\n  z-index: 0;\n}\n\n.segment-bg.monthly {\n  left: 2px;\n}\n\n.segment-bg.yearly {\n  left: 50%;\n}\n\n/* 按钮本体 */\n.segment-button {\n  position: relative;\n  flex: 1;\n  z-index: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 15px;\n  cursor: pointer;\n  transition: color 0.25s ease;\n}\n\n.segment-button.active {\n  color: #fff;\n}\n\n\n</style>","<!-- ChartContainer.vue -->\n<template>\n  <div class=\"chart-container\">\n\n    <div class=\"controls-wrap\">\n      <div class=\"chart-controls\">\n        <button :class=\"['chart-button', { 'is-active': currentChartType === 'bar' && !isHorizontal }]\"\n          @click=\"setChartType('bar', false)\">\n          柱状图\n        </button>\n        <button :class=\"['chart-button', { 'is-active': currentChartType === 'bar' && isHorizontal }]\"\n          @click=\"setChartType('bar', true)\">\n          条形图\n        </button>\n        <button :class=\"['chart-button', { 'is-active': currentChartType === 'line' && !isHorizontal }]\"\n          @click=\"setChartType('line', false)\">\n          折线图\n        </button>\n      </div>\n\n      <div class=\"time-legend-row\">\n        <label class=\"year-label\">滑动时间</label>\n        <el-slider v-model=\"yearLimit\" :min=\"1\" :max=\"20\" :step=\"1\" show-tooltip :format-tooltip=\"formatTooltip\"\n          class=\"year-slider\" />\n        <button class=\"toggle-legend-btn\" :style=\"{ backgroundColor: legendAllSelected ? '#0bc2d6' : '#ccc' }\"\n          @click=\"toggleAllLegends\">\n          {{ legendAllSelected ? '一键未选' : '一键全选' }}\n        </button>\n\n      </div>\n    </div>\n\n    <div class=\"chart-card\">\n      <ChartView ref=\"chartRef\" :option=\"chartOption\" :chartId=\"chart.id\" :initSelectAll=\"legendAllSelected\"\n        @legendStateChange=\"legendAllSelected = $event\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport ChartView from './ChartView.vue';\nimport { getCommonChartOption } from '@/utils/CommonUtil.js';\nimport { logger } from '@/utils/Logger.js';\n\nexport default {\n  name: 'ChartContainer',\n  components: { ChartView },\n  props: {\n    chart: { type: Object, required: true },\n    returnData: { type: Object, required: true, default: () => ({}) },\n    config: { type: Object, default: () => ({}) },\n    viewMode: { type: String, default: 'monthly' }\n  },\n  setup(props) {\n    const currentChartType = ref('bar');\n    const isHorizontal = ref(false);\n    const yearLimit = ref(10);\n    const legendAllSelected = ref(true);\n    const chartRef = ref(null);\n    // 格式化滑块提示\n    const formatTooltip = (value) => {\n      if (props.viewMode === 'yearly') {\n        return `近 ${value} 年`;\n      } else {\n        return `近 ${value} 月`;\n      }\n    };\n\n    const chartOption = computed(() => {\n      const chartConfig = {\n        data: props.returnData,\n        title: props.chart.title || '默认标题',\n        subtitle: props.chart.subtitle || '',\n        zbcodeArr: props.chart.zbcodeArr || [],\n        cityCodeArr: props.config.cityCodeArr || [],\n        dbCode: props.chart.dbCode || 'nd',\n        unit: props.chart.unit || '',\n        exceptName: props.chart.exceptName || '',\n        legendTop: props.chart.legendTop,\n        gridTop: props.chart.gridTop,\n        chartType: currentChartType.value,\n        yearLimit: yearLimit.value,\n        isHorizontal: isHorizontal.value\n      };\n  \n      return getCommonChartOption(chartConfig);\n    });\n\n    // 切换图表类型\n    const setChartType = (type, horizontal) => {\n      currentChartType.value = type;\n      isHorizontal.value = horizontal;\n    };\n\n    // 一键全选/未选\n    const toggleAllLegends = () => {\n      logger.debug('一键全选:', legendAllSelected.value);\n      legendAllSelected.value = !legendAllSelected.value;\n      if (chartRef.value) {\n        chartRef.value.toggleAllLegends(legendAllSelected.value);\n      }\n    };\n\n    return {\n      currentChartType,\n      isHorizontal,\n      yearLimit,\n      legendAllSelected,\n      chartOption,\n      setChartType,\n      toggleAllLegends,\n      formatTooltip,\n      chartRef\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* 保持原有样式不变 */\n.chart-container {\n  width: 95%;\n  max-width: 1500px;\n  margin: 30px auto 60px;\n  padding: 16px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n  box-sizing: border-box;\n}\n\n.controls-wrap {\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  margin: 0 auto;\n\n}\n\n.chart-controls {\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  margin-top: 16px;\n}\n\n.time-legend-row {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  gap: 16px;\n}\n\n.year-label {\n  flex-shrink: 0;\n  padding: 6px 12px;\n  font-size: 13px;\n  font-weight: 500;\n  color: #fff;\n  background-color: #ccc;\n  border-radius: 8px;\n}\n\n.year-slider {\n  min-width: 120px;\n  max-width: 200px;\n}\n\n::v-deep(.year-slider .el-slider__bar) {\n  background-color: #0bc2d6 !important;\n}\n\n::v-deep(.year-slider .el-slider__button) {\n  background-color: #0bc2d6 !important;\n  border-color: #0bc2d6 !important;\n}\n\n.toggle-legend-btn {\n  flex-shrink: 0;\n  padding: 6px 12px;\n  font-size: 13px;\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s;\n  display: inline-flex;\n  align-items: center;\n}\n\n.toggle-legend-btn:active {\n  transform: scale(0.98);\n}\n\n.chart-button {\n  padding: 6px 12px;\n  margin: 10px;\n  font-size: 13px;\n  color: #fff;\n  background-color: #ccc;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.chart-button.is-active {\n  background-color: #0bc2d6;\n}\n\n.chart-card {\n  width: 95%;\n  height: 700px;\n  margin: 0 auto;\n  margin-top: 20px;\n}\n\n.chart-wrapper {\n  width: 100%;\n  height: 100%;\n\n}\n</style>","<template>\n  <div ref=\"chartContainer\" class=\"chart-view\"></div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch, nextTick } from 'vue';\nimport * as echarts from 'echarts/core';\nimport { BarChart, LineChart } from 'echarts/charts';\nimport { TitleComponent,GridComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { logger } from '@/utils/Logger.js';\nimport debounce from 'lodash-es/debounce';\n\necharts.use([TitleComponent,GridComponent, TooltipComponent, LegendComponent, BarChart, LineChart, CanvasRenderer]);\n\nexport default {\n  name: 'ChartView',\n  props: {\n    option: { type: Object, required: true },\n    chartId: { type: String, required: true }, // 从 ChartContainer 传入\n    initSelectAll: { type: Boolean, default: true }\n  },\n  emits: ['legendStateChange'],\n  setup(props, { expose, emit }) {\n    const chartContainer = ref(null);\n    let chartInstance = null;\n    let resizeHandler = null;\n\n    const initChart = () => {\n      if (!chartContainer.value || !props.option?.series?.length) return;\n\n      const startTime = performance.now();\n\n      if (chartInstance) {\n        chartInstance.dispose();\n        chartInstance = null;\n      }\n      chartInstance = echarts.init(chartContainer.value);\n\n      chartInstance.setOption(props.option, true);\n\n      // 原 legend 初始化逻辑（保留原功能）\n      const legends = chartInstance.getOption().legend?.[0]?.data || [];\n      const startLegend = performance.now();\n      legends.forEach(name => {\n        chartInstance.dispatchAction({\n          type: props.initSelectAll ? 'legendSelect' : 'legendUnSelect',\n          name\n        });\n      });\n      const endLegend = performance.now();\n      logger.debug(`[Chart ${props.chartId}] dispatchAction循环耗时: ${Math.round(endLegend - startLegend)}ms`);\n\n      // legend 手动选择事件\n      chartInstance.on('legendselectchanged', (params) => {\n        const allSelected = Object.values(params.selected).every(v => v === true);\n        const noneSelected = Object.values(params.selected).every(v => v === false);\n\n        if (allSelected) emit('legendStateChange', true);\n        else if (noneSelected) emit('legendStateChange', false);\n      });\n\n      resizeHandler = debounce(() => chartInstance?.resize(), 200);\n      window.addEventListener('resize', resizeHandler);\n\n      const endTime = performance.now();\n      logger.debug(`[Chart ${props.chartId}] 图表初始化耗时: ${Math.round(endTime - startTime)}ms`);\n    };\n\n    const updateChart = (newOption) => {\n      if (!chartInstance) {\n        initChart();\n        return;\n      }\n      if (!newOption?.series?.length) return;\n\n      const startTime = performance.now();\n      chartInstance.setOption(newOption, false);\n      const endTime = performance.now();\n      logger.debug(`[Chart ${props.chartId}] 图表更新耗时: ${Math.round(endTime - startTime)}ms`);\n    };\n\n    const toggleAllLegends = (selectAll) => {\n      if (!chartInstance) return;\n      const legends = chartInstance.getOption().legend?.[0]?.data || [];\n      const startTime = performance.now();\n      legends.forEach(name => {\n        chartInstance.dispatchAction({\n          type: selectAll ? 'legendSelect' : 'legendUnSelect',\n          name\n        });\n      });\n      const endTime = performance.now();\n      logger.debug(`[Chart ${props.chartId}] toggleAllLegends耗时: ${Math.round(endTime - startTime)}ms`);\n    };\n\n    onMounted(() => {\n      nextTick(() => initChart());\n    });\n\n    watch(() => props.option, updateChart, { deep: true });\n\n    onBeforeUnmount(() => {\n      if (resizeHandler) {\n        window.removeEventListener('resize', resizeHandler);\n        resizeHandler.cancel();\n      }\n      chartInstance?.dispose();\n      chartInstance = null;\n    });\n\n    expose({ toggleAllLegends });\n\n    return { chartContainer };\n  }\n};\n</script>\n\n<style scoped>\n.chart-view {\n  width: 100%;\n  height: 100%;\n}\n</style>","import { render } from \"./ChartView.vue?vue&type=template&id=70182fa4&scoped=true\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js\"\n\nimport \"./ChartView.vue?vue&type=style&index=0&id=70182fa4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-70182fa4\"]])\n\nexport default __exports__","import { render } from \"./ChartContainer.vue?vue&type=template&id=2c7201f3&scoped=true\"\nimport script from \"./ChartContainer.vue?vue&type=script&lang=js\"\nexport * from \"./ChartContainer.vue?vue&type=script&lang=js\"\n\nimport \"./ChartContainer.vue?vue&type=style&index=0&id=2c7201f3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2c7201f3\"]])\n\nexport default __exports__","import { render } from \"./ChartPage.vue?vue&type=template&id=2eabc8a4&scoped=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPage.vue?vue&type=style&index=0&id=2eabc8a4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2eabc8a4\"]])\n\nexport default __exports__"],"names":["$data","returnData","_createBlock","_component_ChartPage","key","chartMetaList","charts","config","showToggles","_createCommentVNode","name","components","ChartPage","data","ProvincialFinanceCharts","source","mounted","this","loadChartData","e","logger","error","__exports__","render","class","_createElementBlock","_hoisted_1","$options","internalShowToggles","_hoisted_2","_createElementVNode","_hoisted_3","_normalizeClass","viewMode","active","onClick","_cache","$event","_Fragment","_renderList","chartsToRender","chart","_component_ChartContainer","id","$props","$setup","currentChartType","isHorizontal","setChartType","_hoisted_4","_hoisted_5","_createVNode","_component_el_slider","modelValue","yearLimit","min","max","step","formatTooltip","style","_normalizeStyle","backgroundColor","legendAllSelected","args","toggleAllLegends","_hoisted_6","_component_ChartView","ref","option","chartOption","chartId","initSelectAll","onLegendStateChange","echarts","TitleComponent","GridComponent","TooltipComponent","LegendComponent","BarChart","LineChart","CanvasRenderer","props","type","Object","required","String","Boolean","default","emits","setup","expose","emit","chartContainer","chartInstance","resizeHandler","initChart","value","series","length","startTime","performance","now","dispose","setOption","legends","getOption","legend","startLegend","forEach","dispatchAction","endLegend","debug","Math","round","on","params","allSelected","values","selected","every","v","noneSelected","debounce","resize","window","addEventListener","endTime","updateChart","newOption","selectAll","onMounted","nextTick","watch","deep","onBeforeUnmount","removeEventListener","cancel","ChartView","chartRef","computed","chartConfig","title","subtitle","zbcodeArr","cityCodeArr","dbCode","unit","exceptName","legendTop","gridTop","chartType","getCommonChartOption","horizontal","ChartContainer","Array","dbCodes","Set","map","c","has","defaultViewMode","filteredCharts","filter","sj","dataList","isArray","created"],"sourceRoot":""}