{"version":3,"file":"js/88.f8a99867.js","mappings":"gLACOA,IAAI,iBAAiBC,MAAM,c,0CAAhCC,EAAAA,EAAAA,IAAmD,MAAnDC,EAAmD,S,wBAOrD,GACEC,KAAM,YACNC,MAAO,CACLC,OAAQ,CACNC,KAAMC,OACNC,UAAU,GAEZC,MAAO,CACLH,KAAMI,QACNC,SAAS,IAGbC,KAAAA,CAAMR,GACJ,MAAMS,GAAiBd,EAAAA,EAAAA,IAAI,MAC3B,IAAIe,EAAgB,KAChBC,EAAiB,KACjBC,EAAY,EACZC,EAAe,EACfC,EAAiB,EAErB,MAAMC,EAAMA,IAAIC,KACVhB,EAAMK,OACRY,QAAQF,IAAI,iBAAkBC,EAChC,EAGIE,EAAYA,KACXT,EAAeU,QAEfT,IACHE,IACAK,QAAQG,KAAM,gBAAeR,KAC7BF,EAAgBW,EAAAA,GAAaZ,EAAeU,OAC5CF,QAAQK,QAAS,gBAAeV,KAChCG,EAAK,SAAQH,iBAA0BH,EAAeU,OAGtDI,OAAOC,iBAAiB,SAAUC,GAElCd,EAAiB,IAAIe,gBAAe,KAC9BhB,GACFA,EAAciB,QAChB,IAEFhB,EAAeiB,QAAQnB,EAAeU,QAIpCnB,EAAMC,QAAUE,OAAO0B,KAAK7B,EAAMC,QAAQ6B,OAAS,GACrDC,EAAY/B,EAAMC,QACpB,EAGI8B,EAAeC,IACnB,IAAKtB,EAAe,OACpBI,IACA,MAAMmB,EAAS,qBAAoBnB,IACnCG,QAAQG,KAAKa,GAGb,IACEvB,EAAcwB,UAAUF,GAAK,GAAO,EACtC,CAAE,MAAOG,GACPlB,QAAQmB,MAAM,8BAA+BD,EAC/C,CACAlB,QAAQK,QAAQW,GAChBlB,EAAK,mBAAkBD,IAAiB,EAGpCW,EAAcA,KACdf,GACFA,EAAciB,QAChB,EA8CF,OA3CAU,EAAAA,EAAAA,KAAUC,gBACFC,EAAAA,EAAAA,MACNxB,EAAI,aACJG,GAAW,KAGbsB,EAAAA,EAAAA,KACE,IAAMxC,EAAMC,SACXwC,IACC,GAAIA,GAAatC,OAAO0B,KAAKY,GAAWX,OAAS,EAAG,CAElD,MAAMY,EAAKC,YAAYC,MACvBb,EAAYU,GACZ,MAAMI,EAAKF,YAAYC,MACvB7B,EAAK,+BAA8B8B,EAAKH,GAAII,QAAQ,QACtD,IAEF,CAAEC,MAAM,KAGVC,EAAAA,EAAAA,KAAgB,KAKd,GAJAnC,IACAI,QAAQG,KAAM,mBAAkBP,KAChCU,OAAO0B,oBAAoB,SAAUxB,GAEjCd,GAAkBF,EAAeU,MAAO,CAC1C,IACER,EAAeuC,UAAUzC,EAAeU,OACxCR,EAAewC,YACjB,CAAE,MAAOhB,GAAiB,CAC1BxB,EAAiB,IACnB,CAEA,GAAID,EAAe,CACjB,IACEA,EAAc0C,SAChB,CAAE,MAAOjB,GAAiB,CAC1BzB,EAAgB,IAClB,CACAO,QAAQK,QAAS,mBAAkBT,KACnCE,EAAI,iCAAkCF,EAAa,IAG9C,CACLJ,iBAEJ,G,UC1HF,MAAM4C,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://tangdata/./src/components/common/ChartView.vue","webpack://tangdata/./src/components/common/ChartView.vue?7c38"],"sourcesContent":["<template>\n  <div ref=\"chartContainer\" class=\"chart-view\"></div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch, nextTick } from 'vue';\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'ChartView',\n  props: {\n    option: {\n      type: Object,\n      required: true\n    },\n    debug: { // 可在父组件临时传 debug=true 打开更多日志\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const chartContainer = ref(null);\n    let chartInstance = null;\n    let resizeObserver = null;\n    let initCount = 0;\n    let disposeCount = 0;\n    let setOptionCount = 0;\n\n    const log = (...args) => {\n      if (props.debug) {\n        console.log('[ChartView]', ...args);\n      }\n    };\n\n    const initChart = () => {\n      if (!chartContainer.value) return;\n\n      if (!chartInstance) {\n        initCount++;\n        console.time(`echarts-init-${initCount}`);\n        chartInstance = echarts.init(chartContainer.value);\n        console.timeEnd(`echarts-init-${initCount}`);\n        log(`init #${initCount} (container):`, chartContainer.value);\n\n        // resize 监听\n        window.addEventListener('resize', resizeChart);\n\n        resizeObserver = new ResizeObserver(() => {\n          if (chartInstance) {\n            chartInstance.resize();\n          }\n        });\n        resizeObserver.observe(chartContainer.value);\n      }\n\n      // 首次初始化后，如果已有 option 立即 setOption 一次\n      if (props.option && Object.keys(props.option).length > 0) {\n        applyOption(props.option);\n      }\n    };\n\n    const applyOption = (opt) => {\n      if (!chartInstance) return;\n      setOptionCount++;\n      const label = `echarts-setOption-${setOptionCount}`;\n      console.time(label);\n      // 第2个参数 notMerge = false 保留合并逻辑（你之前改成 false）\n      // 第3个参数 lazyUpdate = true 尽量降低同步更新开销（可观察效果）\n      try {\n        chartInstance.setOption(opt, false, true);\n      } catch (e) {\n        console.error('[ChartView] setOption error', e);\n      }\n      console.timeEnd(label);\n      log(`setOption count=${setOptionCount}`);\n    };\n\n    const resizeChart = () => {\n      if (chartInstance) {\n        chartInstance.resize();\n      }\n    };\n\n    onMounted(async () => {\n      await nextTick();\n      log('onMounted');\n      initChart();\n    });\n\n    watch(\n      () => props.option,\n      (newOption) => {\n        if (newOption && Object.keys(newOption).length > 0) {\n          // 给出更多日志：测量从 watch 到 setOption 的时间\n          const t0 = performance.now();\n          applyOption(newOption);\n          const t1 = performance.now();\n          log(`watch->applyOption elapsed ${(t1 - t0).toFixed(1)} ms`);\n        }\n      },\n      { deep: true }\n    );\n\n    onBeforeUnmount(() => {\n      disposeCount++;\n      console.time(`echarts-dispose-${disposeCount}`);\n      window.removeEventListener('resize', resizeChart);\n\n      if (resizeObserver && chartContainer.value) {\n        try {\n          resizeObserver.unobserve(chartContainer.value);\n          resizeObserver.disconnect();\n        } catch (e) { /* ignore */ }\n        resizeObserver = null;\n      }\n\n      if (chartInstance) {\n        try {\n          chartInstance.dispose();\n        } catch (e) { /* ignore */ }\n        chartInstance = null;\n      }\n      console.timeEnd(`echarts-dispose-${disposeCount}`);\n      log('onBeforeUnmount, disposeCount=', disposeCount);\n    });\n\n    return {\n      chartContainer\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chart-view {\n  width: 100%;\n  height: 100%;\n}\n</style>","import { render } from \"./ChartView.vue?vue&type=template&id=4a7cde61&scoped=true\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js\"\n\nimport \"./ChartView.vue?vue&type=style&index=0&id=4a7cde61&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a7cde61\"]])\n\nexport default __exports__"],"names":["ref","class","_createElementBlock","_hoisted_1","name","props","option","type","Object","required","debug","Boolean","default","setup","chartContainer","chartInstance","resizeObserver","initCount","disposeCount","setOptionCount","log","args","console","initChart","value","time","echarts","timeEnd","window","addEventListener","resizeChart","ResizeObserver","resize","observe","keys","length","applyOption","opt","label","setOption","e","error","onMounted","async","nextTick","watch","newOption","t0","performance","now","t1","toFixed","deep","onBeforeUnmount","removeEventListener","unobserve","disconnect","dispose","__exports__","render"],"sourceRoot":""}