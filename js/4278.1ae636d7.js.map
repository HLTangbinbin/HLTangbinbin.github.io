{"version":3,"file":"js/4278.1ae636d7.js","mappings":"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","sources":["webpack://tangdata/./src/components/WH/WHGDP.vue","webpack://tangdata/./src/components/WH/WHGDP.vue?1945","webpack://tangdata/./src/components/common/ChartPage.vue","webpack://tangdata/./src/components/common/ChartContainer.vue","webpack://tangdata/./src/components/common/ChartView.vue","webpack://tangdata/./src/components/common/ChartView.vue?7c38","webpack://tangdata/./src/components/common/ChartContainer.vue?9df1","webpack://tangdata/./src/components/common/ChartPage.vue?6ceb"],"sourcesContent":["<template>\n  <ChartPage\n    v-if=\"returnData\"\n    :chartMetaList=\"charts\"\n    :returnData=\"returnData\"\n    :config=\"config\" \n    :showToggles=\"false\" ></ChartPage>\n</template>\n\n<script>\nimport ChartPage from '@/components/common/ChartPage.vue';\nimport { WHGDPCharts } from '@/config/chartMetaWH.js';\n\nimport { loadChartData } from '@/config/dataLoader.js';\nimport { logger } from '@/utils/Logger.js';\n\nexport default {\n  name: 'WHGDP',\n  components: { ChartPage },\n  data() {\n    return {\n      charts: WHGDPCharts.charts,\n      returnData: null,\n      config: WHGDPCharts.source\n    };\n  },\n  async mounted() {\n    try {\n      this.returnData = await loadChartData(\n        this.config\n      );\n    } catch (e) {\n      logger.error('加载数据失败', e);\n    }\n  }\n};\n\n</script>\n","import { render } from \"./WHGDP.vue?vue&type=template&id=6a6f9703\"\nimport script from \"./WHGDP.vue?vue&type=script&lang=js\"\nexport * from \"./WHGDP.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"echart-container\">\n    <div v-if=\"internalShowToggles\" class=\"segment-container\">\n      <div class=\"segment-wrapper\">\n        <div class=\"segment-bg\" :class=\"viewMode\"></div>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'monthly' }\"\n          @click=\"viewMode = 'monthly'\">月度</button>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'yearly' }\"\n          @click=\"viewMode = 'yearly'\">年度</button>\n      </div>\n    </div>\n\n    <ChartContainer v-for=\"chart in chartsToRender\" :key=\"chart.id\" :chart=\"chart\" :returnData=\"returnData\"\n      :config=\"config\" :viewMode=\"viewMode\" />\n  </div>\n</template>\n\n<script>\nimport ChartContainer from './ChartContainer.vue';\n\nexport default {\n  components: { ChartContainer },\n  props: {\n    chartMetaList: Array,\n    returnData: Object,\n    config: Object,\n    showToggles: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      viewMode: 'monthly',\n    };\n  },\n  computed: {\n    internalShowToggles() {\n      if (!this.showToggles) return false;\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      return dbCodes.has('yd') && dbCodes.has('nd');\n    },\n    defaultViewMode() {\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      if (dbCodes.has('yd')) return 'monthly';\n      if (dbCodes.has('nd')) return 'yearly';\n      return 'monthly';\n    },\n    filteredCharts() {\n      if (!this.internalShowToggles) return this.chartMetaList;\n      return this.chartMetaList.filter((c) =>\n        this.viewMode === 'monthly' ? c.dbCode === 'yd' : c.dbCode === 'nd'\n      );\n    },\n    chartsToRender() {\n      return this.filteredCharts.filter((chart) => {\n        const sj = this.returnData?.dataList?.sj?.[chart.dbCode];\n        return Array.isArray(sj) && sj.length > 0;\n      });\n    },\n  },\n  created() {\n    this.viewMode = this.defaultViewMode;\n  },\n};\n</script>\n\n<style scoped>\n.segment-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 30px;\n}\n\n.segment-wrapper {\n  position: relative;\n  display: flex;\n  width: 200px;\n  height: 45px;\n  background-color: #fff;\n  border-radius: 999px;\n  padding: 2px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  /* ✅ 外部阴影更明显 */\n}\n\n/* 背景高亮滑块 */\n.segment-bg {\n  position: absolute;\n  top: 2px;\n  bottom: 2px;\n  width: 50%;\n  border-radius: 999px;\n  background-color: #0bc2d6;\n  transition: left 0.25s ease;\n  z-index: 0;\n}\n\n.segment-bg.monthly {\n  left: 2px;\n}\n\n.segment-bg.yearly {\n  left: 50%;\n}\n\n/* 按钮本体 */\n.segment-button {\n  position: relative;\n  flex: 1;\n  z-index: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 999px;\n  cursor: pointer;\n  transition: color 0.25s ease;\n}\n\n.segment-button.active {\n  color: #fff;\n}\n\n\n</style>","<!-- ChartContainer.vue -->\n<template>\n  <div class=\"chart-container\">\n\n    <div class=\"controls-wrap\">\n      <div class=\"chart-controls\">\n        <button \n          :class=\"['chart-button', { 'is-active': currentChartType === 'bar' && !isHorizontal }]\"\n          @click=\"setChartType('bar', false)\"\n        >\n          柱状图\n        </button>\n        <button \n          :class=\"['chart-button', { 'is-active': currentChartType === 'bar' && isHorizontal }]\"\n          @click=\"setChartType('bar', true)\"\n        >\n          条形图\n        </button>\n        <button \n          :class=\"['chart-button', { 'is-active': currentChartType === 'line' && !isHorizontal }]\"\n          @click=\"setChartType('line', false)\"\n        >\n          折线图\n        </button>\n      </div>\n\n      <div class=\"time-legend-row\">\n        <label class=\"year-label\">滑动时间</label>\n        <el-slider \n          v-model=\"yearLimit\" \n          :min=\"1\" \n          :max=\"20\" \n          :step=\"1\" \n          show-tooltip \n          :format-tooltip=\"formatTooltip\"\n          class=\"year-slider\" \n        />\n        <button \n          class=\"toggle-legend-btn\" \n          :style=\"{ backgroundColor: legendAllSelected ? '#0bc2d6' : '#ccc' }\"\n          @click=\"toggleAllLegends\"\n        >\n          {{ legendAllSelected ? '一键未选' : '一键全选' }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"chart-card\">\n      <!-- 不再使用 ref 调用 updateChart，而是通过 option 属性驱动更新 -->\n      <ChartView \n        :option=\"chartOption\" \n        class=\"chart-wrapper\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport ChartView from './ChartView.vue';\nimport { getCommonChartOption } from '@/utils/CommonUtil.js';\nimport { logger } from '@/utils/Logger.js';\n\nexport default {\n  name: 'ChartContainer',\n  components: { ChartView },\n  props: {\n    chart: { \n      type: Object, \n      required: true,\n      validator: (value) => {\n        return value.title && value.zbcodeArr;\n      }\n    },\n    returnData: { \n      type: Object, \n      required: true,\n      default: () => ({})\n    },\n    config: { \n      type: Object, \n      default: () => ({})\n    },\n    viewMode: { \n      type: String, \n      default: 'monthly',\n      validator: (value) => ['monthly', 'yearly'].includes(value)\n    }\n  },\n  setup(props) {\n    const currentChartType = ref('bar');\n    const isHorizontal = ref(false);\n    const yearLimit = ref(10);\n    const legendAllSelected = ref(true);\n\n      \n  // 在 ChartContainer.vue 的 setup 函数中\n    const chartOption = computed(() => {\n      // 从 props.chart 和组件状态中提取所有必要参数\n      const chartConfig = {\n        data: props.returnData,\n        title: props.chart.title || '默认标题',\n        subtitle: props.chart.subtitle || '',\n        zbcodeArr: props.chart.zbcodeArr || [],\n        cityCodeArr: props.config.cityCodeArr || [],\n        dbCode: props.chart.dbCode || 'nd',\n        unit: props.chart.unit || '',\n        exceptName: props.chart.exceptName || '',\n        legendTop: props.chart.legendTop,\n        gridTop: props.chart.gridTop,\n        chartType: currentChartType.value,\n        yearLimit: yearLimit.value,\n        isHorizontal: isHorizontal.value,\n        legendAllSelected: legendAllSelected.value\n      };\n\n      logger.debug('调用 getCommonChartOption 的参数:', chartConfig);\n\n      return getCommonChartOption(chartConfig);\n    });\n\n    // 设置图表类型\n    const setChartType = (type, horizontal) => {\n      currentChartType.value = type;\n      isHorizontal.value = horizontal;\n    };\n\n    // 切换图例全选状态\n    const toggleAllLegends = () => {\n      legendAllSelected.value = !legendAllSelected.value;\n    };\n\n    // 格式化滑块提示\n    const formatTooltip = (value) => {\n      return `${props.chart.title} (${value}年)`;\n    };\n\n    return {\n      currentChartType,\n      isHorizontal,\n      yearLimit,\n      legendAllSelected,\n      chartOption,\n      setChartType,\n      toggleAllLegends,\n      formatTooltip\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* 保持原有样式不变 */\n.chart-container {\n  width: 100%;\n  max-width: 1500px;\n  margin: 50px auto 60px;\n  padding: 16px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n  box-sizing: border-box;\n}\n\n.controls-wrap {\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  margin: 0 auto;\n  \n}\n\n.chart-controls {\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  margin-top: 16px;\n}\n\n.time-legend-row {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 16px;\n  gap: 16px;\n}\n\n.year-label {\n  flex-shrink: 0;\n  padding: 6px 12px;\n  font-size: 13px;\n  font-weight: 500;\n  color: #333;\n  background-color: #f0f0f0;\n  border-radius: 10px;\n}\n\n.year-slider {\n  min-width: 120px;\n  max-width: 200px;\n}\n\n::v-deep(.year-slider .el-slider__bar) {\n  background-color: #0bc2d6 !important;\n}\n\n::v-deep(.year-slider .el-slider__button) {\n  background-color: #0bc2d6 !important;\n  border-color: #0bc2d6 !important;\n}\n\n.toggle-legend-btn {\n  flex-shrink: 0;\n  padding: 6px 12px;\n  color: #fff;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.3s;\n  display: inline-flex;\n  align-items: center;\n  height: auto;\n}\n\n.toggle-legend-btn:active {\n  transform: scale(0.98);\n}\n\n.chart-button {\n  padding: 6px 12px;\n  margin: 10px;\n  font-size: 13px;\n  color: #fff;\n  background-color: #ccc;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.chart-button.is-active {\n  background-color: #0bc2d6;\n}\n\n.chart-card {\n  width: 95%;\n  height: 600px;\n  margin: 0 auto;\n  margin-top: 20px;\n}\n\n.chart-wrapper {\n  width: 100%;\n  height: 100%;\n\n}\n</style>","<!-- ChartView.vue -->\n<template>\n  <div ref=\"chartContainer\" class=\"chart-view\"></div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport * as echarts from 'echarts/core';\nimport { BarChart, LineChart } from 'echarts/charts';\nimport { GridComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { logger } from '@/utils/Logger.js';\nimport debounce from 'lodash-es/debounce';\n\n// 按需注册 ECharts 组件\necharts.use([\n  GridComponent,\n  TooltipComponent,\n  LegendComponent,\n  BarChart,\n  LineChart,\n  CanvasRenderer\n]);\n\nexport default {\n  name: 'ChartView',\n  props: {\n    option: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const chartContainer = ref(null);\n    let chartInstance = null;\n    let resizeHandler = null;\n\n    // 处理图例选择变化\n    const handleLegendChange = (params) => {\n      if (chartInstance && params && params.selected) {\n        if (Object.values(params.selected).every(Boolean)) {\n          chartInstance.dispatchAction({ type: 'legendInverseSelect' });\n        }\n      }\n    };\n\n    // 初始化图表 - 确保在 onMounted 中调用\n    const initChart = () => {\n      if (!chartContainer.value) {\n        return;\n      }\n      \n      // 确保有有效数据\n      if (!props.option || !props.option.series || props.option.series.length === 0) {\n\n        return;\n      }\n\n      // 销毁旧实例\n      if (chartInstance) {\n        chartInstance.dispose();\n        chartInstance = null;\n      }\n\n      // 创建新实例\n      chartInstance = echarts.init(chartContainer.value, null, {\n        renderer: 'canvas',\n        width: 'auto',\n        height: 'auto'\n      });\n\n      // 设置图表配置\n      chartInstance.setOption(props.option);\n      \n      // 绑定事件\n      chartInstance.on('legendselectchanged', handleLegendChange);\n      \n      // 初始化防抖resize\n      resizeHandler = debounce(() => {\n        if (chartInstance) {\n          chartInstance.resize();\n        }\n      }, 200);\n      \n      window.addEventListener('resize', resizeHandler);\n    };\n\n    // 更新图表\n    const updateChart = (newOption) => {\n      if (!chartInstance) {\n        initChart();\n        return;\n      }\n      \n      if (!newOption || !newOption.series || newOption.series.length === 0) {\n        return;\n      }\n      \n      chartInstance.setOption(newOption, true);\n    };\n\n    // 确保在 DOM 完全挂载后初始化\n    onMounted(() => {\n      initChart();\n    });\n\n    // 监听 option 变化\n    watch(() => props.option, (newOption) => {\n      logger.debug('option 发生变化，更新图表');\n      updateChart(newOption);\n    }, { deep: true });\n\n    // 清理工作\n    onBeforeUnmount(() => {\n      logger.debug('组件即将卸载，清理资源');\n      if (resizeHandler) {\n        window.removeEventListener('resize', resizeHandler);\n        resizeHandler.cancel();\n        resizeHandler = null;\n      }\n      if (chartInstance) {\n        chartInstance.dispose();\n        chartInstance = null;\n      }\n    });\n\n    return {\n      updateChart,\n      chartContainer // 暴露给模板\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chart-view {\n  width: 100%;\n  height: 100%;\n  \n  position: relative;\n\n}\n</style>","import { render } from \"./ChartView.vue?vue&type=template&id=649f3212&scoped=true\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js\"\n\nimport \"./ChartView.vue?vue&type=style&index=0&id=649f3212&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-649f3212\"]])\n\nexport default __exports__","import { render } from \"./ChartContainer.vue?vue&type=template&id=ce47ef1a&scoped=true\"\nimport script from \"./ChartContainer.vue?vue&type=script&lang=js\"\nexport * from \"./ChartContainer.vue?vue&type=script&lang=js\"\n\nimport \"./ChartContainer.vue?vue&type=style&index=0&id=ce47ef1a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ce47ef1a\"]])\n\nexport default __exports__","import { render } from \"./ChartPage.vue?vue&type=template&id=ce7a7c4e&scoped=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPage.vue?vue&type=style&index=0&id=ce7a7c4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ce7a7c4e\"]])\n\nexport default __exports__"],"names":["$data","returnData","_createBlock","_component_ChartPage","key","chartMetaList","charts","config","showToggles","_createCommentVNode","name","components","ChartPage","data","WHGDPCharts","source","mounted","this","loadChartData","e","logger","error","__exports__","render","class","_createElementBlock","_hoisted_1","$options","internalShowToggles","_hoisted_2","_createElementVNode","_hoisted_3","_normalizeClass","viewMode","active","onClick","_cache","$event","_Fragment","_renderList","chartsToRender","chart","_component_ChartContainer","id","$props","$setup","currentChartType","isHorizontal","setChartType","_hoisted_4","_hoisted_5","_createVNode","_component_el_slider","modelValue","yearLimit","min","max","step","formatTooltip","style","_normalizeStyle","backgroundColor","legendAllSelected","args","toggleAllLegends","_hoisted_6","_component_ChartView","option","chartOption","ref","echarts","GridComponent","TooltipComponent","LegendComponent","BarChart","LineChart","CanvasRenderer","props","type","Object","required","default","setup","chartContainer","chartInstance","resizeHandler","handleLegendChange","params","selected","values","every","Boolean","dispatchAction","initChart","value","series","length","dispose","renderer","width","height","setOption","on","debounce","resize","window","addEventListener","updateChart","newOption","onMounted","watch","debug","deep","onBeforeUnmount","removeEventListener","cancel","ChartView","validator","title","zbcodeArr","String","includes","computed","chartConfig","subtitle","cityCodeArr","dbCode","unit","exceptName","legendTop","gridTop","chartType","getCommonChartOption","horizontal","ChartContainer","Array","dbCodes","Set","map","c","has","defaultViewMode","filteredCharts","filter","sj","dataList","isArray","created"],"sourceRoot":""}