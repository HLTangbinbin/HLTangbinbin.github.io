{"version":3,"file":"js/252.bf12038e.js","mappings":"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","sources":["webpack://tangdata/./src/components/MajorProvincial/ProvincialRealEstateSell.vue","webpack://tangdata/./src/components/MajorProvincial/ProvincialRealEstateSell.vue?b908","webpack://tangdata/./src/components/common/ChartPage.vue","webpack://tangdata/./src/components/common/ChartContainer.vue","webpack://tangdata/./src/components/common/ChartView.vue","webpack://tangdata/./src/components/common/ChartView.vue?7c38","webpack://tangdata/./src/components/common/ChartContainer.vue?9df1","webpack://tangdata/./src/components/common/ChartPage.vue?6ceb"],"sourcesContent":["<template>\n  <ChartPage\n    v-if=\"returnData\"\n    :chartMetaList=\"charts\"\n    :returnData=\"returnData\"\n    :config=\"config\" \n    :showToggles=\"false\" ></ChartPage>\n</template>\n\n<script>\nimport ChartPage from '@/components/common/ChartPage.vue';\nimport { ProvincialRealEstateSellCharts } from '@/config/chartMetaProvince.js';\n\nimport { loadChartData } from '@/config/dataLoader.js';\nimport { logger } from '@/utils/Logger.js';\n\nexport default {\n  name: 'ProvincialRealEstateSell',\n  components: { ChartPage },\n  data() {\n    return {\n      charts: ProvincialRealEstateSellCharts.charts,\n      returnData: null,\n      config: ProvincialRealEstateSellCharts.source\n    };\n  },\n  async mounted() {\n    try {\n      this.returnData = await loadChartData(\n        this.config\n      );\n    } catch (e) {\n      logger.error('加载数据失败', e);\n    }\n  }\n};\n\n</script>\n","import { render } from \"./ProvincialRealEstateSell.vue?vue&type=template&id=668eb864\"\nimport script from \"./ProvincialRealEstateSell.vue?vue&type=script&lang=js\"\nexport * from \"./ProvincialRealEstateSell.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"echart-container\">\n    <div v-if=\"internalShowToggles\" class=\"segment-container\">\n      <div class=\"segment-wrapper\">\n        <div class=\"segment-bg\" :class=\"viewMode\"></div>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'monthly' }\"\n          @click=\"viewMode = 'monthly'\">月度</button>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'yearly' }\"\n          @click=\"viewMode = 'yearly'\">年度</button>\n      </div>\n    </div>\n\n    <ChartContainer v-for=\"chart in chartsToRender\" :key=\"chart.id\" :chart=\"chart\" :returnData=\"returnData\"\n      :config=\"config\" :viewMode=\"viewMode\" />\n  </div>\n</template>\n\n<script>\nimport ChartContainer from './ChartContainer.vue';\n\nexport default {\n  components: { ChartContainer },\n  props: {\n    chartMetaList: Array,\n    returnData: Object,\n    config: Object,\n    showToggles: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      viewMode: 'monthly',\n    };\n  },\n  computed: {\n    internalShowToggles() {\n      if (!this.showToggles) return false;\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      return dbCodes.has('yd') && dbCodes.has('nd');\n    },\n    defaultViewMode() {\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      if (dbCodes.has('yd')) return 'monthly';\n      if (dbCodes.has('nd')) return 'yearly';\n      return 'monthly';\n    },\n    filteredCharts() {\n      if (!this.internalShowToggles) return this.chartMetaList;\n      return this.chartMetaList.filter((c) =>\n        this.viewMode === 'monthly' ? c.dbCode === 'yd' : c.dbCode === 'nd'\n      );\n    },\n    chartsToRender() {\n      return this.filteredCharts.filter((chart) => {\n        const sj = this.returnData?.dataList?.sj?.[chart.dbCode];\n        return Array.isArray(sj) && sj.length > 0;\n      });\n    },\n  },\n  created() {\n    this.viewMode = this.defaultViewMode;\n  },\n};\n</script>\n\n<style scoped>\n.segment-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 30px;\n}\n\n.segment-wrapper {\n  position: relative;\n  display: flex;\n  width: 200px;\n  height: 45px;\n  background-color: #fff;\n  border-radius: 999px;\n  padding: 2px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  /* ✅ 外部阴影更明显 */\n}\n\n/* 背景高亮滑块 */\n.segment-bg {\n  position: absolute;\n  top: 2px;\n  bottom: 2px;\n  width: 50%;\n  border-radius: 999px;\n  background-color: #0bc2d6;\n  transition: left 0.25s ease;\n  z-index: 0;\n}\n\n.segment-bg.monthly {\n  left: 2px;\n}\n\n.segment-bg.yearly {\n  left: 50%;\n}\n\n/* 按钮本体 */\n.segment-button {\n  position: relative;\n  flex: 1;\n  z-index: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 999px;\n  cursor: pointer;\n  transition: color 0.25s ease;\n}\n\n.segment-button.active {\n  color: #fff;\n}\n\n\n</style>","<template>\n    <div class=\"chart-container\">\n      <h3 class=\"chart-title\">{{ chart.title }}</h3>\n      <h4 v-if=\"chart.subtitle\" class=\"chart-subtitle\">{{ chart.subtitle }}</h4>\n  \n      <div class=\"controls-wrap\">\n        <div class=\"chart-controls\">\n          <button :class=\"['chart-button', { 'is-active': chartType === 'bar' && !isHorizontal }]\"\n            @click=\"setChartType('bar', false)\">柱状图</button>\n          <button :class=\"['chart-button', { 'is-active': chartType === 'bar' && isHorizontal }]\"\n            @click=\"setChartType('bar', true)\">条形图</button>\n          <button :class=\"['chart-button', { 'is-active': chartType === 'line' && !isHorizontal }]\"\n            @click=\"setChartType('line', false)\">折线图</button>\n        </div>\n  \n        <div class=\"time-legend-row\">\n          <label class=\"year-label\">滑动时间</label>\n          <el-slider \n            v-model=\"yearLimit\" \n            :min=\"1\" \n            :max=\"20\" \n            :step=\"1\" \n            show-tooltip \n            :format-tooltip=\"formatTooltip\"\n            class=\"year-slider\" \n          />\n          <button \n            class=\"toggle-legend-btn\" \n            :style=\"{ backgroundColor: legendAllSelected ? '#0bc2d6' : '#ccc' }\"\n            @click=\"toggleAllLegends\"\n          >\n            {{ legendAllSelected ? '一键未选' : '一键全选' }}\n          </button>\n        </div>\n      </div>\n  \n      <div class=\"chart-card\">\n        <ChartView \n          :option=\"chartOption\" \n          class=\"chart-wrapper\" \n          @legendselectchanged=\"handleLegendSelect\"\n        />\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { computed, ref, watch } from 'vue';\n  import ChartView from './ChartView.vue';\n  import { getCommonChartOption } from '@/utils/CommonUtil.js';\n  \n  export default {\n    name: 'ChartContainer',\n    components: { ChartView },\n    props: {\n      chart: {\n        type: Object,\n        required: true\n      },\n      returnData: {\n        type: Object,\n        required: true\n      },\n      config: {\n        type: Object,\n        default: () => ({})\n      },\n      viewMode: {\n        type: String,\n        default: 'monthly'\n      }\n    },\n    setup(props) {\n      // 图表状态\n      const chartType = ref('bar');\n      const isHorizontal = ref(false);\n      const yearLimit = ref(10);\n      const legendStates = ref({});\n      const legendAllSelected = ref(true);\n      \n      // 计算图表配置\n      const chartOption = computed(() => {\n        const params = {\n          data: props.returnData,\n          cityCodeArr: props.config?.cityCodeArr || [],\n          title: props.chart.title,\n          subtitle: props.chart.subtitle,\n          dbCode: props.chart.dbCode,\n          zbcodeArr: props.chart.zbcodeArr,\n          unit: props.chart.unit,\n          exceptName: props.chart.exceptName,\n          legendTop: getAdjustedLegendTop(),\n          gridTop: props.chart.gridTop,\n          echrtId: props.chart.id,\n          chartType: chartType.value,\n          yearLimit: yearLimit.value,\n          isHorizontal: isHorizontal.value,\n          legendStates: legendStates.value,\n          legendAllSelected: legendAllSelected.value\n        };\n        \n        const option = getCommonChartOption(params);\n        if (option.title) delete option.title; // 防止重复标题显示\n        \n        return option;\n      });\n      \n      // 获取调整后的图例位置\n      const getAdjustedLegendTop = () => {\n        const baseTop = props.chart.legendTop || '15%';\n        \n        // 移动端适配\n        if (window.innerWidth <= 768) {\n          if (typeof baseTop === 'string' && baseTop.endsWith('%')) {\n            const num = parseFloat(baseTop);\n            return (num / 3) + '%';\n          }\n          if (typeof baseTop === 'number') {\n            return baseTop / 3;\n          }\n          return '5%';\n        }\n        \n        return baseTop;\n      };\n      \n      // 设置图表类型\n      const setChartType = (type, horizontal) => {\n        chartType.value = type;\n        isHorizontal.value = horizontal;\n      };\n      \n      // 处理图例选择\n      const handleLegendSelect = (params) => {\n        if (params?.name) {\n          // 更新单个图例状态\n          legendStates.value = {\n            ...legendStates.value,\n            [params.name]: params.selected[params.name]\n          };\n          \n          // 更新全选状态\n          updateAllSelectedState();\n        }\n      };\n      \n      // 更新全选状态\n      const updateAllSelectedState = () => {\n        const values = Object.values(legendStates.value);\n        legendAllSelected.value = values.length > 0 && values.every(selected => selected);\n      };\n      \n      // 切换所有图例\n      const toggleAllLegends = () => {\n        const newState = !legendAllSelected.value;\n        const newLegendStates = {};\n        \n        Object.keys(legendStates.value).forEach(name => {\n          newLegendStates[name] = newState;\n        });\n        \n        legendStates.value = newLegendStates;\n        legendAllSelected.value = newState;\n      };\n      \n      // 时间变化时重置图例\n      watch(yearLimit, () => {\n        // 重置为全选\n        const newLegendStates = {};\n        Object.keys(legendStates.value).forEach(name => {\n          newLegendStates[name] = true;\n        });\n        \n        legendStates.value = newLegendStates;\n        legendAllSelected.value = true;\n      });\n      \n      // 工具提示\n      const formatTooltip = (val) => {\n        const unit = props.viewMode === 'monthly' ? '个月' : '年';\n        return `近 ${val} ${unit}`;\n      };\n  \n      return { \n        chartType,\n        isHorizontal,\n        yearLimit,\n        legendAllSelected,\n        chartOption,\n        setChartType,\n        handleLegendSelect,\n        toggleAllLegends,\n        formatTooltip\n      };\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .chart-container {\n    width: 100%;\n    max-width: 1500px;\n    margin: 50px auto 60px;\n    padding: 16px;\n    box-sizing: border-box;\n    background-color: #fff;\n    border-radius: 12px;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n  }\n  \n  .chart-title {\n    text-align: center;\n    font-size: 18px;\n    font-weight: 700;\n    color: #333;\n    margin: 24px 0 6px;\n  }\n  \n  .chart-subtitle {\n    font-size: 13px;\n    font-weight: bold;\n    line-height: 20px;\n    color: #666;\n    text-align: center;\n    white-space: pre-line;\n    overflow-wrap: break-word;\n    margin: 0 auto 12px;\n    max-width: 80vw;\n  }\n  \n  .controls-wrap {\n    display: flex;\n    flex-direction: column;\n    width: fit-content;\n    margin: 0 auto;\n  }\n  \n  .chart-controls {\n    display: flex;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 16px;\n  }\n  \n  .time-legend-row {\n    display: flex;\n    justify-content: center;\n    margin-top: 16px;\n    gap: 16px;\n    align-items: center;\n  }\n  \n  .year-label {\n    flex-shrink: 0;\n    display: inline-block;\n    padding: 6px 12px;\n    font-size: 13px;\n    font-weight: 500;\n    border-radius: 10px;\n    color: #333;\n    background-color: #f0f0f0;\n  }\n  \n  .year-slider {\n    max-width: 200px;\n    min-width: 120px;\n  }\n  \n  /* element-plus 滑块样式 */\n  ::v-deep(.year-slider .el-slider__bar) {\n    background-color: #0bc2d6 !important;\n  }\n  \n  ::v-deep(.year-slider .el-slider__button) {\n    background-color: #0bc2d6 !important;\n    border-color: #0bc2d6 !important;\n  }\n  \n  .toggle-legend-btn {\n    flex-shrink: 0;\n    display: inline-flex;\n    padding: 6px 12px;\n    height: auto;\n    align-items: center;\n    color: #fff;\n    border: none;\n    border-radius: 10px;\n    cursor: pointer;\n    transition: background 0.3s;\n  }\n  \n  .chart-button {\n    padding: 6px 12px;\n    margin: 10px;\n    font-size: 13px;\n    border-radius: 10px;\n    background-color: #ccc;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n    transition: background 0.3s;\n  }\n  \n  .chart-button.is-active {\n    background-color: #0bc2d6;\n  }\n  \n  .chart-card {\n    width: 95%;\n    height: 600px;\n    margin: 0 auto;\n  }\n  \n  .chart-wrapper {\n    width: 100%;\n    height: 100%;\n  }\n  </style>","<template>\n  <div ref=\"chartContainer\" class=\"chart-view\"></div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport * as echarts from 'echarts';\n\nexport default {\n  props: ['option'],\n  setup(props) {\n    const chartContainer = ref(null);\n    let chartInstance = null;\n\n    const initChart = () => {\n      if (!chartContainer.value) {\n        console.error('容器元素未找到');\n        return;\n      }\n\n      // 销毁旧实例\n      if (chartInstance) {\n        chartInstance.dispose();\n      }\n\n      try {\n        // 创建实例\n        chartInstance = echarts.init(chartContainer.value);\n        \n        // 设置基础配置（确保至少显示坐标轴）\n        const baseOption = {\n          xAxis: { type: 'category', data: ['A', 'B', 'C'] },\n          yAxis: { type: 'value' },\n          series: [{ data: [1, 2, 3], type: 'line' }]\n        };\n        chartInstance.setOption(baseOption);\n        \n        // 设置实际配置\n        if (props.option) {\n          console.log('设置实际配置:', props.option);\n          chartInstance.setOption(props.option);\n        }\n        \n        // 立即resize\n        chartInstance.resize();\n        \n        // 调试：打印当前配置\n        setTimeout(() => {\n          console.log('当前生效配置:', chartInstance.getOption());\n        }, 100);\n      } catch (e) {\n        console.error('图表初始化失败:', e);\n      }\n    };\n\n    onMounted(() => {\n      console.log('图表挂载，开始初始化...');\n      initChart();\n    });\n\n    watch(() => props.option, (newVal) => {\n      console.log('option变化:', newVal);\n      if (chartInstance && newVal) {\n        chartInstance.setOption(newVal);\n      }\n    }, { deep: true });\n\n    onBeforeUnmount(() => {\n      chartInstance?.dispose();\n    });\n\n    return { chartContainer };\n  }\n};\n</script>\n\n<style scoped>\n.chart-view {\n  width: 100%;\n  height: 400px; /* 必须指定高度 */\n  min-height: 300px;\n}\n</style>","import { render } from \"./ChartView.vue?vue&type=template&id=4f5c540a&scoped=true\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js\"\n\nimport \"./ChartView.vue?vue&type=style&index=0&id=4f5c540a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4f5c540a\"]])\n\nexport default __exports__","import { render } from \"./ChartContainer.vue?vue&type=template&id=4e2d40b0&scoped=true\"\nimport script from \"./ChartContainer.vue?vue&type=script&lang=js\"\nexport * from \"./ChartContainer.vue?vue&type=script&lang=js\"\n\nimport \"./ChartContainer.vue?vue&type=style&index=0&id=4e2d40b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4e2d40b0\"]])\n\nexport default __exports__","import { render } from \"./ChartPage.vue?vue&type=template&id=ce7a7c4e&scoped=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPage.vue?vue&type=style&index=0&id=ce7a7c4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ce7a7c4e\"]])\n\nexport default __exports__"],"names":["$data","returnData","_createBlock","_component_ChartPage","key","chartMetaList","charts","config","showToggles","_createCommentVNode","name","components","ChartPage","data","ProvincialRealEstateSellCharts","source","mounted","this","loadChartData","e","logger","error","__exports__","render","class","_createElementBlock","_hoisted_1","$options","internalShowToggles","_hoisted_2","_createElementVNode","_hoisted_3","_normalizeClass","viewMode","active","onClick","_cache","$event","_Fragment","_renderList","chartsToRender","chart","_component_ChartContainer","id","$props","_toDisplayString","title","subtitle","_hoisted_4","_hoisted_5","$setup","chartType","isHorizontal","setChartType","_hoisted_6","_hoisted_7","_createVNode","_component_el_slider","modelValue","yearLimit","min","max","step","formatTooltip","style","_normalizeStyle","backgroundColor","legendAllSelected","args","toggleAllLegends","_hoisted_8","_component_ChartView","option","chartOption","onLegendselectchanged","handleLegendSelect","ref","props","setup","chartContainer","chartInstance","initChart","value","dispose","echarts","baseOption","xAxis","type","yAxis","series","setOption","resize","setTimeout","onMounted","watch","newVal","deep","onBeforeUnmount","ChartView","Object","required","default","String","legendStates","computed","params","cityCodeArr","dbCode","zbcodeArr","unit","exceptName","legendTop","getAdjustedLegendTop","gridTop","echrtId","getCommonChartOption","baseTop","window","innerWidth","endsWith","num","parseFloat","horizontal","selected","updateAllSelectedState","values","length","every","newState","newLegendStates","keys","forEach","val","ChartContainer","Array","Boolean","dbCodes","Set","map","c","has","defaultViewMode","filteredCharts","filter","sj","dataList","isArray","created"],"sourceRoot":""}