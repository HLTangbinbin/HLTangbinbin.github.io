{"version":3,"file":"js/6351.c525ae2e.js","mappings":"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","sources":["webpack://tangdata/./src/components/common/ChartPage.vue","webpack://tangdata/./src/components/common/ChartContainer.vue","webpack://tangdata/./src/components/common/ChartView.vue","webpack://tangdata/./src/components/common/ChartView.vue?7c38","webpack://tangdata/./src/components/common/ChartContainer.vue?9df1","webpack://tangdata/./src/components/common/ChartPage.vue?6ceb"],"sourcesContent":["<template>\n  <div class=\"echart-container\">\n    <div v-if=\"internalShowToggles\" class=\"segment-container\">\n      <div class=\"segment-wrapper\">\n        <div class=\"segment-bg\" :class=\"viewMode\"></div>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'monthly' }\"\n          @click=\"viewMode = 'monthly'\">月度</button>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'yearly' }\"\n          @click=\"viewMode = 'yearly'\">年度</button>\n      </div>\n    </div>\n\n    <ChartContainer v-for=\"chart in chartsToRender\" :key=\"chart.id\" :chart=\"chart\" :returnData=\"returnData\"\n      :config=\"config\" :viewMode=\"viewMode\" />\n  </div>\n</template>\n\n<script>\nimport ChartContainer from './ChartContainer.vue';\n\nexport default {\n  components: { ChartContainer },\n  props: {\n    chartMetaList: Array,\n    returnData: Object,\n    config: Object,\n    showToggles: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      viewMode: 'monthly',\n    };\n  },\n  computed: {\n    internalShowToggles() {\n      if (!this.showToggles) return false;\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      return dbCodes.has('yd') && dbCodes.has('nd');\n    },\n    defaultViewMode() {\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      if (dbCodes.has('yd')) return 'monthly';\n      if (dbCodes.has('nd')) return 'yearly';\n      return 'monthly';\n    },\n    filteredCharts() {\n      if (!this.internalShowToggles) return this.chartMetaList;\n      return this.chartMetaList.filter((c) =>\n        this.viewMode === 'monthly' ? c.dbCode === 'yd' : c.dbCode === 'nd'\n      );\n    },\n    chartsToRender() {\n      return this.filteredCharts.filter((chart) => {\n        const sj = this.returnData?.dataList?.sj?.[chart.dbCode];\n        return Array.isArray(sj) && sj.length > 0;\n      });\n    },\n  },\n  created() {\n    this.viewMode = this.defaultViewMode;\n  },\n};\n</script>\n\n<style scoped>\n.segment-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 30px;\n}\n\n.segment-wrapper {\n  position: relative;\n  display: flex;\n  width: 200px;\n  height: 45px;\n  background-color: #fff;\n  border-radius: 999px;\n  padding: 2px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  /* ✅ 外部阴影更明显 */\n}\n\n/* 背景高亮滑块 */\n.segment-bg {\n  position: absolute;\n  top: 2px;\n  bottom: 2px;\n  width: 50%;\n  border-radius: 999px;\n  background-color: #0bc2d6;\n  transition: left 0.25s ease;\n  z-index: 0;\n}\n\n.segment-bg.monthly {\n  left: 2px;\n}\n\n.segment-bg.yearly {\n  left: 50%;\n}\n\n/* 按钮本体 */\n.segment-button {\n  position: relative;\n  flex: 1;\n  z-index: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 999px;\n  cursor: pointer;\n  transition: color 0.25s ease;\n}\n\n.segment-button.active {\n  color: #fff;\n}\n\n\n</style>","<template>\n    <div class=\"chart-container\">\n      <h3 class=\"chart-title\">{{ chart.title }}</h3>\n      <h4 v-if=\"chart.subtitle\" class=\"chart-subtitle\">{{ chart.subtitle }}</h4>\n  \n      <div class=\"controls-wrap\">\n        <div class=\"chart-controls\">\n          <button :class=\"['chart-button', { 'is-active': chartType === 'bar' && !isHorizontal }]\"\n                  @click=\"setChartType('bar', false)\">\n            柱状图\n          </button>\n          <button :class=\"['chart-button', { 'is-active': chartType === 'bar' && isHorizontal }]\"\n                  @click=\"setChartType('bar', true)\">\n            条形图\n          </button>\n          <button :class=\"['chart-button', { 'is-active': chartType === 'line' && !isHorizontal }]\"\n                  @click=\"setChartType('line', false)\">\n            折线图\n          </button>\n        </div>\n  \n        <div class=\"time-legend-row\">\n          <label class=\"year-label\">滑动时间</label>\n          <el-slider v-model=\"yearLimit\" :min=\"1\" :max=\"20\" :step=\"1\" show-tooltip :format-tooltip=\"formatTooltip\"\n                     class=\"year-slider\" />\n          <button class=\"toggle-legend-btn\" :style=\"{ backgroundColor: legendAllSelected ? '#0bc2d6' : '#ccc' }\"\n                  @click=\"toggleAllLegends\">\n            {{ legendAllSelected ? '一键未选' : '一键全选' }}\n          </button>\n        </div>\n      </div>\n  \n      <div class=\"chart-card\">\n        <ChartView ref=\"chartViewRef\" :option=\"chartOption\" :debug=\"debug\" class=\"chart-wrapper\"\n                   @legendselectchanged=\"handleLegendSelect\" />\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, watch, onMounted, onBeforeUnmount } from 'vue';\n  import { debounce } from 'lodash-es';\n  import ChartView from './ChartView.vue';\n  import { getCommonChartOption } from '@/utils/CommonUtil.js';\n  \n  export default {\n    name: 'ChartContainer',\n    components: { ChartView },\n    props: {\n      chart: {\n        type: Object,\n        required: true,\n        validator: (val) => ['title', 'zbcodeArr'].every(key => key in val)\n      },\n      returnData: {\n        type: Object,\n        required: true\n      },\n      config: {\n        type: Object,\n        default: () => ({})\n      },\n      viewMode: {\n        type: String,\n        default: 'monthly',\n        validator: (val) => ['monthly', 'yearly'].includes(val)\n      },\n      debug: {\n        type: Boolean,\n        default: false\n      }\n    },\n    setup(props, { expose }) {\n      const chartViewRef = ref(null);\n      const chartType = ref('bar');\n      const isHorizontal = ref(false);\n      const yearLimit = ref(10);\n      const legendStates = ref({});\n      const legendAllSelected = ref(true);\n      const chartOption = ref({});\n  \n      // 更新全选状态\n      const updateAllSelectedState = () => {\n        const allNames = Object.keys(legendStates.value);\n        legendAllSelected.value = allNames.length > 0 &&\n            allNames.every(name => legendStates.value[name]);\n      };\n      \n      // 初始化图例状态\n      const initLegendStates = () => {\n        const initialOption = getCommonChartOption({\n          data: props.returnData,\n          zbcodeArr: props.chart.zbcodeArr,\n          cityCodeArr: props.config?.cityCodeArr || [],\n          isHorizontal: isHorizontal.value\n        });\n        \n        if (initialOption.legend?.data) {\n          // 初始化为全选状态\n          legendStates.value = initialOption.legend.data.reduce((acc, name) => {\n            acc[name] = true;\n            return acc;\n          }, {});\n          updateAllSelectedState();\n        }\n      };\n      \n      // 创建图表配置\n      const getChartOption = () => {\n        const params = {\n          data: props.returnData,\n          title: props.chart.title,\n          subtitle: props.chart.subtitle,\n          zbcodeArr: props.chart.zbcodeArr,\n          cityCodeArr: props.config?.cityCodeArr || [],\n          dbCode: props.chart.dbCode || 'nd',\n          unit: props.chart.unit || '',\n          exceptName: props.chart.exceptName || '',\n          legendTop: '5%',\n          gridTop: props.chart.gridTop,\n          chartType: chartType.value,\n          yearLimit: yearLimit.value,\n          isHorizontal: isHorizontal.value,\n          legendAllSelected: legendAllSelected.value,\n          legendStates: { ...legendStates.value },\n          forceMultiSelect: true\n        };\n        \n        const option = getCommonChartOption(params);\n        delete option.title; // 确保删除title\n        return option;\n      };\n      \n      // 更新图表配置\n      const updateChartOption = () => {\n        chartOption.value = getChartOption();\n      };\n      \n      // 处理图例选择事件 - 关键修复\n      const handleLegendSelect = (event) => {\n        if (event?.name !== undefined && event?.selected !== undefined) {\n          // 只更新单个图例状态\n          legendStates.value = {\n            ...legendStates.value,\n            [event.name]: event.selected\n          };\n          updateAllSelectedState();\n          updateChartOption();\n        }\n      };\n      \n      // 一键全选/取消\n      const toggleAllLegends = () => {\n        const newState = !legendAllSelected.value;\n        legendAllSelected.value = newState;\n        \n        // 创建新的状态对象\n        const newLegendStates = {};\n        Object.keys(legendStates.value).forEach(name => {\n          newLegendStates[name] = newState;\n        });\n        \n        // 更新状态\n        legendStates.value = newLegendStates;\n        updateChartOption();\n      };\n      \n      // 设置图表类型\n      const setChartType = (type, horizontal) => {\n        chartType.value = type;\n        isHorizontal.value = horizontal;\n        updateChartOption();\n      };\n      \n      // 格式化工具提示\n      const formatTooltip = (val) => {\n        return `${val}年`;\n      };\n      \n      // 添加防抖的resize处理函数\n      const debouncedResize = debounce(() => {\n        chartViewRef.value?.getChartInstance()?.resize();\n      }, 300);\n      \n      // 初始化\n      onMounted(() => {\n        initLegendStates();\n        updateChartOption();\n        window.addEventListener('resize', debouncedResize);\n      });\n      \n      onBeforeUnmount(() => {\n        window.removeEventListener('resize', debouncedResize);\n        debouncedResize.cancel();\n      });\n      \n      // 监听相关状态变化\n      watch(yearLimit, updateChartOption);\n      \n      // 暴露方法\n      const getChartInstance = () => chartViewRef.value?.getChartInstance();\n      \n      expose({\n        getChartInstance\n      });\n      \n      return {\n        chartViewRef,\n        chartType,\n        isHorizontal,\n        yearLimit,\n        legendAllSelected,\n        chartOption,\n        setChartType,\n        handleLegendSelect,\n        toggleAllLegends,\n        formatTooltip\n      };\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .chart-container {\n    width: 100%;\n    max-width: 1500px;\n    margin: 50px auto 60px;\n    padding: 16px;\n    background-color: #fff;\n    border-radius: 12px;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n    box-sizing: border-box;\n  }\n  \n  .chart-title {\n    margin: 24px 0 6px;\n    font-size: 18px;\n    font-weight: 700;\n    color: #333;\n    text-align: center;\n  }\n  \n  .chart-subtitle {\n    margin: 0 auto 12px;\n    font-size: 13px;\n    font-weight: bold;\n    line-height: 20px;\n    color: #666;\n    text-align: center;\n    white-space: pre-line;\n    overflow-wrap: break-word;\n    max-width: 80vw;\n  }\n  \n  .controls-wrap {\n    display: flex;\n    flex-direction: column;\n    width: fit-content;\n    margin: 0 auto;\n  }\n  \n  .chart-controls {\n    display: flex;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 16px;\n  }\n  \n  .time-legend-row {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 16px;\n    gap: 16px;\n  }\n  \n  .year-label {\n    flex-shrink: 0;\n    padding: 6px 12px;\n    font-size: 13px;\n    font-weight: 500;\n    color: #333;\n    background-color: #f0f0f0;\n    border-radius: 10px;\n  }\n  \n  .year-slider {\n    min-width: 120px;\n    max-width: 200px;\n  }\n  \n  ::v-deep(.year-slider .el-slider__bar) {\n    background-color: #0bc2d6 !important;\n  }\n  \n  ::v-deep(.year-slider .el-slider__button) {\n    background-color: #0bc2d6 !important;\n    border-color: #0bc2d6 !important;\n  }\n  \n  .toggle-legend-btn {\n    flex-shrink: 0;\n    padding: 6px 12px;\n    color: #fff;\n    border: none;\n    border-radius: 10px;\n    cursor: pointer;\n    transition: all 0.3s;\n    display: inline-flex;\n    align-items: center;\n    height: auto;\n  }\n  \n  .toggle-legend-btn:active {\n    transform: scale(0.98);\n  }\n  \n  .chart-button {\n    padding: 6px 12px;\n    margin: 10px;\n    font-size: 13px;\n    color: #fff;\n    background-color: #ccc;\n    border: none;\n    border-radius: 10px;\n    cursor: pointer;\n    transition: background 0.3s;\n  }\n  \n  .chart-button.is-active {\n    background-color: #0bc2d6;\n  }\n  \n  .chart-card {\n    width: 95%;\n    height: 600px;\n    margin: 0 auto;\n  }\n  \n  .chart-wrapper {\n    width: 100%;\n    height: 100%;\n  }\n  </style>","<template>\n  <div ref=\"chartContainer\" class=\"chart-view\"></div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport * as echarts from 'echarts';\nimport { debounce } from 'lodash-es';\nimport { logger } from '@/utils/Logger.js';\n\nexport default {\n  name: 'ChartView',\n  props: {\n    option: {\n      type: Object,\n      required: true\n    },\n    debug: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['legendselectchanged'],\n  setup(props, { emit }) {\n    const chartContainer = ref(null);\n    const chartInstance = ref(null);\n\n    // 基础配置\n    const getBaseOption = () => ({\n      animation: true,\n      tooltip: { trigger: 'axis' },\n      legend: {\n        selectedMode: 'multiple',\n        selector: false,\n        left: 'center',\n        top: '5%'\n      },\n      grid: { containLabel: true }\n    });\n\n    // 处理图例选择事件 - 关键修复\n    const handleLegendSelect = (params) => {\n      if (params?.name !== undefined && params?.selected !== undefined) {\n        // 只传递变化的图例状态\n        emit('legendselectchanged', {\n          name: params.name,\n          selected: params.selected[params.name]\n        });\n      }\n    };\n\n    // 应用配置到图表\n    const applyOption = (option) => {\n      if (!chartInstance.value) return;\n\n      try {\n        // 创建安全配置副本\n        const safeOption = JSON.parse(JSON.stringify(option));\n        \n        // 确保系列有效\n        safeOption.series = Array.isArray(safeOption.series) \n          ? safeOption.series.filter(s => s && s.type) \n          : [];\n\n        // 直接使用传入的图例状态\n        const mergedOption = {\n          ...getBaseOption(),\n          ...safeOption,\n          legend: {\n            ...safeOption.legend,\n            selectedMode: 'multiple',\n            selector: false,\n            selected: safeOption.legend?.selected || {}\n          }\n        };\n\n        if (props.debug) {\n          console.log('[ChartView] 应用配置:', mergedOption);\n          logger.debug('获取当前的option', mergedOption);\n        }\n\n        // 应用配置\n        chartInstance.value.setOption(mergedOption, {\n          notMerge: false,\n          lazyUpdate: true\n        });\n\n        chartInstance.value.resize();\n      } catch (e) {\n        logger.error('[ChartView] 配置应用失败:', e);\n        recoveryFallback();\n      }\n    };\n\n    // 应急恢复\n    const recoveryFallback = () => {\n      if (!chartInstance.value) return;\n      try {\n        chartInstance.value.setOption(getBaseOption(), {\n          notMerge: true\n        });\n      } catch (e) {\n        logger.error('应急恢复失败:', e);\n      }\n    };\n\n    // 初始化图表\n    const initChart = () => {\n      if (!chartContainer.value) {\n        logger.error('[ChartView] 容器元素未找到');\n        return;\n      }\n\n      try {\n        // 销毁旧实例\n        if (chartInstance.value) {\n          chartInstance.value.dispose();\n        }\n        \n        // 创建新实例\n        chartInstance.value = echarts.init(chartContainer.value, null, {\n          renderer: 'canvas',\n          useDirtyRect: true\n        });\n\n        // 设置事件监听\n        chartInstance.value.on('legendselectchanged', handleLegendSelect);\n        \n        // 添加错误监听器\n        chartInstance.value.on('error', (error) => {\n          logger.error('ECharts 内部错误:', error);\n        });\n\n        // 应用初始配置\n        applyOption(props.option);\n\n        if (props.debug) {\n          logger.debug('[ChartView] 图表初始化完成');\n        }\n      } catch (e) {\n        logger.error('[ChartView] 初始化失败:', e);\n      }\n    };\n\n    // 调整大小\n    const handleResize = () => {\n      chartInstance.value?.resize();\n    };\n    \n    // 防抖调整大小\n    const debouncedResize = debounce(handleResize, 300);\n\n    // 监听配置变化\n    watch(() => props.option, (newOption) => {\n      if (!newOption) return;\n      applyOption(newOption);\n    }, { deep: true });\n\n    // 生命周期钩子\n    onMounted(() => {\n      initChart();\n      window.addEventListener('resize', debouncedResize);\n    });\n\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', debouncedResize);\n      debouncedResize.cancel();\n      chartInstance.value?.dispose();\n    });\n\n    // 暴露方法\n    const getChartInstance = () => chartInstance.value;\n\n    return {\n      chartContainer,\n      getChartInstance,\n      handleResize\n    };\n  }\n};\n</script>\n\n<style scoped>\n.chart-view {\n  width: 100%;\n  height: 100%;\n  min-height: 300px;\n  position: relative;\n}\n</style>","import { render } from \"./ChartView.vue?vue&type=template&id=5a148706&scoped=true\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js\"\n\nimport \"./ChartView.vue?vue&type=style&index=0&id=5a148706&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5a148706\"]])\n\nexport default __exports__","import { render } from \"./ChartContainer.vue?vue&type=template&id=3f3c9a30&scoped=true\"\nimport script from \"./ChartContainer.vue?vue&type=script&lang=js\"\nexport * from \"./ChartContainer.vue?vue&type=script&lang=js\"\n\nimport \"./ChartContainer.vue?vue&type=style&index=0&id=3f3c9a30&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3f3c9a30\"]])\n\nexport default __exports__","import { render } from \"./ChartPage.vue?vue&type=template&id=ce7a7c4e&scoped=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPage.vue?vue&type=style&index=0&id=ce7a7c4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ce7a7c4e\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","$options","internalShowToggles","_hoisted_2","_createElementVNode","_hoisted_3","_normalizeClass","$data","viewMode","active","onClick","_cache","$event","_createCommentVNode","_Fragment","_renderList","chartsToRender","chart","_createBlock","_component_ChartContainer","id","returnData","$props","config","_toDisplayString","title","subtitle","_hoisted_4","_hoisted_5","$setup","chartType","isHorizontal","setChartType","_hoisted_6","_hoisted_7","_createVNode","_component_el_slider","modelValue","yearLimit","min","max","step","formatTooltip","style","_normalizeStyle","backgroundColor","legendAllSelected","args","toggleAllLegends","_hoisted_8","_component_ChartView","ref","option","chartOption","debug","onLegendselectchanged","handleLegendSelect","name","props","type","Object","required","Boolean","default","emits","setup","emit","chartContainer","chartInstance","getBaseOption","animation","tooltip","trigger","legend","selectedMode","selector","left","top","grid","containLabel","params","undefined","selected","applyOption","value","safeOption","JSON","parse","stringify","series","Array","isArray","filter","s","mergedOption","logger","setOption","notMerge","lazyUpdate","resize","e","error","recoveryFallback","initChart","dispose","echarts","renderer","useDirtyRect","on","handleResize","debouncedResize","debounce","watch","newOption","deep","onMounted","window","addEventListener","onBeforeUnmount","removeEventListener","cancel","getChartInstance","__exports__","components","ChartView","validator","val","every","String","includes","expose","chartViewRef","legendStates","updateAllSelectedState","allNames","keys","length","initLegendStates","initialOption","getCommonChartOption","data","zbcodeArr","cityCodeArr","reduce","acc","getChartOption","dbCode","unit","exceptName","legendTop","gridTop","forceMultiSelect","updateChartOption","event","newState","newLegendStates","forEach","horizontal","ChartContainer","chartMetaList","showToggles","computed","this","dbCodes","Set","map","c","has","defaultViewMode","filteredCharts","sj","dataList","created","render"],"sourceRoot":""}