{"version":3,"file":"js/2050.63a0dde3.js","mappings":"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","sources":["webpack://tangdata/./src/components/common/ChartPage.vue","webpack://tangdata/./src/components/common/ChartContainer.vue","webpack://tangdata/./src/components/common/ChartView.vue","webpack://tangdata/./src/components/common/ChartView.vue?7c38","webpack://tangdata/./src/components/common/ChartContainer.vue?9df1","webpack://tangdata/./src/components/common/ChartPage.vue?6ceb"],"sourcesContent":["<template>\n  <div class=\"echart-container\">\n    <div v-if=\"internalShowToggles\" class=\"segment-container\">\n      <div class=\"segment-wrapper\">\n        <div class=\"segment-bg\" :class=\"viewMode\"></div>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'monthly' }\"\n          @click=\"viewMode = 'monthly'\">月度</button>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'yearly' }\"\n          @click=\"viewMode = 'yearly'\">年度</button>\n      </div>\n    </div>\n\n    <ChartContainer v-for=\"chart in chartsToRender\" :key=\"chart.id\" :chart=\"chart\" :returnData=\"returnData\"\n      :config=\"config\" :viewMode=\"viewMode\" />\n  </div>\n</template>\n\n<script>\nimport ChartContainer from './ChartContainer.vue';\n\nexport default {\n  components: { ChartContainer },\n  props: {\n    chartMetaList: Array,\n    returnData: Object,\n    config: Object,\n    showToggles: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      viewMode: 'monthly',\n    };\n  },\n  computed: {\n    internalShowToggles() {\n      if (!this.showToggles) return false;\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      return dbCodes.has('yd') && dbCodes.has('nd');\n    },\n    defaultViewMode() {\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      if (dbCodes.has('yd')) return 'monthly';\n      if (dbCodes.has('nd')) return 'yearly';\n      return 'monthly';\n    },\n    filteredCharts() {\n      if (!this.internalShowToggles) return this.chartMetaList;\n      return this.chartMetaList.filter((c) =>\n        this.viewMode === 'monthly' ? c.dbCode === 'yd' : c.dbCode === 'nd'\n      );\n    },\n    chartsToRender() {\n      return this.filteredCharts.filter((chart) => {\n        const sj = this.returnData?.sj?.[chart.dbCode];\n        return Array.isArray(sj) && sj.length > 0;\n      });\n    },\n  },\n  created() {\n    this.viewMode = this.defaultViewMode;\n  },\n};\n</script>\n\n<style scoped>\n.segment-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n\n}\n\n.segment-wrapper {\n  position: relative;\n  display: flex;\n  width: 200px;\n  height: 45px;\n  background-color: #fff;\n  border-radius: 15px;\n  padding: 2px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  /* ✅ 外部阴影更明显 */\n}\n\n/* 背景高亮滑块 */\n.segment-bg {\n  position: absolute;\n  top: 2px;\n  bottom: 2px;\n  width: 50%;\n  border-radius: 15px;\n  background-color: #0bc2d6;\n  transition: left 0.25s ease;\n  z-index: 0;\n}\n\n.segment-bg.monthly {\n  left: 2px;\n}\n\n.segment-bg.yearly {\n  left: 50%;\n}\n\n/* 按钮本体 */\n.segment-button {\n  position: relative;\n  flex: 1;\n  z-index: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 15px;\n  cursor: pointer;\n  transition: color 0.25s ease;\n}\n\n.segment-button.active {\n  color: #fff;\n}\n\n\n</style>","<template>\n  <div class=\"chart-container\">\n    <div class=\"controls-wrap\">\n      <!-- PC端布局 - 所有控件在一行 -->\n      <div class=\"controls-row\">\n        <!-- 图表类型控件 -->\n        <div class=\"chart-controls\">\n          <button :class=\"['chart-button', { 'is-active': currentChartType === 'bar' && !isHorizontal }]\"\n            @click=\"setChartType('bar', false)\">\n            柱状图\n          </button>\n          <button :class=\"['chart-button', { 'is-active': currentChartType === 'bar' && isHorizontal }]\"\n            @click=\"setChartType('bar', true)\">\n            条形图\n          </button>\n          <button :class=\"['chart-button', { 'is-active': currentChartType === 'line' && !isHorizontal }]\"\n            @click=\"setChartType('line', false)\">\n            折线图\n          </button>\n        </div>\n        \n        <!-- 一键全选控件 - 与图表类型按钮在同一行 -->\n        <button class=\"toggle-legend-btn\" :style=\"{ backgroundColor: legendAllSelected ? '#0bc2d6' : '#ccc' }\"\n          @click=\"toggleAllLegends\">\n          {{ legendAllSelected ? '一键未选' : '一键全选' }}\n        </button>\n        \n        <!-- 时间选择控件 -->\n        <div class=\"time-control\">\n          <label class=\"year-label\">选择时间:</label>\n          <el-slider v-model=\"yearLimit\" :min=1 :max=20 :step=1 class=\"year-slider\" />\n          <span class=\"offset-value\">{{ yearLimit }}</span>\n        </div>\n      </div>\n      \n      <!-- 折线图模式下第二行控件 -->\n      <div v-if=\"currentChartType === 'line' && !isHorizontal\" class=\"line-mode-controls\">\n        <div class=\"legend-control\">\n          <el-select v-model=\"selectedLegend\" placeholder=\"选择图例\" class=\"legend-selector\">\n            <el-option v-for=\"legend in legendList\" :key=\"legend\" :label=\"legend\" :value=\"legend\" />\n          </el-select>\n        </div>\n        \n        <div class=\"offset-controls\">\n          <label class=\"year-label\">折线偏移:</label>\n          <div class=\"offset-slider-container\">\n            <el-slider v-model=\"offsetValue\" :min=-20 :max=20 :step=1 class=\"year-slider\" />\n            <span class=\"offset-value\">{{ offsetValue }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"chart-card \" :style=\"{ height: chartHeight + 'px' }\">\n      <ChartView ref=\"chartRef\" :option=\"chartOption\" :chartId=\"chart.id\" :initSelectAll=\"legendAllSelected\" :pieConfig=\"chart.pieConfig\"\n        @legendStateChange=\"legendAllSelected = $event\" />\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { ref, computed, watch } from 'vue';\nimport ChartView from './ChartView.vue';\nimport { getCommonChartOption } from '@/utils/CommonUtil.js';\nimport { logger } from '@/utils/Logger.js';\n\nexport default {\n  name: 'ChartContainer',\n  components: { ChartView },\n  props: {\n    chart: { type: Object, required: true },\n    returnData: { type: Object, required: true, default: () => ({}) },\n    config: { type: Object, default: () => ({}) },\n    viewMode: { type: String, default: 'monthly' }\n  },\n  setup(props) {\n    const currentChartType = ref('bar');\n    const isHorizontal = ref(false);\n    const yearLimit = ref(10);\n    const legendAllSelected = ref(true);\n    const chartRef = ref(null);\n    // 新增状态\n    const selectedLegend = ref(null)\n    const offsetValue = ref(0)\n    const legendNames = ref([])\n\n   // 必须这么写，不然在上面使用legendNames取不到数据，使用legendNames.value写法又报错\n    const legendList = computed(() => legendNames.value)\n\n    const chartOption = computed(() => {\n\n      const chartConfig = {\n        data: props.returnData,\n        title: props.chart.title || '默认标题',\n        subtitle: props.chart.subtitle || '',\n        zbcodeArr: props.chart.zbcodeArr || [],\n        cityCodeArr: props.config.cityCodeArr || [],\n        dbCode: props.chart.dbCode || 'nd',\n        unit: props.chart.unit || '',\n        exceptName: props.chart.exceptName || '',\n        legendTop: props.chart.legendTop,\n        gridTop: props.chart.gridTop,\n        chartType: currentChartType.value,\n        yearLimit: yearLimit.value,\n        isHorizontal: isHorizontal.value,\n        enableBirthOffset: props.chart.enableBirthOffset || false,\n        enableBirthPrediction: props.chart.enableBirthPrediction || false,\n        selectedLegend: selectedLegend.value,\n        offsetValue: offsetValue.value,\n        pieConfig:props.chart.pieConfig,\n      };\n\n      const option = getCommonChartOption(chartConfig);\n\n      return option;\n    });\n\n    const windowWidth = ref(window.innerWidth);\n    const baseHeight = computed(() => (windowWidth.value > 768 ? 600 : 400));\n    const pieExtraHeight = computed(() => (props.chart.pieConfig?.enabled ? (windowWidth.value > 768 ? 150 : 100) : 0));\n    const chartHeight = computed(() => baseHeight.value + pieExtraHeight.value);\n    logger.debug('当前的高度',chartHeight,pieExtraHeight)\n\n    // 监听 legendNames，初始化选中第一个\n    // ✅ 在 watch 里同步 legend，不会报 eslint 错\n    // watch returnData 或 chartOption 更新 legendNames\n    watch(chartOption, async (newOption) => {\n\n      legendNames.value = newOption?.legend?.data || []\n      // 默认选中第一个 legend\n      if (!selectedLegend.value && legendNames.value.length > 0) {\n        selectedLegend.value = legendNames.value[0]\n      }\n\n    }, { immediate: true })\n\n    // 切换图表类型\n    const setChartType = (type, horizontal) => {\n      currentChartType.value = type;\n      isHorizontal.value = horizontal;\n    };\n\n    // 一键全选/未选\n    const toggleAllLegends = () => {\n      logger.debug('一键全选:', legendAllSelected.value);\n      legendAllSelected.value = !legendAllSelected.value;\n      if (chartRef.value) {\n        chartRef.value.toggleAllLegends(legendAllSelected.value);\n      }\n    };\n\n    return {\n      currentChartType,\n      isHorizontal,\n      yearLimit,\n      legendAllSelected,\n      chartOption,\n      setChartType,\n      toggleAllLegends,\n      chartRef,\n      selectedLegend,\n      offsetValue,\n      legendList,\n      chartHeight\n    };\n  }\n};\n</script>\n\n\n<style scoped>\n.chart-container {\n  width: 95%;\n  max-width: 1500px;\n  margin: 30px auto 60px;\n  padding: 16px;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n  box-sizing: border-box;\n}\n\n.controls-wrap {\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n  margin: 0 auto;\n}\n\n.controls-row {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  margin-top: 16px;\n}\n\n.chart-controls {\n  display: flex;\n  gap: 12px;\n}\n\n.time-control {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.legend-control {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.offset-controls {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.line-mode-controls {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin-top: 30px;\n  width: 100%;\n}\n\n.year-label {\n  font-weight: 400;\n  flex-shrink: 0;\n  padding: 8px 14px; /* PC端增大尺寸 */\n  font-size: 18px; /* PC端增大字体 */\n  /* color: rgb(113, 109, 109); */\n  border-radius: 8px;\n}\n\n.year-slider {\n  min-width: 150px; /* PC端增大宽度 */\n  max-width: 250px; /* PC端增大宽度 */\n}\n\n.toggle-legend-btn {\n  flex-shrink: 0;\n  padding: 8px 14px; /* PC端增大尺寸 */\n  font-size: 14px; /* PC端增大字体 */\n  color: #fff;\n  background-color: #0bc2d6;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s;\n  display: inline-flex;\n  align-items: center;\n}\n\n.toggle-legend-btn:active {\n  transform: scale(0.98);\n}\n\n.chart-button {\n  padding: 8px 14px; /* PC端增大尺寸 */\n  font-size: 14px; /* PC端增大字体 */\n  color: #fff;\n  background-color: #ccc;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.chart-button.is-active {\n  background-color: #0bc2d6;\n}\n\n.chart-card {\n  width: 95%;\n  margin: 0 auto;\n  margin-top: 20px;\n}\n\n.legend-selector {\n  width: 100%;\n  min-width: 250px;\n  max-width: 350px;\n}\n\n.offset-slider-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.offset-value {\n  flex-shrink: 0;\n  min-width: 30px;\n  font-size: 14px;\n  color: #606266;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .controls-row {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 6px;\n    margin-top: 8px;\n  }\n  \n  .chart-controls {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 6px;\n    margin-bottom: 0;\n  }\n  \n  .toggle-legend-btn {\n    margin: 0;\n    padding: 6px 10px;\n    font-size: 12px;\n  }\n  \n  /* 时间控件优化 */\n  .time-control {\n    width: 100%;\n    justify-content: center;\n    margin-top: 8px;\n    flex-wrap: nowrap;\n    /* background-color: #f8f9fa; */\n    padding: 4px 8px;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n  }\n  \n  .time-control .year-label {\n    padding: 4px 4px;\n    font-size: 13px;\n    flex-shrink: 0;\n  }\n  \n  .time-control .year-slider {\n    min-width: 100px;\n    max-width: 150px;\n    flex-grow: 1;\n  }\n  \n  .legend-selector {\n    max-width: 120px; /* 进一步减小图例选择框宽度 */\n    min-width: auto;\n  }\n  \n  \n  /* 图例选择框和偏移控件布局优化 */\n  .line-mode-controls {\n    flex-direction: row;\n    flex-wrap: nowrap;\n    gap: 8px;\n    margin-top: 8px;\n    justify-content: center;\n    align-items: center;\n    /* background-color: #f8f9fa; */\n    padding: 6px;\n    border-radius: 8px;\n    width: 100%;\n  }\n  \n  .legend-control {\n    flex: 1;\n    min-width: 50px;\n    max-width: 34%; /* 限制最大宽度 */\n    justify-content: center;\n  }\n  \n  .offset-controls {\n    flex: 1;\n    min-width: 150px;\n    max-width: 80%; /* 限制最大宽度 */\n    justify-content: center;\n  }\n  \n  /* 偏移控件内部优化 */\n  .offset-controls {\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    gap: 6px;\n  }\n  \n  .offset-slider-container {\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    gap: 4px;\n    flex-grow: 1;\n  }\n  \n  .offset-controls .year-slider {\n    min-width: 120px; /* 减小滑块最小宽度 */\n    max-width: 200px; /* 减小滑块最大宽度 */\n    flex-grow: 1;\n  }\n  \n  .year-label {\n    padding: 4px 8px;\n    font-size: 13px;\n    white-space: nowrap;\n    flex-shrink: 0;\n  }\n  \n  .chart-button {\n    padding: 6px 10px;\n    font-size: 12px;\n  }\n  \n  .offset-value {\n    font-size: 12px;\n    min-width: 25px;\n    flex-shrink: 0;\n  }\n  \n  /* 添加间距 */\n  .legend-control {\n    margin-right: 8px; /* 图例选择框右侧添加间距 */\n  }\n}\n\n/* 滑块样式覆盖 */\n::v-deep(.el-slider__bar) {\n  background-color: #0bc2d6 !important;\n}\n\n::v-deep(.el-slider__button) {\n  background-color: #0bc2d6 !important;\n  border-color: #0bc2d6 !important;\n}\n\n/* 选legend择框圆角 */\n::v-deep(.legend-selector .el-select__wrapper) {\n  border-radius: 6px !important;\n}\n\n::v-deep(.legend-selector .el-select__tags) {\n  border-radius: 6px !important;\n}\n</style>","<template>\n  <div ref=\"chartContainer\" class=\"chart-view\"></div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount, watch, nextTick } from 'vue';\nimport * as echarts from 'echarts/core';\nimport { BarChart, LineChart, PieChart } from 'echarts/charts';\nimport { TitleComponent,GridComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { logger } from '@/utils/Logger.js';\nimport debounce from 'lodash-es/debounce';\n\necharts.use([TitleComponent,GridComponent, TooltipComponent, LegendComponent, BarChart, LineChart, PieChart,CanvasRenderer]);\n\nexport default {\n  name: 'ChartView',\n  props: {\n    option: { type: Object, required: true },\n    chartId: { type: String, required: true }, // 从 ChartContainer 传入\n    pieConfig: { type: Object, default: () => ({}) },\n    initSelectAll: { type: Boolean, default: true }\n  },\n  emits: ['legendStateChange'],\n  setup(props, { expose, emit }) {\n    const chartContainer = ref(null);\n    let chartInstance = null;\n    let resizeHandler = null;\n\n    const initChart = () => {\n      if (!chartContainer.value || !props.option?.series?.length) return;\n\n      const startTime = performance.now();\n\n      // 如果实例已存在且未销毁，直接更新\n      if (chartInstance && !chartInstance.isDisposed()) {\n        updateChart(props.option);\n        return;\n      }\n\n      // 创建新实例\n      chartInstance = echarts.init(chartContainer.value);\n      chartInstance.setOption(props.option, true);\n\n      // 初始化图例状态\n      const legends = chartInstance.getOption().legend?.[0]?.data || [];\n      if (legends.length > 0) {\n        legends.forEach(name => {\n          chartInstance.dispatchAction({\n            type: props.initSelectAll ? 'legendSelect' : 'legendUnSelect',\n            name\n          });\n        });\n      }\n\n      // 绑定事件（只绑定一次）\n      chartInstance.on('legendselectchanged', (params) => {\n        const allSelected = Object.values(params.selected).every(v => v === true);\n        const noneSelected = Object.values(params.selected).every(v => v === false);\n\n        if (allSelected) emit('legendStateChange', true);\n        else if (noneSelected) emit('legendStateChange', false);\n      });\n      // 饼状图联动事件\n      chartInstance.on('updateAxisPointer', function (event) {\n        // 在 setup() 或 initChart() 里\n        const seriesData = props.option?.series?.filter(s => s.type !== 'pie') || [];\n\n        const xAxisInfo = event.axesInfo?.[0];\n        if (!xAxisInfo) return;\n\n        const yearIndex = xAxisInfo.value; // 对应 filteredYears 的索引\n        const pieConfig = props.pieConfig;\n        if (!pieConfig?.enabled || !Array.isArray(pieConfig.pies)) return; // ✅ 没有饼图直接返回\n\n        pieConfig?.pies.forEach((pie, idx) => {\n          const pieSeriesData = seriesData.filter(s => pie.triggerZbCodes.includes(s.zbCode));\n\n          // 构建 dataset，更新为当前年份的数据\n          const datasetSource = [\n            ['name', 'value'],\n            ...pieSeriesData.map(s => [s.name, Array.isArray(s.data) ? s.data[yearIndex] : 0])\n          ];\n\n          chartInstance.setOption({\n            dataset: [{\n              id: `pieDataset_${idx}`,\n              source: datasetSource\n            }],\n            series: [{\n              id: `pie_${idx}`,\n              datasetId: `pieDataset_${idx}`,\n              encode: { itemName: 'name', value: 'value', tooltip: 'value' },\n              label: {\n                formatter: params => `${params.data[0]}\\n ${params.data[1]} \\n(${params.percent}%)`\n              },\n            }]\n          });\n        });\n      });\n\n      // 绑定窗口大小调整事件\n      if (!resizeHandler) {\n        resizeHandler = debounce(() => {\n          if (chartInstance && !chartInstance.isDisposed()) {\n            chartInstance.resize();\n          }\n        }, 200);\n        window.addEventListener('resize', resizeHandler);\n      }\n\n      const endTime = performance.now();\n      logger.debug(`[Chart ${props.chartId}] 图表初始化耗时: ${Math.round(endTime - startTime)}ms`);\n    };\n\n    const updateChart = (newOption) => {\n      if (!chartInstance || chartInstance.isDisposed()) {\n        initChart();\n        return;\n      }\n      if (!newOption?.series?.length) return;\n      logger.debug('updateChart方法调用')\n      // 使用增量更新，提高性能\n      chartInstance.setOption(newOption, false, true);\n    };\n\n\n    const toggleAllLegends = (selectAll) => {\n      if (!chartInstance) return;\n      const legends = chartInstance.getOption().legend?.[0]?.data || [];\n      const startTime = performance.now();\n      legends.forEach(name => {\n        chartInstance.dispatchAction({\n          type: selectAll ? 'legendSelect' : 'legendUnSelect',\n          name\n        });\n      });\n      const endTime = performance.now();\n      logger.debug(`[Chart ${props.chartId}] toggleAllLegends耗时: ${Math.round(endTime - startTime)}ms`);\n    };\n\n    onMounted(() => {\n      nextTick(() => initChart());\n    });\n\n    // 使用浅监听，避免深度监听的性能开销\n    watch(() => props.option, updateChart, { deep: false });\n\n    onBeforeUnmount(() => {\n      if (resizeHandler) {\n        window.removeEventListener('resize', resizeHandler);\n        resizeHandler.cancel();\n      }\n      chartInstance?.dispose();\n      chartInstance = null;\n    });\n\n    expose({ toggleAllLegends });\n\n    return { chartContainer };\n  }\n};\n</script>\n\n<style scoped>\n.chart-view {\n  width: 100%;\n  height: 100%;\n}\n</style>","import { render } from \"./ChartView.vue?vue&type=template&id=40842fe0&scoped=true\"\nimport script from \"./ChartView.vue?vue&type=script&lang=js\"\nexport * from \"./ChartView.vue?vue&type=script&lang=js\"\n\nimport \"./ChartView.vue?vue&type=style&index=0&id=40842fe0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-40842fe0\"]])\n\nexport default __exports__","import { render } from \"./ChartContainer.vue?vue&type=template&id=7be3a364&scoped=true\"\nimport script from \"./ChartContainer.vue?vue&type=script&lang=js\"\nexport * from \"./ChartContainer.vue?vue&type=script&lang=js\"\n\nimport \"./ChartContainer.vue?vue&type=style&index=0&id=7be3a364&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7be3a364\"]])\n\nexport default __exports__","import { render } from \"./ChartPage.vue?vue&type=template&id=4658eebb&scoped=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPage.vue?vue&type=style&index=0&id=4658eebb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4658eebb\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","$options","internalShowToggles","_hoisted_2","_createElementVNode","_hoisted_3","_normalizeClass","$data","viewMode","active","onClick","_cache","$event","_createCommentVNode","_Fragment","_renderList","chartsToRender","chart","_createBlock","_component_ChartContainer","id","returnData","$props","config","_hoisted_4","$setup","currentChartType","isHorizontal","setChartType","style","_normalizeStyle","backgroundColor","legendAllSelected","args","toggleAllLegends","_hoisted_5","_hoisted_6","_createVNode","_component_el_slider","modelValue","yearLimit","min","max","step","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_9","_component_el_select","selectedLegend","placeholder","default","_withCtx","legendList","legend","_component_el_option","label","value","_","_hoisted_10","_hoisted_11","_hoisted_12","offsetValue","_hoisted_13","height","chartHeight","_component_ChartView","ref","option","chartOption","chartId","initSelectAll","pieConfig","onLegendStateChange","echarts","TitleComponent","GridComponent","TooltipComponent","LegendComponent","BarChart","LineChart","PieChart","CanvasRenderer","name","props","type","Object","required","String","Boolean","emits","setup","expose","emit","chartContainer","chartInstance","resizeHandler","initChart","series","length","startTime","performance","now","isDisposed","updateChart","setOption","legends","getOption","data","forEach","dispatchAction","on","params","allSelected","values","selected","every","v","noneSelected","event","seriesData","filter","s","xAxisInfo","axesInfo","yearIndex","enabled","Array","isArray","pies","pie","idx","pieSeriesData","triggerZbCodes","includes","zbCode","datasetSource","map","dataset","source","datasetId","encode","itemName","tooltip","formatter","percent","debounce","resize","window","addEventListener","endTime","logger","debug","Math","round","newOption","selectAll","onMounted","nextTick","watch","deep","onBeforeUnmount","removeEventListener","cancel","dispose","__exports__","components","ChartView","chartRef","legendNames","computed","chartConfig","title","subtitle","zbcodeArr","cityCodeArr","dbCode","unit","exceptName","legendTop","gridTop","chartType","enableBirthOffset","enableBirthPrediction","getCommonChartOption","windowWidth","innerWidth","baseHeight","pieExtraHeight","async","immediate","horizontal","ChartContainer","chartMetaList","showToggles","this","dbCodes","Set","c","has","defaultViewMode","filteredCharts","sj","created","render"],"sourceRoot":""}