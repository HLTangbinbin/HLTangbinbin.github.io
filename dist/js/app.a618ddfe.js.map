{"version":3,"file":"js/app.a618ddfe.js","mappings":"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","sources":["webpack://statisticalbureau/./src/App.vue","webpack://statisticalbureau/./src/App.vue?7ccd","webpack://statisticalbureau/./src/components/NewHouse.vue","webpack://statisticalbureau/./src/components/NewHouse.vue?1888","webpack://statisticalbureau/./src/components/SecondHandHouse.vue","webpack://statisticalbureau/./src/components/SecondHandHouse.vue?894b","webpack://statisticalbureau/./src/components/GrossDomesticProduct.vue","webpack://statisticalbureau/./src/components/CommonUtil.js","webpack://statisticalbureau/./src/components/GrossDomesticProduct.vue?50cf","webpack://statisticalbureau/./src/components/FinancialIndustry.vue","webpack://statisticalbureau/./src/components/FinancialIndustry.vue?fdb9","webpack://statisticalbureau/./src/components/PopulationCorrelation.vue","webpack://statisticalbureau/./src/components/PopulationCorrelation.vue?7f51","webpack://statisticalbureau/./src/components/IndicesData.vue","webpack://statisticalbureau/./src/components/IndicesData.vue?c31b","webpack://statisticalbureau/./src/components/LivingStandards.vue","webpack://statisticalbureau/./src/components/LivingStandards.vue?d9c8","webpack://statisticalbureau/./src/components/CityHouse.vue","webpack://statisticalbureau/./src/components/CityHouse.vue?deaf","webpack://statisticalbureau/./src/router/index.js","webpack://statisticalbureau/./src/main.js","webpack://statisticalbureau/webpack/bootstrap","webpack://statisticalbureau/webpack/runtime/chunk loaded","webpack://statisticalbureau/webpack/runtime/compat get default export","webpack://statisticalbureau/webpack/runtime/define property getters","webpack://statisticalbureau/webpack/runtime/global","webpack://statisticalbureau/webpack/runtime/hasOwnProperty shorthand","webpack://statisticalbureau/webpack/runtime/make namespace object","webpack://statisticalbureau/webpack/runtime/jsonp chunk loading","webpack://statisticalbureau/webpack/startup"],"sourcesContent":["<template>\n  <div>\n    <div>\n    <h1 class=\"main-title\">大唐统计局</h1>\n    </div>\n    <nav class=\"nav-container\">\n      <router-link to=\"/NewHouse\" class=\"nav\" :class=\"{ active: $route.path === '/NewHouse' }\">武汉新房</router-link>\n      <router-link to=\"/SecondHandHouse\" class=\"nav\" :class=\"{ active: $route.path === '/SecondHandHouse' }\">武汉二手房</router-link>\n      <router-link to=\"/CityHouse\" class=\"nav\" :class=\"{ active: $route.path === '/CityHouse' }\">一线房价</router-link>\n      <router-link to=\"/GrossDomesticProduct\" class=\"nav\" :class=\"{ active: $route.path === '/GrossDomesticProduct' }\">GDP</router-link>\n      <router-link to=\"/FinancialIndustry\" class=\"nav\" :class=\"{ active: $route.path === '/FinancialIndustry' }\">货币M2</router-link>\n      <router-link to=\"/PopulationCorrelation\" class=\"nav\" :class=\"{ active: $route.path === '/PopulationCorrelation' }\">人口数据</router-link>\n      <router-link to=\"/IndicesData\" class=\"nav\" :class=\"{ active: $route.path === '/IndicesData' }\">指数数据</router-link>\n      <router-link to=\"/LivingStandards\" class=\"nav\" :class=\"{ active: $route.path === '/LivingStandards' }\">人民生活</router-link>\n      \n    </nav>\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n};\n</script>\n\n\n<style>\n.main-title {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  background-color: #fff; /* 设置背景颜色为灰色 */\n}\n.nav-container {\n  overflow-x: auto; /* 启用水平滚动条 */\n  /** white-space: nowrap; /* 防止换行 */\n  white-space: wrap; /* 换行：移动端换行显示 */\n  flex-wrap: wrap;\n  -webkit-overflow-scrolling: touch; /* 在移动设备上优化滚动 */\n  display: flex;\n  justify-content: safe center; /* 解决居中滚动时左边无法显示全的问题 */\n  margin-top: 20px; /* 添加底部间距 */\n  background-color: #fff; /* 设置背景颜色为灰色 */\n  border-radius: 40px;\n  box-shadow: 0 5px 10px rgb(0, 0, 0, 0.25);\n  \n}\n\n.nav {\n  display:block;\n  text-decoration: none;\n  background-color: #fff;\n  color: #000; /* 设置文字颜色为黑色 */\n  padding: 10px 10px;\n  margin: 10px 10px;\n  font-weight: bold;\n  border-radius: 40px;\n}\n\n.nav.active {\n  color: #fff !important; /* 使用 !important 提高优先级 */\n  background-color: #0bc2d6 !important; /* 使用 !important 提高优先级 */\n}\n\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=5d74e3c5\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5d74e3c5&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_VolumeMonth}\" @click=\"drawBarChart_VolumeMonth\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_VolumeMonth }\" @click=\"drawLineChart_VolumeMonth\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"newHouseVolumeMonth\"></div>\n\n     <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_VolumeMonthForArea }\" @click=\"drawBarChart_VolumeMonthForArea\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_VolumeMonthForArea }\" @click=\"drawLineChart_VolumeMonthForArea\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"newHouseVolumeMonthForArea\"></div>\n  </div>\n</template>\n  \n  <script>\n  import * as echarts from 'echarts';\n  \n  export default {\n\n    data() {\n      return {\n        AreaName : {\n            JA : '江岸区',\n            JH : '江汉区',\n            QK : '硚口区',\n            HY : '汉阳区',\n            QS : '青山区',\n            WC : '武昌区',\n            HS : '洪山区',\n            DXH : '东西湖区',\n            DHGX : '东湖高新区',\n            JJKF : '经济开发区',\n            JX : '江夏区',\n            HP : '黄陂区',\n            CD : '蔡甸区',\n            XZ : '新洲区',\n            HN : '汉南区',\n            TOTAL : '合计',\n        },\n        isBarActive_VolumeMonth: false,\n        isLineActive_VolumeMonth: false,\n        isBarActive_VolumeMonthForArea: false,\n        isLineActive_VolumeMonthForArea: false,\n        houseList: null,\n        chartsType: null\n      };\n    },\n    mounted() {\n      this.loadData();\n    },\n\n    methods: {\n      \n      loadData() {\n        // 读取本地的 JSON 文件\n        fetch('house.json')\n          .then(response => response.json())\n          .then(data => {\n            console.log('请求成功新房数据:', data.houseList);\n            this.houseList = data.houseList;\n            // 每年每月合计数据\n            this.handleTotalData();\n            // 处理数据绘制图表\n            this.drawBarChart_VolumeMonth();\n            this.drawBarChart_VolumeMonthForArea();\n          })\n          .catch(error => {\n            console.error('Error fetching data:', error)\n          })\n      },\n        handleTotalData() {\n          //每年每月合计数据前面数据补齐-2020年前3月数据为0\n          this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2020').unshift(0, 0, 0);\n        },\n        // 每年每月的合计数据需要先选出合计，然后选出每月的数组数据\n        //筛选合计或者每个区域的数据\n        houseArrayWith(name) {\n          return this.houseList.filter( houseObj => {\n              var areaStr = String()\n              areaStr = houseObj.cityDistrict    \n              //筛选合计数据 \n              return areaStr.search(name) != -1;     \n          })\n        }, \n        //按照年份与日期做赛选与排序\n        selectMonthArr(houseArr,year) {\n          return houseArr.filter( houseObj => {\n            //筛选年份的\n            return houseObj.month.search(year) != -1;\n              \n          }).sort(function(a,b) {\n              return a.statisticsTime > b.statisticsTime ? 1: -1;\n          }).map(item => {\n              //取出某个字段数据\n              var hosuseNum = Number(item.houseNum)\n              return hosuseNum\n          })\n      },\n\n      drawVolumeMonthChart() {\n        // 基于准备好的dom，初始化echarts实例（武汉新房月成交量柱状图）\n        var newHouseVolumeBarMonthChart = echarts.init(document.getElementById('newHouseVolumeMonth'));\n        // 指定图表的配置项和数据\n        var newHouseVolumeBarMonthOption = {\n            title: {\n                text: '武汉新房月成交量',\n                left: 'center',\n                top: 'top'\n            },\n            tooltip: {\n              //X轴悬浮显示所有数据\n              trigger: 'axis'\n            },\n            legend: {\n                left: 'center',\n                top: '50px'\n            },\n            grid: {\n                left: '1%',\n                right: '1%',\n                top: '20%',\n                bottom: '1%',\n                containLabel: true\n            },\n            xAxis: {\n                data: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n            },\n            yAxis: {},\n            series: [\n                {\n                    name: 2018,\n                    type: this.chartsType,\n                    data: this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2018')\n                },\n                {\n                    name: 2019,\n                    type: this.chartsType,\n                    data: this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2019')\n                },\n                {\n                    name: 2020,\n                    type: this.chartsType,\n                    data: this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2020')\n                },\n                {\n                    name: 2021,\n                    type: this.chartsType,\n                    data: this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2021')\n                },\n                {\n                    name: 2022,\n                    type: this.chartsType,\n                    data: this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2022')\n                },\n                {\n                    name: 2023,\n                    type: this.chartsType,\n                    data: this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2023')\n                },\n                {\n                    name: 2024,\n                    type: this.chartsType,\n                    data: this.selectMonthArr(this.houseArrayWith(this.AreaName.TOTAL),'2024')\n                }\n            ]\n        };\n        // 使用刚指定的配置项和数据显示图表。\n        newHouseVolumeBarMonthChart.setOption(newHouseVolumeBarMonthOption);\n      },\n      drawVolumeMonthForAreaChart() {\n        // 基于准备好的dom，初始化echarts实例（武汉新房月成交量柱状图）\n        var newHouseVolumeBarMonthChartForArea = echarts.init(document.getElementById('newHouseVolumeMonthForArea'));\n        var newHouseVolumeBarMonthOptionForArea;\n        //必须加这句，否则setTimeout里无法访问到this变量，访问到的是windows\n        let _this = this;\n        // 指定图表的配置项和数据\n        setTimeout(function () {\n          // 数据集处理，先把名字插入到数据数组第一个位置中\n          var arr_JA = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.JA),'2023');\n          arr_JA.unshift(_this.AreaName.JA);\n          var arr_JH = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.JH),'2023');\n          arr_JH.unshift(_this.AreaName.JH);\n          var arr_QK = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.QK),'2023');\n          arr_QK.unshift(_this.AreaName.QK);\n          var arr_HY = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.HY),'2023');\n          arr_HY.unshift(_this.AreaName.HY);\n          var arr_QS = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.QS),'2023');\n          arr_QS.unshift(_this.AreaName.QS);\n          var arr_WC = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.WC),'2023');\n          arr_WC.unshift(_this.AreaName.WC);\n          var arr_HS = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.HS),'2023');\n          arr_HS.unshift(_this.AreaName.HS);\n          var arr_DXH = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.DXH),'2023');\n          arr_DXH.unshift(_this.AreaName.DXH);\n          var arr_DHGX = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.DHGX),'2023');\n          arr_DHGX.unshift(_this.AreaName.DHGX);\n          var arr_JJKF = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.JJKF),'2023');\n          arr_JJKF.unshift(_this.AreaName.JJKF);\n          var arr_JX = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.JX),'2023');\n          arr_JX.unshift(_this.AreaName.JX);\n          var arr_HP = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.HP),'2023');\n          arr_HP.unshift(_this.AreaName.HP);\n          var arr_CD = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.CD),'2023');\n          arr_CD.unshift(_this.AreaName.CD);\n          var arr_XZ = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.XZ),'2023');\n          arr_XZ.unshift(_this.AreaName.XZ);\n          var arr_HN = _this.selectMonthArr(_this.houseArrayWith(_this.AreaName.HN),'2023');\n          arr_HN.unshift(_this.AreaName.HN);\n\n          newHouseVolumeBarMonthOptionForArea = {\n            title: {\n                text: '武汉各区域2023新房月成交量',\n                left: 'center',\n                top: 'top'\n            },\n            tooltip: {\n              //X轴悬浮显示所有数据\n              trigger: 'axis',\n              position: ['90%', '20%']\n            },\n            legend: {\n                left: 'center',\n                top: '50px'\n            },\n            grid: {\n                left: '1%',\n                right: '1%',\n                top: '70%',\n                bottom: '1%',\n                containLabel: true\n            },\n            xAxis: {\n              type: 'category'\n            },\n            yAxis: {},\n            // 多图共享数据集\n            dataset: {\n              // 提供一份数据。\n              source: [\n                // 第一行默认是x轴的数据\n                ['product', '一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n                // 下面是y轴的数据\n                arr_JA,\n                arr_JH,\n                arr_QK,\n                arr_HY,\n                arr_QS,\n                arr_WC,\n                arr_HS,\n                arr_DXH,\n                arr_DHGX,\n                arr_JJKF,\n                arr_JX,\n                arr_HP,\n                arr_CD,\n                arr_XZ,\n                arr_HN\n\n              ]\n            },\n            series: [\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                    type: _this.chartsType,\n                    seriesLayoutBy: 'row',\n                    emphasis: { focus: 'series' }\n                },\n                {\n                  type: 'pie',\n                  id: 'pie',\n                  radius: '30%',\n                  center: ['50%', '40%'],\n                  emphasis: {\n                    focus: 'self'\n                  },\n                  label: {\n                    formatter: '{b}: {@一月} ({d}%)'\n                  },\n\n                  encode: {\n                    itemName: 'product',\n                    value: '一月',\n                    tooltip: '一月'\n                  }\n                }\n              \n            ]\n          };\n          newHouseVolumeBarMonthChartForArea.on('updateAxisPointer', function (event) {\n            const xAxisInfo = event.axesInfo[0];\n            \n            if (xAxisInfo) {\n              const dimension = xAxisInfo.value + 1;\n              console.log('区域是',dimension);\n              newHouseVolumeBarMonthChartForArea.setOption({\n                series: {\n                  id: 'pie',\n                  label: {\n                    formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n                  },\n                  encode: {\n                    value: dimension,\n                    tooltip: dimension\n                  }\n                }\n              });\n            }\n          });\n           // 使用刚指定的配置项和数据显示图表。\n          newHouseVolumeBarMonthChartForArea.setOption(newHouseVolumeBarMonthOptionForArea);\n        },1000),\n        newHouseVolumeBarMonthOptionForArea && newHouseVolumeBarMonthChartForArea.setOption(newHouseVolumeBarMonthOptionForArea);\n      },\n      drawBarChart_VolumeMonth() {\n          this.isBarActive_VolumeMonth = true;\n          this.isLineActive_VolumeMonth = false;\n          // 在这里绘制柱状图\n          this.chartsType = \"bar\"\n          this.drawVolumeMonthChart();\n   \n        },\n        drawLineChart_VolumeMonth() {\n          this.isBarActive_VolumeMonth = false;\n          this.isLineActive_VolumeMonth = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawVolumeMonthChart();\n        },\n        drawBarChart_VolumeMonthForArea() {\n          this.isBarActive_VolumeMonthForArea = true;\n          this.isLineActive_VolumeMonthForArea = false;\n          // 在这里绘制柱状图\n          this.chartsType = \"bar\"\n          this.drawVolumeMonthForAreaChart();\n   \n        },\n        drawLineChart_VolumeMonthForArea() {\n          this.isBarActive_VolumeMonthForArea = false;\n          this.isLineActive_VolumeMonthForArea = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawVolumeMonthForAreaChart()\n        }\n    }\n  };\n  </script>\n\n<style>\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n}\n.buttons {\n  display: flex;\n  justify-content: center;\n}\n.button {\n  display: flex;\n  padding: 10px 10px;\n  font-size: 16px;\n  color: #fff;\n  background-color: #ccc;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  margin-left: 20px;\n  margin-right: 20px;\n}\n\n.is-active { \n  color: #fff;\n  background-color: #0bc2d6;\n}\n\n.chart-container {\n  display: flex;\n  align-items:center;\n  justify-content: center;\n  margin-top: 30px; \n  width: 95%;\n  height: 600px;\n}\n\n</style>","import { render } from \"./NewHouse.vue?vue&type=template&id=27b59354\"\nimport script from \"./NewHouse.vue?vue&type=script&lang=js\"\nexport * from \"./NewHouse.vue?vue&type=script&lang=js\"\n\nimport \"./NewHouse.vue?vue&type=style&index=0&id=27b59354&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive }\" @click=\"drawBarChart\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive }\" @click=\"drawLineChart\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n   \n    <div class=\"chart-container\" id=\"oldHouseVolumeMonth\"></div>\n  </div>\n</template>\n  \n  <script>\n  import * as echarts from 'echarts';\n  \n  export default {\n\n    data() {\n      return {\n        isBarActive: false,\n        isLineActive: false,\n        houseList: null,\n        chartsType: null,\n        oldHouseArrayYear2019: null,\n        oldHouseArrayYear2020: null,\n        oldHouseArrayYear2021: null,\n        oldHouseArrayYear2022: null,\n        oldHouseArrayMonth2019: null,\n        oldHouseArrayMonth2020: null,\n        oldHouseArrayMonth2021: null,\n        oldHouseArrayMonth2022: null\n      };\n    },\n    mounted() {\n      this.loadData();\n    },\n\n    methods: {\n      loadData() {\n        // 读取本地的 JSON 文件\n        fetch('houseTradingInfo.json')\n          .then(response => response.json())\n          .then(data => {\n            console.log('请求成功二手房数据:', data.houseList);\n            this.houseList = data.houseList;\n            this.handleData();\n            // 处理数据绘制图表\n            this.drawBarChart();\n          })\n          .catch(error => {\n            console.error('Error fetching data:', error)\n          })\n      },\n        handleData() {\n          // 2019-2022年二手房月成交累计数据\n          this.oldHouseArrayYear2019 = this.oldHouseTotalArr('oldHouseVolume','2019')\n          this.oldHouseArrayYear2020 = this.oldHouseTotalArr('oldHouseVolume','2020')\n          this.oldHouseArrayYear2021 = this.oldHouseTotalArr('oldHouseVolume','2021')\n          this.oldHouseArrayYear2022 = this.oldHouseTotalArr('oldHouseVolume','2022')\n          console.log('2022年二手房年成交数组 %o ',this.oldHouseArrayYear2022)\n          // 2019-2022年二手房月成交数据\n          this.oldHouseArrayMonth2019 = this.oldSelectMonthArr(this.oldHouseArrayYear2019)\n          this.oldHouseArrayMonth2020 = this.oldSelectMonthArr(this.oldHouseArrayYear2020)\n          this.oldHouseArrayMonth2021 = this.oldSelectMonthArr(this.oldHouseArrayYear2021)\n          this.oldHouseArrayMonth2022 = this.oldSelectMonthArr(this.oldHouseArrayYear2022)\n\n          //补全数据处理\n          this.oldHouseArrayMonth2020.unshift(0, 0, this.oldHouseArrayYear2020[0])\n          this.oldHouseArrayMonth2021.unshift(0, this.oldHouseArrayYear2021[0])\n          this.oldHouseArrayMonth2022.unshift(0, this.oldHouseArrayYear2022[0])\n          console.log('2022年二手房月成交数组 %o ',this.oldHouseArrayMonth2022)\n          //前面数据补齐-2020年前3月数据为0\n          this.oldHouseArrayMonth2020.unshift(0, 0, 0);\n        },\n        //按照年份与日期做筛选与排序\n        oldHouseTotalArr(houseType, year) {\n          var inventory = Number();\n          return this.houseList.filter( houseObj => {\n              var yearStr = String()\n              yearStr = houseObj.tradingDate\n              return yearStr.search(year) != -1;\n          }).sort(function(a,b) {\n              return a.statisticalTime > b.statisticalTime ? 1: -1;\n          }).map(item => {\n              if (houseType == 'oldHouseVolume') {\n                  var volume = Number(item.oldHouseVolume)\n                  return volume\n              }else if (houseType == 'newHouseVolume') {\n                  inventory = Number(item.newHouseVolume)\n                  return inventory\n              }else if (houseType == 'newHouseInventory'){\n                  inventory = Number(item.newHouseInventory)\n                  return inventory\n              }\n              \n          })\n        },\n        oldSelectMonthArr(arr) {\n                var tempArr = Array()\n                for(let i in arr) {\n                    if (i>0) {\n                        var currenthMonth = (arr[i])-(arr[i-1])\n                        tempArr.push(currenthMonth)\n                    }\n                }\n                return tempArr\n        },\n          \n\n      drawCharts() {\n        // 基于准备好的dom，初始化echarts实例（武汉新房月成交量柱状图）\n        var oldHouseVolumeBarMonthChart = echarts.init(document.getElementById('oldHouseVolumeMonth'));\n        // 指定图表的配置项和数据\n        var oldHouseVolumeBarMonthOption = {\n            title: {\n                text: '武汉二手房月成交量',\n                left: 'center',\n                top: 'top'\n            },\n            tooltip: {\n               //X轴悬浮显示所有数据\n               trigger: 'axis'\n            },\n            legend: {\n                left: 'center',\n                top: '50px'\n            },\n            grid: {\n                left: '1%',\n                right: '1%',\n                top: '20%',\n                bottom: '1%',\n                containLabel: true\n            },\n            xAxis: {\n                data: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n            },\n            yAxis: {},\n            series: [\n                {\n                    name: 2019,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2019\n                },\n                {\n                    name: 2020,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2020\n                },\n                {\n                    name: 2021,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2021\n                },\n                {\n                    name: 2022,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2022\n                }\n            ]\n        };\n        // 使用刚指定的配置项和数据显示图表。\n        oldHouseVolumeBarMonthChart.setOption(oldHouseVolumeBarMonthOption);\n      },\n      drawBarChart() {\n        this.isBarActive = true;\n        this.isLineActive = false;\n        this.chartsType = \"bar\"\n        this.drawCharts();\n \n      },\n      drawLineChart() {\n        this.isBarActive = false;\n        this.isLineActive = true;\n        // 在这里绘制折线图\n        this.chartsType = \"line\"\n        this.drawCharts();\n      }\n    }\n  };\n  </script>\n\n\n","import { render } from \"./SecondHandHouse.vue?vue&type=template&id=68580c56\"\nimport script from \"./SecondHandHouse.vue?vue&type=script&lang=js\"\nexport * from \"./SecondHandHouse.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_GDP_HG }\" @click=\"drawBarChart_GDP_HG\"\n        style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_GDP_HG }\" @click=\"drawLineChart_GDP_HG\"\n        style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"gdp_hg\"></div>\n\n    <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_GDP_CS }\" @click=\"drawBarChart_GDP_CS\"\n        style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_GDP_CS }\" @click=\"drawLineChart_GDP_CS\"\n        style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"gdp_cs\"></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport { sortYearMonths } from './CommonUtil';\n\nexport default {\n\n  data() {\n    return {\n      GDP_Type: {\n        A020102: 'A020102',     //  国内生产总值\n        A020103: 'A020103',     //  第一产业增加值\n        A020104: 'A020104',     //  第二产业增加值\n        A020105: 'A020105',     //  第三产业增加值\n        A0101: 'A0101',         //  地区生产总值\n\n      },\n      CityCode: {\n        BJ: '110000', //   北京\n        SH: '310000', //   上海\n        GZ: '440100', //   广州\n        SZ: '440300', //   深圳\n        HZ: '330100', //   杭州\n        CD: '510100', //   成都\n        WH: '420100', //   武汉\n        NJ: '320100', //   南京\n        CQ: '500000', //   重庆\n        XA: '610100', //   西安\n        ZZ: '410100', //   郑州\n        HF: '340100', //   合肥\n        YC: '420500', //   宜昌\n      },\n      Dbcode: {\n        hgnd: 'hgnd', //   国家年度数据\n        csnd: 'csnd', //   城市年度数据\n\n\n      },\n      isBarActive_GDP_HG: false,\n      isLineActive_GDP_HG: false,\n      isBarActive_GDP_CS: false,\n      isLineActive_GDP_CS: false,\n      gdpDatalistHG: null,\n      gdpDatalistCS: null,\n      chartsType: null\n    };\n  },\n  mounted() {\n    this.loadData();\n  },\n\n  methods: {\n    loadData() {\n      // 读取本地的 JSON 文件\n      fetch('gdpData.json')\n        .then(response => response.json())\n        .then(data => {\n          console.log('请求成功GDP数据:', data);\n          this.gdpDatalistHG = data.gdpDataListHG;\n          this.gdpDatalistCS = data.gdpDataListCS;\n          // 处理数据绘制图表\n          this.drawBarChart_GDP_HG();\n          this.drawBarChart_GDP_CS();\n        })\n        .catch(error => {\n          console.error('Error fetching data:', error)\n        })\n    },\n    // 国内生产总值\n    dataArr_GDP_HG(gdpType, date = '') {\n      return this.gdpDatalistHG.filter(gdpDatalistHGObj => {\n        return gdpDatalistHGObj.code.search(gdpType) != -1;\n      }).sort(function (a, b) {\n        return sortYearMonths(a.date, b.date);\n      }).map(item => {\n        // 如果是时间，筛选横坐标：时间\n        if (date == 'sj') {\n          return Number(item.date);\n        }\n        // 筛选纵坐标：value\n        return Number(item.value);\n      })\n    },\n    // 地区生产总值\n    dataArr_GDP_CS(cityCode, date = '') {\n      return this.gdpDatalistCS.filter(gdpDatalistCSObj => {\n        return gdpDatalistCSObj.code.search(this.GDP_Type.A0101) != -1 && gdpDatalistCSObj.cityCode.search(cityCode) != -1;\n      }).sort(function (a, b) {\n        return sortYearMonths(a.date, b.date);\n      }).map(item => {\n        // 如果是时间，筛选横坐标：时间\n        if (date == 'sj') {\n          return Number(item.date);\n        }\n        // 筛选纵坐标：value\n        return Number(item.value);\n      })\n    },\n\n    drawChart_GDP_HG() {\n      // 基于准备好的dom，初始化echarts实例\n      var gdphgChart = echarts.init(document.getElementById('gdp_hg'));\n      // 指定图表的配置项和数据\n      var gdphgOption = {\n        title: {\n          text: '国民经济核算',\n          left: 'center',\n          top: 'top'\n        },\n        tooltip: {\n          //X轴悬浮显示所有数据\n          trigger: 'axis'\n        },\n        legend: {\n          left: 'center',\n          top: '50px'\n        },\n        grid: {\n          left: '1%',\n          right: '1%',\n          top: '20%',\n          bottom: '1%',\n          containLabel: true\n        },\n        xAxis: {\n          data: this.dataArr_GDP_HG(this.GDP_Type.A020102,'sj')\n        },\n        yAxis: {},\n        series: [\n          {\n            name: '国内生产总值(亿元)',\n            type: this.chartsType,\n            data: this.dataArr_GDP_HG(this.GDP_Type.A020102)\n          },\n          {\n            name: '第一产业增加值(亿元)',\n            type: this.chartsType,\n            data: this.dataArr_GDP_HG(this.GDP_Type.A020103)\n          },\n          {\n            name: '第二产业增加值(亿元)',\n            type: this.chartsType,\n            data: this.dataArr_GDP_HG(this.GDP_Type.A020104)\n          },\n          {\n            name: '第三产业增加值(亿元)',\n            type: this.chartsType,\n            data: this.dataArr_GDP_HG(this.GDP_Type.A020105)\n          },\n\n        ]\n      };\n      // 使用刚指定的配置项和数据显示图表。\n      gdphgChart.setOption(gdphgOption);\n    },\n    // 地区生产总值\n    drawChart_GDP_CS() {\n      // 基于准备好的dom，初始化echarts实例\n      var gdpcsChart = echarts.init(document.getElementById('gdp_cs'));\n      // 指定图表的配置项和数据\n      var gdpcsOption = {\n        title: {\n          text: '地区生产总值（当年价格）',\n          left: 'center',\n          top: 'top',\n        },\n        tooltip: {\n          //X轴悬浮显示所有数据\n          trigger: 'axis'\n        },\n        legend: {\n          left: 'center',\n          top: '10%'\n        },\n        grid: {\n          left: '1%',\n          right: '1%',\n          top: '20%',\n          bottom: '1%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: this.dataArr_GDP_CS(this.CityCode.BJ, 'sj')\n        },\n        yAxis: {\n\n        },\n        series: [\n          {\n            name: '北京',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.BJ)\n          },\n          {\n            name: '上海',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.SH)\n          },\n          {\n            name: '广州',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.GZ)\n          },\n          {\n            name: '深圳',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.SZ)\n          },\n          {\n            name: '杭州',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.HZ)\n          },\n          {\n            name: '成都',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.CD)\n          },\n          {\n            name: '武汉',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.WH)\n          },\n          {\n            name: '南京',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.NJ)\n          },\n          {\n            name: '重庆',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.CQ)\n          },\n          {\n            name: '西安',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.XA)\n          },\n          {\n            name: '合肥',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.HF)\n          },\n          {\n            name: '郑州',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.ZZ)\n          },\n          {\n            name: '宜昌',\n            type: this.chartsType,\n            data: this.dataArr_GDP_CS(this.CityCode.YC)\n          },\n\n        ]\n      };\n      // 使用刚指定的配置项和数据显示图表。\n      gdpcsChart.setOption(gdpcsOption);\n    },\n    drawBarChart_GDP_HG() {\n      this.isBarActive_GDP_HG = true;\n      this.isLineActive_GDP_HG = false;\n      // 在这里绘制柱状图\n      this.chartsType = \"bar\"\n      this.drawChart_GDP_HG()\n\n    },\n    drawLineChart_GDP_HG() {\n      this.isBarActive_GDP_HG = false;\n      this.isLineActive_GDP_HG = true;\n      // 在这里绘制折线图\n      this.chartsType = \"line\"\n      this.drawChart_GDP_HG()\n    },\n    drawBarChart_GDP_CS() {\n      this.isBarActive_GDP_CS = true;\n      this.isLineActive_GDP_CS = false;\n      // 在这里绘制柱状图\n      this.chartsType = \"bar\"\n      this.drawChart_GDP_CS()\n\n    },\n    drawLineChart_GDP_CS() {\n      this.isBarActive_GDP_CS = false;\n      this.isLineActive_GDP_CS = true;\n      // 在这里绘制折线图\n      this.chartsType = \"line\"\n      this.drawChart_GDP_CS()\n    }\n  }\n};\n</script>\n","// 定义排序函数\nexport function sortYearMonths(date1, date2) {\n        // 自定义比较函数\n        function compareYearMonth(a, b) {\n          // 将日期字符串转换为统一的格式\n          a = a.replace('-', '');\n          b = b.replace('-', '');\n  \n          // 将年份和月份解析为整数\n          var aYear = parseInt(a.substring(0, 4));\n          var aMonth = parseInt(a.substring(4));\n          var bYear = parseInt(b.substring(0, 4));\n          var bMonth = parseInt(b.substring(4));\n  \n          // 首先按照年份升序排序\n          if (aYear !== bYear) {\n            return aYear - bYear;\n          } else {\n            // 如果年份相同，则按照月份升序排序\n            return aMonth - bMonth;\n          }\n        }\n        \n        // 返回排序后的结果\n        return compareYearMonth(date1, date2);\n}\n","import { render } from \"./GrossDomesticProduct.vue?vue&type=template&id=4b143601\"\nimport script from \"./GrossDomesticProduct.vue?vue&type=script&lang=js\"\nexport * from \"./GrossDomesticProduct.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive }\" @click=\"drawBarChart\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive }\" @click=\"drawLineChart\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n   \n    <div class=\"chart-container\" id=\"currencymonth\"></div>\n  </div>\n</template>\n  \n  <script>\n  import * as echarts from 'echarts';\n  \n  export default {\n\n    data() {\n      return {\n        isBarActive: false,\n        isLineActive: false,\n        currencyInfoList: null,\n        chartsType: null\n      };\n    },\n    mounted() {\n      this.loadData();\n    },\n\n    methods: {\n      loadData() {\n        // 读取本地的 JSON 文件\n        fetch('currencyInfo.json')\n          .then(response => response.json())\n          .then(data => {\n            console.log('请求成功金融数据:', data.currencyInfoList);\n            this.currencyInfoList = data.currencyInfoList;\n            // 处理数据绘制图表\n            this.drawBarChart();\n          })\n          .catch(error => {\n            console.error('Error fetching data:', error)\n          })\n      },\n        //按照年份与日期做筛选与排序\n        afreAndCurrencylArr(year) {\n          return this.currencyInfoList.filter( afreAndCurrencyObj => {\n              var yearStr = String()\n              yearStr = afreAndCurrencyObj.itemDate\n              return yearStr.search(year) != -1;\n          }).sort(function(a,b) {\n              return a.itemDate > b.itemDate ? 1: -1;\n          }).map(item => {\n              //取出某个字段数据\n              var afre = Number(item.m2)\n              return afre;\n          })\n        },\n\n      drawCharts() {\n        // 基于准备好的dom，初始化echarts实例\n        var currencyLineMonthChart = echarts.init(document.getElementById('currencymonth'));\n        // 指定图表的配置项和数据\n        var currencyLineMonthOption = {\n            title: {\n                text: '货币供应量M2',\n                left: 'center',\n                top: 'top'\n            },\n            tooltip: {\n               //X轴悬浮显示所有数据\n               trigger: 'axis'\n            },\n            legend: {\n                left: 'center',\n                top: '50px'\n            },\n            grid: {\n                left: '1%',\n                right: '1%',\n                top: '20%',\n                bottom: '1%',\n                containLabel: true\n            },\n            xAxis: {\n                type: 'category',\n                data: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n            },\n            yAxis: {\n              min: '1500000'\n            },\n            series: [\n                // {\n                //     name: 2014,\n                //     type: this.chartsType,\n                //     data: this.afreAndCurrencylArr(2014)\n                // },\n                // {\n                //     name: 2015,\n                //     type: this.chartsType,\n                //     data: this.afreAndCurrencylArr(2015)\n                // },\n                // {\n                //     name: 2016,\n                //     type: this.chartsType,\n                //     data: this.afreAndCurrencylArr(2016)\n                // },\n                // {\n                //     name: 2017,\n                //     type: this.chartsType,\n                //     data: this.afreAndCurrencylArr(2017)\n                // },\n                // {\n                //     name: 2018,\n                //     type: this.chartsType,\n                //     data: this.afreAndCurrencylArr(2018)\n                // },\n                {\n                    name: 2019,\n                    type: this.chartsType,\n                    data: this.afreAndCurrencylArr(2019)\n                },\n                {\n                    name: 2020,\n                    type: this.chartsType,\n                    data: this.afreAndCurrencylArr(2020)\n                },\n                {\n                    name: 2021,\n                    type: this.chartsType,\n                    data: this.afreAndCurrencylArr(2021)\n                },\n                {\n                    name: 2022,\n                    type: this.chartsType,\n                    data: this.afreAndCurrencylArr(2022)\n                },\n                {\n                    name: 2023,\n                    type: this.chartsType,\n                    data: this.afreAndCurrencylArr(2023)\n                },\n                {\n                    name: 2024,\n                    type: this.chartsType,\n                    data: this.afreAndCurrencylArr(2024)\n                }\n            ]\n        };\n        // 使用刚指定的配置项和数据显示图表。\n        currencyLineMonthChart.setOption(currencyLineMonthOption);\n      },\n      drawBarChart() {\n        this.isBarActive = true;\n        this.isLineActive = false;\n        this.chartsType = \"bar\"\n        this.drawCharts();\n \n      },\n      drawLineChart() {\n        this.isBarActive = false;\n        this.isLineActive = true;\n        // 在这里绘制折线图\n        this.chartsType = \"line\"\n        this.drawCharts();\n      }\n    }\n  };\n  </script>\n\n\n","import { render } from \"./FinancialIndustry.vue?vue&type=template&id=0e655b74\"\nimport script from \"./FinancialIndustry.vue?vue&type=script&lang=js\"\nexport * from \"./FinancialIndustry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_Population }\" @click=\"drawBarChart_Population\" style=\"margin-top: 50px;\" >柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_Population }\" @click=\"drawLineChart_Population\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"population\"></div>\n\n     <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_Populationrate }\" @click=\"drawBarChart_Populationrate\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_Populationrate }\" @click=\"drawLineChart_Populationrate\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"populationrate\"></div>\n\n     <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_Dependencyratio }\" @click=\"drawBarChart_Dependencyratio\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_Dependencyratio }\" @click=\"drawLineChart_Dependencyratio\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"dependencyratio\"></div>\n\n  </div>\n</template>\n    \n    <script>\n    import * as echarts from 'echarts';\n    import { sortYearMonths } from './CommonUtil';\n    export default {\n  \n      data() {\n        return {\n          PopulationType : {\n            Population_A030101 : 'A030101',   // 总人口\n            Population_A030102 : 'A030102',   // 男性\n            Population_A030103 : 'A030103',   // 女性\n            Population_A030104 : 'A030104',   // 城市\n            Population_A030105 : 'A030105',   // 农村\n            Population_A030302 : 'A030302',   // 0-14岁\n            Population_A030303 : 'A030303',   // 15-64岁\n            Population_A030304 : 'A030304'    // 65岁以上\n        },\n        PopulationRateType : {\n            Population_A030201 : 'A030201',   // 出生率\n            Population_A030202 : 'A030202',   // 死亡率\n            Population_A030203 : 'A030203',   // 自然增长率\n            Population_A030305 : 'A030305',   // 总抚养比\n            Population_A030306 : 'A030306',   // 少儿抚养比\n            Population_A030307 : 'A030307'    // 老年抚养比\n            \n        },\n          isBarActive_Population: false,\n          isLineActive_Population: false,\n          isBarActive_Populationrate: false,\n          isLineActive_Populationrate: false,\n          isBarActive_Dependencyratio: false,\n          isLineActive_Dependencyratio: false,\n          populationDataList: null,\n          chartsType: null\n        };\n      },\n      mounted() {\n        this.loadData();\n      },\n  \n      methods: {\n        loadData() {\n          // 请求总人口公开数据\n          fetch('populationData.json')\n            .then(response => response.json())\n            .then(data => {\n              console.log('请求成功人口数据:',data.populationData);\n              // 数组倒序处理\n              this.populationDataList = data.populationData;\n              // 处理数据绘制图表\n              this.drawBarChart_Population()\n              this.drawBarChart_Populationrate()\n              this.drawBarChart_Dependencyratio()\n            })\n            .catch(error => {\n              console.error('Error fetching data:', error)\n            })\n        },\n        //按照年份与日期做筛选与排序\n        populationArr(type) {\n          return this.populationDataList.filter( populationDataListObj => {\n            return populationDataListObj.code.search(type) != -1;\n        }).sort(function(a,b) {\n            return sortYearMonths(a.date, b.date);\n        }).map(item => {\n              //取出某个字段数据\n              var number = Number(item.value)\n              return number;\n          })\n        },\n        // 总人口图表\n        drawPopulationCharts() {\n          // 基于准备好的dom，初始化echarts实例\n          var populationChart = echarts.init(document.getElementById('population'));\n          // 指定图表的配置项和数据\n          var populationOption = {\n              title: {\n                  text: '人口数据',\n                  left: 'center',\n                  top: 'top'\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '50px'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '20%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: ['2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023']\n              },\n              yAxis: {\n              },\n              series: [\n                  {\n                      name: '总人口(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030101)\n                  },\n                  {\n                      name: '男性(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030102)\n                  },\n                  {\n                      name: '女性(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030103)\n                  },                  {\n                      name: '城镇(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030104)\n                  },\n                  {\n                      name: '农村(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030105)\n                  },\n                  {\n                      name: '0-14岁(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030302)\n                  },\n                  {\n                      name: '14-64岁(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030303)\n                  },\n                  {\n                      name: '65岁以上(万人)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationType.Population_A030304)\n                  }\n                \n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          populationChart.setOption(populationOption);\n        },\n        // 出生率/死亡率/增长率图表\n        drawPopulationRateCharts() {\n          // 基于准备好的dom，初始化echarts实例\n          var populationrateChart = echarts.init(document.getElementById('populationrate'));\n          // 指定图表的配置项和数据\n          var populationrateOption = {\n              title: {\n                  text: '人口率',\n                  left: 'center',\n                  top: 'top'\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '50px'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '20%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: ['2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023']\n              },\n              yAxis: {\n              },\n              series: [\n                  {\n                      name: '出生率(%)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationRateType.Population_A030201)\n                  },\n                  {\n                      name: '死亡率(%)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationRateType.Population_A030202)\n                  },\n                  {\n                      name: '自然增长率(%)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationRateType.Population_A030203)\n                  } \n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          populationrateChart.setOption(populationrateOption);\n        },\n         // 抚养比图表\n         drawDependencyRatioCharts() {\n          // 基于准备好的dom，初始化echarts实例\n          var dependencyratioChart = echarts.init(document.getElementById('dependencyratio'));\n          // 指定图表的配置项和数据\n          var dependencyratioOption = {\n              title: {\n                  text: '抚养比',\n                  left: 'center',\n                  top: 'top'\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '50px'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '20%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: ['2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023']\n              },\n              yAxis: {\n              },\n              series: [\n                  {\n                      name: '总抚养比(%)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationRateType.Population_A030305)\n                  },\n                  {\n                      name: '少儿抚养比(%)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationRateType.Population_A030306)\n                  },\n                  {\n                      name: '老年抚养比(%)',\n                      type: this.chartsType,\n                      data: this.populationArr(this.PopulationRateType.Population_A030307)\n                  }\n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          dependencyratioChart.setOption(dependencyratioOption);\n        },\n        drawBarChart_Population() {\n          this.isBarActive_Population = true;\n          this.isLineActive_Population = false;\n          this.chartsType = \"bar\"\n          this.drawPopulationCharts()\n   \n        },\n        drawLineChart_Population() {\n          this.isBarActive_Population = false;\n          this.isLineActive_Population = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawPopulationCharts()\n        },\n        drawBarChart_Populationrate() {\n          this.isBarActive_Populationrate = true;\n          this.isLineActive_Populationrate = false;\n          this.chartsType = \"bar\"\n          this.drawPopulationRateCharts()\n   \n        },\n        drawLineChart_Populationrate() {\n          this.isBarActive_Populationrate = false;\n          this.isLineActive_Populationrate = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawPopulationRateCharts()\n        },\n        drawBarChart_Dependencyratio() {\n          this.isBarActive_Dependencyratio = true;\n          this.isLineActive_Dependencyratio = false;\n          this.chartsType = \"bar\"\n          this.drawDependencyRatioCharts()\n   \n        },\n        drawLineChart_Dependencyratio() {\n          this.isBarActive_Dependencyratio = false;\n          this.isLineActive_Dependencyratio = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawDependencyRatioCharts()\n        }\n    }\n  };\n    </script>\n  \n  \n  ","import { render } from \"./PopulationCorrelation.vue?vue&type=template&id=2b45c364\"\nimport script from \"./PopulationCorrelation.vue?vue&type=script&lang=js\"\nexport * from \"./PopulationCorrelation.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","  <template>\n    <div class=\"container\">\n      <div class=\"buttons\">\n        <button class=\"button\" :class=\"{ 'is-active': isBarActive_Indices}\" @click=\"drawBarChart_Indices\" style=\"margin-top: 50px;\">柱状图</button>\n        <button class=\"button\" :class=\"{ 'is-active': isLineActive_Indices }\" @click=\"drawLineChart_Indices\" style=\"margin-top: 50px;\">折线图</button>\n      </div>\n     \n      <div class=\"chart-container\" id=\"priceIndices\"></div>\n\n       <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n      <div class=\"buttons\">\n        <button class=\"button\" :class=\"{ 'is-active': isBarActive_PMI }\" @click=\"drawBarChart_PMI\" style=\"margin-top: 50px;\">柱状图</button>\n        <button class=\"button\" :class=\"{ 'is-active': isLineActive_PMI }\" @click=\"drawLineChart_PMI\" style=\"margin-top: 50px;\">折线图</button>\n      </div>\n      <div class=\"chart-container\" id=\"pmi\"></div>\n    </div>\n  </template>\n    \n    <script>\n    import * as echarts from 'echarts';\n    import { sortYearMonths } from './CommonUtil';\n    export default {\n  \n      data() {\n        return {\n          IndicesType : {\n            CPI_A01010101 : 'A01010101', //  CPI 上年同比\n            CPI_A01030101 : 'A01030101', //  CPI 上月环比\n            PPI_A01080101 : 'A01080101', //  PPI 上年同比\n            PPI_A01080701 : 'A01080701', //  PPI 上月环比\n            PMI_A0B0101 :   'A0B0101',   //  制造业采购指数\n            PMI_A0B0201 :   'A0B0201',   //  非制造业采购指数\n            PMI_A0B0301 :   'A0B0301'    //  综合采购指数\n        },\n          isBarActive_Indices: false,\n          isLineActive_Indices: false,\n          isBarActive_PMI: false,\n          isLineActive_PMI: false,\n          indicesDataList: null,\n          chartsType: null\n        };\n      },\n      mounted() {\n        this.loadData();\n      },\n  \n      methods: {\n        loadData() {\n          // 请求priceIndices数据\n          fetch('indicesData.json')\n            .then(response => response.json())\n            .then(data => {\n              this.indicesDataList = data.indicesData\n              console.log('请求成功priceIndices数据:', this.indicesDataList);\n              // 处理数据绘制图表\n              this.drawBarChart_Indices();\n              this.drawBarChart_PMI();\n            })\n            .catch(error => {\n              console.error('Error fetching data:', error)\n            })\n        },\n        // 按照类型与字段名称\n        dataArr(type) {\n          return this.indicesDataList.filter( indicesDataListObj => {\n                return indicesDataListObj.code.search(type) != -1;\n            }).sort(function(a,b) {\n              return sortYearMonths(a.date, b.date);\n          }).map(item => {\n                return Number(item.value);\n          })\n        },\n       \n        // 获取时间横坐标数组数据\n        axisArr(type) {\n            return this.indicesDataList.filter(indicesDataListObj => {\n              return indicesDataListObj.code.search(type) != -1;\n          }).sort(function(a,b) {\n              return sortYearMonths(a.date, b.date);\n          }).map(item => {\n              return Number(item.date);\n            })\n          },\n\n        // cpi图表\n        drawPriceIndicesChat() {\n          // 基于准备好的dom，初始化echarts实例\n          var priceIndicesChart = echarts.init(document.getElementById('priceIndices'));\n          // 指定图表的配置项和数据\n          var priceIndicesOption = {\n              title: {\n                  text: '价格指数',\n                  subtext: 'CPI消费者物价指数反映一定时期内城乡居民所购买的 \\n 生活消费品和服务项目价格变动趋势和程度的相对数 \\n PPI生产者物价指数用来衡量制造商出厂价的平均变化 \\n 生产者物价指数比预期数值高时，表明有通货膨胀的风险 \\n 生产者物价指数比预期数值低时，则表明有通货紧缩的风险 ',\n                  left: 'center',\n                  top: 'top',\n                  \n                  subtextStyle: {\n                    fontWeight: 'bold',\n                    fontSize: 13,\n                    lineHeight: 20,\n                  }\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '25%'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '35%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: this.axisArr(this.IndicesType.CPI_A01010101)\n              },\n              yAxis: {\n                min: '94', // 这里不是0，所以最后一个月为0的时候折线图显示在上一个月落点处\n                max: '101'\n              },\n              series: [\n                  {\n                      name: 'CPI同比(上年=100)',\n                      type: this.chartsType,\n                      data: this.dataArr(this.IndicesType.CPI_A01010101)\n                  },\n                  {\n                      name: 'CPI环比(上月=100)',\n                      type: this.chartsType,\n                      data: this.dataArr(this.IndicesType.CPI_A01030101)\n                  },\n                  {\n                      name: 'PPI同比(上年=100)',\n                      type: this.chartsType,\n                      data: this.dataArr(this.IndicesType.PPI_A01080101)\n                  },\n                  {\n                      name: 'PPI环比(上月=100)',\n                      type: this.chartsType,\n                      data: this.dataArr(this.IndicesType.PPI_A01080701)\n                  }\n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          priceIndicesChart.setOption(priceIndicesOption);\n        },\n\n         // pmi图表\n         drawPMIChart() {\n          // 基于准备好的dom，初始化echarts实例\n          var pmiChart = echarts.init(document.getElementById('pmi'));\n          // 指定图表的配置项和数据\n          var pmiOption = { \n              title: {\n                  text: '采购经理指数',\n                  subtext: 'PMI是一套月度发布的、综合性的经济监测指标体系 \\n PMI指数50%为荣枯分水线 \\n PMI略大于50,说明经济在缓慢前进 \\n PMI略小于50说明经济在慢慢走向衰退',\n                  left: 'center',\n                  top: 'top',\n                  subtextStyle: {\n                    fontWeight: 'bold',\n                    fontSize: 13,\n                    lineHeight: 20,\n                  }\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '20%'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '35%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: this.axisArr(this.IndicesType.PMI_A0B0101)\n              },\n              yAxis: {\n                min: '48',\n                max: '57'\n              },\n              series: [\n                  {\n                      name: '制造业PMI',\n                      type: this.chartsType,\n                      data: this.dataArr(this.IndicesType.PMI_A0B0101)\n                  },\n                  {\n                      name: '非制造业PMI',\n                      type: this.chartsType,\n                      data: this.dataArr(this.IndicesType.PMI_A0B0201)\n                  },\n                  {\n                      name: '综合PMI',\n                      type: this.chartsType,\n                      data: this.dataArr(this.IndicesType.PMI_A0B0301)\n                  }\n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          pmiChart.setOption(pmiOption);\n        },\n       \n        drawBarChart_Indices() {\n          this.isBarActive_Indices = true;\n          this.isLineActive_Indices = false;\n          // 在这里绘制柱状图\n          this.chartsType = \"bar\"\n          this.drawPriceIndicesChat();\n   \n        },\n        drawLineChart_Indices() {\n          this.isBarActive_Indices = false;\n          this.isLineActive_Indices = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawPriceIndicesChat();\n        },\n        drawBarChart_PMI() {\n          this.isBarActive_PMI = true;\n          this.isLineActive_PMI = false;\n          // 在这里绘制柱状图\n          this.chartsType = \"bar\"\n          this.drawPMIChart();\n   \n        },\n        drawLineChart_PMI() {\n          this.isBarActive_PMI = false;\n          this.isLineActive_PMI = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawPMIChart()\n        }\n      }\n    };\n    </script>\n  \n  \n  ","import { render } from \"./IndicesData.vue?vue&type=template&id=93a53784\"\nimport script from \"./IndicesData.vue?vue&type=script&lang=js\"\nexport * from \"./IndicesData.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n<template>\n  <div class=\"container\">\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_Income }\" @click=\"drawBarChart_Income\" style=\"margin-top: 50px;\" >柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_Income }\" @click=\"drawLineChart_Income\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"income\"></div>\n\n     <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_Engel }\" @click=\"drawBarChart_Engel\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_Engel }\" @click=\"drawLineChart_Engel\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"engelcoefficient\"></div>\n\n     <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n    <div class=\"buttons\">\n      <button class=\"button\" :class=\"{ 'is-active': isBarActive_Gini }\" @click=\"drawBarChart_Gini\" style=\"margin-top: 50px;\">柱状图</button>\n      <button class=\"button\" :class=\"{ 'is-active': isLineActive_Gini }\" @click=\"drawLineChart_Gini\" style=\"margin-top: 50px;\">折线图</button>\n    </div>\n    <div class=\"chart-container\" id=\"ginicoefficient\"></div>\n\n  </div>\n</template>\n    \n    <script>\n    import * as echarts from 'echarts';\n    import { sortYearMonths } from './CommonUtil';\n    export default {\n  \n      data() {\n        return {\n          LivingStandards_Income : {\n            A0A0101 : 'A0A0101',   // 居民人均可支配收入\n            A0A0103 : 'A0A0103',   // 居民人均可支配收入中位数\n            A0A0201 : 'A0A0201',   // 城镇居民人均可支配收入\n            A0A0203 : 'A0A0203',   // 城镇居民人均可支配收入中位数\n            A0A0301 : 'A0A0301',   // 农村居民人均可支配收入\n            A0A0303 : 'A0A0303',   // 农村居民人均可支配收入中位数\n        },\n        LivingStandards_Coefficient : {\n            A0A0G01 : 'A0A0G01',   // 居民人均可支配收入基尼系数\n            A0A0H01 : 'A0A0H01',   // 居民恩格尔系数\n            A0A0H02 : 'A0A0H02',   // 城镇居民恩格尔系数\n            A0A0H03 : 'A0A0H03',   // 农村居民恩格尔系数\n    \n        },\n          isBarActive_Income: false,\n          isLineActive_Income: false,\n          isBarActive_Engel: false,\n          isLineActive_Engel: false,\n          isBarActive_Gini: false,\n          isLineActive_Gini: false,\n          livingStandardsDataList: null,\n          chartsType: null\n        };\n      },\n      mounted() {\n        this.loadData();\n      },\n  \n      methods: {\n        loadData() {\n          // 请求人民收入公开数据\n          fetch('livingStandardsData.json')\n            .then(response => response.json())\n            .then(data => {\n              console.log('请求成功人民收入数据:',data.livingStandardsData);\n              // 列表数据\n              this.livingStandardsDataList = data.livingStandardsData;\n              // 处理数据绘制图表\n              this.drawBarChart_Income()\n              this.drawBarChart_Engel()\n              this.drawBarChart_Gini()\n            })\n            .catch(error => {\n              console.error('Error fetching data:', error)\n            })\n        },\n        //按照年份与日期做筛选与排序\n        livingStandardsArr(type) {\n          return this.livingStandardsDataList.filter( livingStandardsDataListObj => {\n            return livingStandardsDataListObj.code.search(type) != -1;\n        }).sort(function(a,b) {\n            return sortYearMonths(a.date, b.date);\n        }).map(item => {\n              //取出某个字段数据\n              var number = Number(item.value)\n              return number;\n          })\n        },\n        // 平均收入图表\n        drawIncomeCharts() {\n          // 基于准备好的dom，初始化echarts实例\n          var incomeChart = echarts.init(document.getElementById('income'));\n          // 指定图表的配置项和数据\n          var incomeOption = {\n              title: {\n                  text: '居民人均收入数据',\n                  left: 'center',\n                  top: 'top'\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '50px'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '20%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: ['2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023']\n              },\n              yAxis: {\n              },\n              series: [\n                  {\n                      name: '人均收入(万)',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Income.A0A0101)\n                  },\n                  {\n                      name: '人均收入中位数(万)',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Income.A0A0103)\n                  },\n                  {\n                      name: '城镇人均收入(万)',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Income.A0A0201)\n                  },                  {\n                      name: '城镇人均收入中位数(万)',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Income.A0A0203)\n                  },\n                  {\n                      name: '农村人均收入(万)',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Income.A0A0301)\n                  },\n                  {\n                      name: '农村人均收入中位数(万)',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Income.A0A0303)\n                  }\n                \n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          incomeChart.setOption(incomeOption);\n        },\n        // 恩格尔系数\n        drawEngelCoefficientCharts() {\n          // 基于准备好的dom，初始化echarts实例\n          var engelCoefficientChart = echarts.init(document.getElementById('engelcoefficient'));\n          // 指定图表的配置项和数据\n          var engelCoefficientOption = {\n              title: {\n                  text: '恩格尔系数',\n                  subtext: '恩格尔系数是食品支出总额占个人消费支出总额的比重 \\n 59%以上为贫困 50~59%为温饱 \\n 40~50%为小康 30~40%为富裕 \\n 低于30%为最富裕',\n                  left: 'center',\n                  top: 'top',\n                  subtextStyle: {\n                    fontWeight: 'bold',\n                    fontSize: 13,\n                    lineHeight: 20,\n                  }\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '20%'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '30%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: ['2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023']\n              },\n              yAxis: {\n              },\n              series: [\n                  {\n                      name: '居民恩格尔系数',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Coefficient.A0A0H01)\n                  },\n                  {\n                      name: '城镇居民恩格尔系数',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Coefficient.A0A0H02)\n                  },\n                  {\n                      name: '农村居民恩格尔系数',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Coefficient.A0A0H03)\n                  } \n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          engelCoefficientChart.setOption(engelCoefficientOption);\n        },\n         // 基尼系数图表\n         drawGiniCoefficientCharts() {\n          // 基于准备好的dom，初始化echarts实例\n          var giniCoefficientChart = echarts.init(document.getElementById('ginicoefficient'));\n          // 指定图表的配置项和数据\n          var giniCoefficientOption = {\n              title: {\n                  text: '基尼系数',\n                  subtext: '衡量一个国家或地区居民收入差距的常用指标之一 \\n 0.2-0.29表示指数等级低(比较平均) \\n 0.3-0.39表示指数等级中(相对合理) \\n 0.4-0.59表示指数等级高(差距较大) \\n 0.6以上表示指数等级极高(差距悬殊) \\n 0.4作为收入分配差距的“警戒线”',\n                  left: 'center',\n                  top: 'top',\n                  subtextStyle: {\n                    fontWeight: 'bold',\n                    fontSize: 13,\n                    lineHeight: 20,\n                  }\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '27%'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '35%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: ['2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023']\n              },\n              yAxis: {\n              },\n              series: [\n                  {\n                      name: '基尼系数',\n                      type: this.chartsType,\n                      data: this.livingStandardsArr(this.LivingStandards_Coefficient.A0A0G01)\n                  }\n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          giniCoefficientChart.setOption(giniCoefficientOption);\n        },\n        drawBarChart_Income() {\n          this.isBarActive_Income = true;\n          this.isLineActive_Income = false;\n          this.chartsType = \"bar\"\n          this.drawIncomeCharts()\n   \n        },\n        drawLineChart_Income() {\n          this.isBarActive_Income = false;\n          this.isLineActive_Income = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawIncomeCharts()\n        },\n        drawBarChart_Engel() {\n          this.isBarActive_Engel = true;\n          this.isLineActive_Engel = false;\n          this.chartsType = \"bar\"\n          this.drawEngelCoefficientCharts()\n   \n        },\n        drawLineChart_Engel() {\n          this.isBarActive_Engel = false;\n          this.isLineActive_Engel = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawEngelCoefficientCharts()\n        },\n        drawBarChart_Gini() {\n          this.isBarActive_Gini = true;\n          this.isLineActive_Gini = false;\n          this.chartsType = \"bar\"\n          this.drawGiniCoefficientCharts()\n   \n        },\n        drawLineChart_Gini() {\n          this.isBarActive_Gini = false;\n          this.isLineActive_Gini = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawGiniCoefficientCharts()\n        }\n\n    }\n  };\n    </script>\n  \n  \n  ","import { render } from \"./LivingStandards.vue?vue&type=template&id=3c36cb3d\"\nimport script from \"./LivingStandards.vue?vue&type=script&lang=js\"\nexport * from \"./LivingStandards.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"container\">\n      <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n      <div class=\"buttons\">\n        <button class=\"button\" :class=\"{ 'is-active': isBarActive_HousePrice }\" @click=\"drawBarChart_HousePrice\" style=\"margin-top: 50px;\">柱状图</button>\n        <button class=\"button\" :class=\"{ 'is-active': isLineActive_HousePrice }\" @click=\"drawLineChart_HousePrice\" style=\"margin-top: 50px;\">折线图</button>\n      </div>\n      <div class=\"chart-container\" id=\"cityHousePrice\"></div>\n      <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n      <div class=\"buttons\">\n        <button class=\"button\" :class=\"{ 'is-active': isBarActive_NewHouse }\" @click=\"drawBarChart_NewHouse\" style=\"margin-top: 50px;\">柱状图</button>\n        <button class=\"button\" :class=\"{ 'is-active': isLineActive_NewHouse }\" @click=\"drawLineChart_NewHouse\" style=\"margin-top: 50px;\">折线图</button>\n      </div>\n      <div class=\"chart-container\" id=\"cityHouseNew\"></div>\n\n       <!-- 为下方的按钮添加上边距 style=\"margin-top -->\n      <div class=\"buttons\">\n        <button class=\"button\" :class=\"{ 'is-active': isBarActive_OldHouse }\" @click=\"drawBarChart_OldHouse\" style=\"margin-top: 50px;\">柱状图</button>\n        <button class=\"button\" :class=\"{ 'is-active': isLineActive_OldHouse }\" @click=\"drawLineChart_OldHouse\" style=\"margin-top: 50px;\">折线图</button>\n      </div>\n      <div class=\"chart-container\" id=\"cityHouseOld\"></div>\n    </div>\n  </template>\n    \n    <script>\n    import * as echarts from 'echarts';\n    import { sortYearMonths } from './CommonUtil';\n    export default {\n  \n      data() {\n        return {\n          CityHouse_Type : {\n            A030C : 'A030C',     //   住宅商品房平均销售价格\n            A010804 : 'A010804', //   新建商品住宅销售价格指数(上月=100)\n            A010807 : 'A010807', //   二手房住宅销售价格指数(上月=100)\n            \n         },\n         CityCode : {\n             BJ : '110000', //   北京\n             SH : '310000', //   上海\n             GZ : '440100', //   广州\n             SZ : '440300', //   深圳\n             HZ: '330100', //    杭州\n             CD : '510100', //   成都\n             WH : '420100', //   武汉\n             NJ : '320100', //   南京\n             CQ : '500000', //   重庆\n             XA : '610100', //   西安\n             ZZ : '410100', //   郑州\n             HF : '340100', //   合肥\n             YC : '420500', //   宜昌\n          },\n          CityHouse_Dbcode : {\n            csnd : 'csnd', //   城市年度数据\n            csyd : 'csyd', //   城市月度数据\n            \n         },\n          isBarActive_HousePrice: false,\n          isLineActive_HousePrice: false,\n          isBarActive_NewHouse: false,\n          isLineActive_NewHouse: false,\n          isBarActive_OldHouse: false,\n          isLineActive_OldHouse: false,\n          cityHouseDataList: null,\n          chartsType: null\n        };\n      },\n      mounted() {\n        this.loadData();\n      },\n  \n      methods: {\n        loadData() {\n          // 请求cityHouse数据\n          fetch('cityHouseData.json')\n            .then(response => response.json())\n            .then(data => {\n              this.cityHouseDataList = data.cityHouseData\n              console.log('请求成功cityHouseNew数据:', this.cityHouseDataList);\n              // 处理数据绘制图表\n              this.drawBarChart_HousePrice();\n              this.drawBarChart_NewHouse();\n              this.drawBarChart_OldHouse();\n            })\n            .catch(error => {\n              console.error('Error fetching data:', error)\n            })\n        },\n        // 住宅商品房平均销售价格\n        dataArr_HousePrice(cityCode,date = '') {\n          return this.cityHouseDataList.filter( cityHouseDataListObj => {\n                return cityHouseDataListObj.code.search(this.CityHouse_Type.A030C) != -1 && cityHouseDataListObj.dbcode.search(this.CityHouse_Dbcode.csnd) != -1 && cityHouseDataListObj.cityCode.search(cityCode) != -1 ;\n            }).sort(function(a,b) {\n                return sortYearMonths(a.date, b.date);\n            }).map(item => {\n                // 如果是时间，筛选横坐标：时间\n                if (date == 'sj') {\n                    return Number(item.date);\n                }\n                 // 筛选纵坐标：value\n                return Number(item.value);\n            })\n        },\n        // 新建商品住宅销售价格指数(上月=100)\n        dataArr_NewHouse(cityCode,date = '') {\n            return this.cityHouseDataList.filter( cityHouseDataListObj => {\n                return cityHouseDataListObj.code.search(this.CityHouse_Type.A010804) != -1 && cityHouseDataListObj.dbcode.search(this.CityHouse_Dbcode.csyd) != -1 && cityHouseDataListObj.cityCode.search(cityCode) != -1 ;\n            }).sort(function(a,b) {\n                return sortYearMonths(a.date, b.date);\n            }).map(item => {\n                // 如果是时间，筛选横坐标：时间\n                if (date == 'sj') {\n                    return Number(item.date);\n                }\n                 // 筛选纵坐标：value\n                return Number(item.value);\n            })\n        },\n        // 二手房住宅销售价格指数(上月=100)\n        dataArr_OldHouse(cityCode,date = '') {\n            return this.cityHouseDataList.filter( cityHouseDataListObj => {\n                return cityHouseDataListObj.code.search(this.CityHouse_Type.A010807) != -1 && cityHouseDataListObj.dbcode.search(this.CityHouse_Dbcode.csyd) != -1 && cityHouseDataListObj.cityCode.search(cityCode) != -1 ;\n            }).sort(function(a,b) {\n              return sortYearMonths(a.date, b.date);\n            }).map(item => {\n                // 如果是时间，筛选横坐标：时间\n                if (date == 'sj') {\n                    return Number(item.date);\n                }\n                 // 筛选纵坐标：value\n                return Number(item.value);\n            })\n        },\n        // 商品住宅销售价格\n        drawCityHousePrice() {\n          // 基于准备好的dom，初始化echarts实例\n          var cityHousePriceChart = echarts.init(document.getElementById('cityHousePrice'));\n          // 指定图表的配置项和数据\n          var cityHousePriceOption = {\n              title: {\n                  text: '住宅商品房平均销售价格',\n                  left: 'center',\n                  top: 'top',\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '10%'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '20%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: this.dataArr_HousePrice(this.CityCode.BJ,'sj')\n              },\n              yAxis: {\n  \n              },\n              series: [\n                  {\n                      name: '北京',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.BJ)\n                  },\n                  {\n                      name: '上海',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.SH)\n                  },\n                  {\n                      name: '广州',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.GZ)\n                  },\n                  {\n                      name: '深圳',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.SZ)\n                  },\n                  {\n                      name: '杭州',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.HZ)\n                  },\n                  {\n                      name: '成都',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.CD)\n                  },\n                  {\n                      name: '武汉',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.WH)\n                  },\n                  {\n                      name: '南京',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.NJ)\n                  },\n                  {\n                      name: '重庆',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.CQ)\n                  },\n                  {\n                      name: '西安',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.XA)\n                  },\n                  {\n                      name: '合肥',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.HF)\n                  },\n                  {\n                      name: '郑州',\n                      type: this.chartsType,\n                      data: this.dataArr_HousePrice(this.CityCode.ZZ)\n                  },\n                  \n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          cityHousePriceChart.setOption(cityHousePriceOption);\n        },\n\n        // 新房图表\n        drawCityHouseNew() {\n          // 基于准备好的dom，初始化echarts实例\n          var cityHouseNewChart = echarts.init(document.getElementById('cityHouseNew'));\n          // 指定图表的配置项和数据\n          var cityHouseNewOption = {\n              title: {\n                  text: '新建商品住宅销售价格指数(上月=100)',\n                  left: 'center',\n                  top: 'top',\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '10%'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '20%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: this.dataArr_NewHouse(this.CityCode.BJ,'sj')\n              },\n              yAxis: {\n                min: '98', // 这里不是0，所以最后一个月为0的时候折线图显示在上一个月落点处\n                max: '101'\n              },\n              series: [\n                  {\n                      name: '北京',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.BJ)\n                  },\n                  {\n                      name: '上海',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.SH)\n                  },\n                  {\n                      name: '广州',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.GZ)\n                  },\n                  {\n                      name: '深圳',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.SZ)\n                  },\n                  {\n                      name: '杭州',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.HZ)\n                  },\n                  {\n                      name: '成都',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.CD)\n                  },\n                  {\n                      name: '武汉',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.WH)\n                  },\n                  {\n                      name: '南京',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.NJ)\n                  },\n                  {\n                      name: '重庆',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.CQ)\n                  },\n                  {\n                      name: '西安',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.XA)\n                  },\n                  {\n                      name: '合肥',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.HF)\n                  },\n                  {\n                      name: '郑州',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.ZZ)\n                  },\n                  {\n                      name: '宜昌',\n                      type: this.chartsType,\n                      data: this.dataArr_NewHouse(this.CityCode.YC)\n                  },\n                  \n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          cityHouseNewChart.setOption(cityHouseNewOption);\n        },\n\n        // 二手房图表\n        drawCityHouseOld() {\n          // 基于准备好的dom，初始化echarts实例\n          var cityHouseOldChart = echarts.init(document.getElementById('cityHouseOld'));\n          // 指定图表的配置项和数据\n          var cityHouseOldOption = {\n              title: {\n                  text: '二手住宅销售价格指数(上月=100)',\n                  left: 'center',\n                  top: 'top',\n              },\n              tooltip: {\n                 //X轴悬浮显示所有数据\n                 trigger: 'axis'\n              },\n              legend: {\n                  left: 'center',\n                  top: '10%'\n              },\n              grid: {\n                  left: '1%',\n                  right: '1%',\n                  top: '20%',\n                  bottom: '1%',\n                  containLabel: true\n              },\n              xAxis: {\n                  type: 'category',\n                  data: this.dataArr_OldHouse(this.CityCode.BJ,'sj')\n              },\n              yAxis: {\n                min: '98', // 这里不是0，所以最后一个月为0的时候折线图显示在上一个月落点处\n                max: '101'\n              },\n              series: [\n                  {\n                      name: '北京',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.BJ)\n                  },\n                  {\n                      name: '上海',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.SH)\n                  },\n                  {\n                      name: '广州',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.GZ)\n                  },\n                  {\n                      name: '深圳',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.SZ)\n                  },\n                  {\n                      name: '杭州',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.HZ)\n                  },\n                  {\n                      name: '成都',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.CD)\n                  },\n                  {\n                      name: '武汉',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.WH)\n                  },\n                  {\n                      name: '南京',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.NJ)\n                  },\n                  {\n                      name: '重庆',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.CQ)\n                  },\n                  {\n                      name: '西安',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.XA)\n                  },\n                  {\n                      name: '合肥',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.HF)\n                  },\n                  {\n                      name: '郑州',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.ZZ)\n                  },\n                  {\n                      name: '宜昌',\n                      type: this.chartsType,\n                      data: this.dataArr_OldHouse(this.CityCode.YC)\n                  },\n                  \n              ]\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          cityHouseOldChart.setOption(cityHouseOldOption);\n        },\n        drawBarChart_HousePrice() {\n          this.isBarActive_HousePrice = true;\n          this.isLineActive_HousePrice = false;\n          // 在这里绘制柱状图\n          this.chartsType = \"bar\"\n          this.drawCityHousePrice()\n   \n        },\n        drawLineChart_HousePrice() {\n          this.isBarActive_HousePrice = false;\n          this.isLineActive_HousePrice = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawCityHousePrice()\n        },\n        drawBarChart_NewHouse() {\n          this.isBarActive_NewHouse = true;\n          this.isLineActive_NewHouse = false;\n          // 在这里绘制柱状图\n          this.chartsType = \"bar\"\n          this.drawCityHouseNew()\n   \n        },\n        drawLineChart_NewHouse() {\n          this.isBarActive_NewHouse = false;\n          this.isLineActive_NewHouse = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawCityHouseNew()\n        },\n        drawBarChart_OldHouse() {\n          this.isBarActive_OldHouse = true;\n          this.isLineActive_OldHouse = false;\n          // 在这里绘制柱状图\n          this.chartsType = \"bar\"\n          this.drawCityHouseOld()\n   \n        },\n        drawLineChart_OldHouse() {\n          this.isBarActive_OldHouse = false;\n          this.isLineActive_OldHouse = true;\n          // 在这里绘制折线图\n          this.chartsType = \"line\"\n          this.drawCityHouseOld()\n        }\n      }\n    };\n    </script>\n  \n  \n<style>\n\n.buttons {\n  top: '100px'\n}\n\n</style>","import { render } from \"./CityHouse.vue?vue&type=template&id=68582f7c\"\nimport script from \"./CityHouse.vue?vue&type=script&lang=js\"\nexport * from \"./CityHouse.vue?vue&type=script&lang=js\"\n\nimport \"./CityHouse.vue?vue&type=style&index=0&id=68582f7c&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { createRouter, createWebHashHistory } from 'vue-router'; \nimport NewHouse from '../components/NewHouse.vue';\nimport SecondHandHouse from '../components/SecondHandHouse.vue';\nimport GrossDomesticProduct from '../components/GrossDomesticProduct.vue';\nimport FinancialIndustry from '../components/FinancialIndustry.vue';\nimport PopulationCorrelation from '../components/PopulationCorrelation.vue';\nimport IndicesData from '../components/IndicesData.vue';\nimport LivingStandards from '../components/LivingStandards.vue';\nimport CityHouse from '../components/CityHouse.vue';\n\nconst routes = [\n  { path: '/', redirect: '/newhouse' }, \n  { path: '/NewHouse', component: NewHouse },\n  { path: '/SecondHandHouse', component: SecondHandHouse },\n  { path: '/GrossDomesticProduct', component: GrossDomesticProduct },\n  { path: '/FinancialIndustry', component: FinancialIndustry },\n  { path: '/PopulationCorrelation', component: PopulationCorrelation },\n  { path: '/IndicesData', component: IndicesData },\n  { path: '/LivingStandards', component: LivingStandards },\n  { path: '/CityHouse', component: CityHouse }\n  \n];\n\n\n// 创建路由实例\nconst router = createRouter({\n  history: createWebHashHistory(process.env.BASE_URL),\n  model: 'hash',\n  routes,\n});\n\nexport default router;\n","import { createApp } from 'vue'; // 导入 createApp 函数\nimport App from './App.vue'; // 导入根组件\nimport router from './router'; // 导入路由实例\n\nconst app = createApp(App); // 创建应用实例\n\napp.use(router); // 使用路由实例\n\napp.mount('#app'); // 挂载应用\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkstatisticalbureau\"] = self[\"webpackChunkstatisticalbureau\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6028); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","_normalizeClass","active","_ctx","$route","path","default","_withCtx","_createTextVNode","_","_component_router_view","name","__exports__","render","id","$data","isBarActive_VolumeMonth","onClick","_cache","args","$options","drawBarChart_VolumeMonth","style","isLineActive_VolumeMonth","drawLineChart_VolumeMonth","_hoisted_3","_hoisted_4","isBarActive_VolumeMonthForArea","drawBarChart_VolumeMonthForArea","isLineActive_VolumeMonthForArea","drawLineChart_VolumeMonthForArea","_hoisted_5","data","AreaName","JA","JH","QK","HY","QS","WC","HS","DXH","DHGX","JJKF","JX","HP","CD","XZ","HN","TOTAL","houseList","chartsType","mounted","this","loadData","methods","fetch","then","response","json","console","log","handleTotalData","catch","error","selectMonthArr","houseArrayWith","unshift","filter","houseObj","areaStr","String","cityDistrict","search","houseArr","year","month","sort","a","b","statisticsTime","map","item","hosuseNum","Number","houseNum","drawVolumeMonthChart","newHouseVolumeBarMonthChart","echarts","document","getElementById","newHouseVolumeBarMonthOption","title","text","left","top","tooltip","trigger","legend","grid","right","bottom","containLabel","xAxis","yAxis","series","type","setOption","drawVolumeMonthForAreaChart","newHouseVolumeBarMonthOptionForArea","newHouseVolumeBarMonthChartForArea","_this","setTimeout","arr_JA","arr_JH","arr_QK","arr_HY","arr_QS","arr_WC","arr_HS","arr_DXH","arr_DHGX","arr_JJKF","arr_JX","arr_HP","arr_CD","arr_XZ","arr_HN","position","dataset","source","seriesLayoutBy","emphasis","focus","radius","center","label","formatter","encode","itemName","value","on","event","xAxisInfo","axesInfo","dimension","isBarActive","drawBarChart","isLineActive","drawLineChart","oldHouseArrayYear2019","oldHouseArrayYear2020","oldHouseArrayYear2021","oldHouseArrayYear2022","oldHouseArrayMonth2019","oldHouseArrayMonth2020","oldHouseArrayMonth2021","oldHouseArrayMonth2022","handleData","oldHouseTotalArr","oldSelectMonthArr","houseType","inventory","yearStr","tradingDate","statisticalTime","volume","oldHouseVolume","newHouseVolume","newHouseInventory","arr","tempArr","Array","i","currenthMonth","push","drawCharts","oldHouseVolumeBarMonthChart","oldHouseVolumeBarMonthOption","isBarActive_GDP_HG","drawBarChart_GDP_HG","isLineActive_GDP_HG","drawLineChart_GDP_HG","isBarActive_GDP_CS","drawBarChart_GDP_CS","isLineActive_GDP_CS","drawLineChart_GDP_CS","sortYearMonths","date1","date2","compareYearMonth","replace","aYear","parseInt","substring","aMonth","bYear","bMonth","GDP_Type","A020102","A020103","A020104","A020105","A0101","CityCode","BJ","SH","GZ","SZ","HZ","WH","NJ","CQ","XA","ZZ","HF","YC","Dbcode","hgnd","csnd","gdpDatalistHG","gdpDatalistCS","gdpDataListHG","gdpDataListCS","dataArr_GDP_HG","gdpType","date","gdpDatalistHGObj","code","dataArr_GDP_CS","cityCode","gdpDatalistCSObj","drawChart_GDP_HG","gdphgChart","gdphgOption","drawChart_GDP_CS","gdpcsChart","gdpcsOption","currencyInfoList","afreAndCurrencylArr","afreAndCurrencyObj","itemDate","afre","m2","currencyLineMonthChart","currencyLineMonthOption","min","isBarActive_Population","drawBarChart_Population","isLineActive_Population","drawLineChart_Population","isBarActive_Populationrate","drawBarChart_Populationrate","isLineActive_Populationrate","drawLineChart_Populationrate","_hoisted_6","isBarActive_Dependencyratio","drawBarChart_Dependencyratio","isLineActive_Dependencyratio","drawLineChart_Dependencyratio","_hoisted_7","PopulationType","Population_A030101","Population_A030102","Population_A030103","Population_A030104","Population_A030105","Population_A030302","Population_A030303","Population_A030304","PopulationRateType","Population_A030201","Population_A030202","Population_A030203","Population_A030305","Population_A030306","Population_A030307","populationDataList","populationData","populationArr","populationDataListObj","number","drawPopulationCharts","populationChart","populationOption","drawPopulationRateCharts","populationrateChart","populationrateOption","drawDependencyRatioCharts","dependencyratioChart","dependencyratioOption","isBarActive_Indices","drawBarChart_Indices","isLineActive_Indices","drawLineChart_Indices","isBarActive_PMI","drawBarChart_PMI","isLineActive_PMI","drawLineChart_PMI","IndicesType","CPI_A01010101","CPI_A01030101","PPI_A01080101","PPI_A01080701","PMI_A0B0101","PMI_A0B0201","PMI_A0B0301","indicesDataList","indicesData","dataArr","indicesDataListObj","axisArr","drawPriceIndicesChat","priceIndicesChart","priceIndicesOption","subtext","subtextStyle","fontWeight","fontSize","lineHeight","max","drawPMIChart","pmiChart","pmiOption","isBarActive_Income","drawBarChart_Income","isLineActive_Income","drawLineChart_Income","isBarActive_Engel","drawBarChart_Engel","isLineActive_Engel","drawLineChart_Engel","isBarActive_Gini","drawBarChart_Gini","isLineActive_Gini","drawLineChart_Gini","LivingStandards_Income","A0A0101","A0A0103","A0A0201","A0A0203","A0A0301","A0A0303","LivingStandards_Coefficient","A0A0G01","A0A0H01","A0A0H02","A0A0H03","livingStandardsDataList","livingStandardsData","livingStandardsArr","livingStandardsDataListObj","drawIncomeCharts","incomeChart","incomeOption","drawEngelCoefficientCharts","engelCoefficientChart","engelCoefficientOption","drawGiniCoefficientCharts","giniCoefficientChart","giniCoefficientOption","isBarActive_HousePrice","drawBarChart_HousePrice","isLineActive_HousePrice","drawLineChart_HousePrice","isBarActive_NewHouse","drawBarChart_NewHouse","isLineActive_NewHouse","drawLineChart_NewHouse","isBarActive_OldHouse","drawBarChart_OldHouse","isLineActive_OldHouse","drawLineChart_OldHouse","CityHouse_Type","A030C","A010804","A010807","CityHouse_Dbcode","csyd","cityHouseDataList","cityHouseData","dataArr_HousePrice","cityHouseDataListObj","dbcode","dataArr_NewHouse","dataArr_OldHouse","drawCityHousePrice","cityHousePriceChart","cityHousePriceOption","drawCityHouseNew","cityHouseNewChart","cityHouseNewOption","drawCityHouseOld","cityHouseOldChart","cityHouseOldOption","routes","redirect","component","NewHouse","SecondHandHouse","GrossDomesticProduct","FinancialIndustry","PopulationCorrelation","IndicesData","LivingStandards","CityHouse","router","createRouter","history","createWebHashHistory","process","model","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}