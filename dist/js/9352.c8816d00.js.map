{"version":3,"file":"js/9352.c8816d00.js","mappings":"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","sources":["webpack://tangdata/./src/config/chartMetaProvince.js","webpack://tangdata/./src/config/dataLoader.js","webpack://tangdata/./src/components/common/ChartContainer.vue","webpack://tangdata/./src/components/common/ChartContainer.vue?9df1","webpack://tangdata/./src/components/common/ChartPage.vue","webpack://tangdata/./src/components/common/ChartPage.vue?6ceb"],"sourcesContent":["import { params_province } from '@/utils/CommonUtil.js';\n\nexport const ProvincialEducationCharts = {\n    source: {\n        localJson: './json/province.json', // ✅ 替换为你实际放置的路径\n        apiParams: params_province,         // ✅ 替换为你的请求参数\n        cityCodeArr: [                               // ✅ 实际为省级行政区 code\n            '110000', '120000', '130000', '140000',\n            '150000', '210000', '220000', '230000',\n            '310000', '320000', '330000', '340000', '350000', '360000', '370000',\n            '410000', '420000', '430000', '440000', '450000', '460000',\n            '500000', '510000', '520000', '530000', '540000',\n            '610000', '620000', '630000', '640000', '650000'\n        ]\n    },\n    charts: [\n        {\n            id: 'ZS',\n            title: '普通高等学校本科招生数(万人)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A0M0103'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '30%',\n            unit: ''\n        },\n        {\n            id: 'ZX',\n            title: '普通高等学校本科在校学生数(万人)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A0M0106'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '30%',\n            unit: ''\n        },\n        {\n            id: 'BY',\n            title: '普通高等学校本科毕业生数(万人)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A0M010C'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '30%',\n            unit: ''\n        }\n    ]\n};\n\nexport const ProvincialFinanceCharts = {\n    source: {\n        localJson: './json/province.json',\n        apiParams: params_province,\n        cityCodeArr: [                               // ✅ 实际为省级行政区 code\n            '110000', '120000', '130000', '140000',\n            '150000', '210000', '220000', '230000',\n            '310000', '320000', '330000', '340000', '350000', '360000', '370000',\n            '410000', '420000', '430000', '440000', '450000', '460000',\n            '500000', '510000', '520000', '530000', '540000',\n            '610000', '620000', '630000', '640000', '650000'\n        ]\n    },\n    charts: [\n        {\n            id: 'FIY',\n            title: '地方财政收入(亿元)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A080101'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '30%',\n            unit: ''\n        },\n        {\n            id: 'FOY',\n            title: '地方财政支出(亿元)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A080201'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '30%',\n            unit: ''\n        }\n    ]\n};\n\nexport const ProvincialGDPCharts = {\n\n    source: {\n        localJson: './json/province.json',\n        apiParams: params_province,\n        cityCodeArr: [                               // ✅ 实际为省级行政区 code\n            '110000', '120000', '130000', '140000',\n            '150000', '210000', '220000', '230000',\n            '310000', '320000', '330000', '340000', '350000', '360000', '370000',\n            '410000', '420000', '430000', '440000', '450000', '460000',\n            '500000', '510000', '520000', '530000', '540000',\n            '610000', '620000', '630000', '640000', '650000'\n        ]\n    },\n    charts: [\n        {\n            id: 'GDP',\n            title: '各省市GDP(亿元)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A020101'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: ''\n        }\n\n    ]\n};\n\nexport const ProvincialMedicalCharts = {\n\n    source: {\n        localJson: './json/province.json',\n        apiParams: params_province,\n        cityCodeArr: [                               // ✅ 实际为省级行政区 code\n            '110000', '120000', '130000', '140000',\n            '150000', '210000', '220000', '230000',\n            '310000', '320000', '330000', '340000', '350000', '360000', '370000',\n            '410000', '420000', '430000', '440000', '450000', '460000',\n            '500000', '510000', '520000', '530000', '540000',\n            '610000', '620000', '630000', '640000', '650000'\n        ]\n    },\n    charts: [\n        {\n            id: 'HP',\n            title: '医院数(个)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A0O0102'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: ''\n        },\n        {\n            id: 'BP',\n            title: '每万人医疗机构床位数(个)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A0O0604'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: '',\n        }\n\n    ]\n};\n\nexport const ProvincialPopulationCharts = {\n  source: {\n    localJson: './json/province.json', // ✅ 替换为实际路径\n    apiParams: params_province,         // ✅ 替换为你在 CommonUtil.js 中定义的请求参数\n    cityCodeArr: [\n      '110000', '120000', '130000', '140000', \n      '150000', '210000', '220000', '230000', \n      '310000', '320000', '330000', '340000', '350000', '360000', '370000', \n      '410000', '420000', '430000', '440000', '450000', '460000',\n      '500000', '510000', '520000', '530000', '540000',\n      '610000', '620000', '630000', '640000', '650000'\n    ]\n  },\n  charts: [\n    {\n      id: 'PP',\n      title: '年末常住人口(万人)',\n      subtitle: '',\n      period: 'yearly',\n      zbcodeArr: ['A030101'],\n      dbCode: 'nd',\n      chartType: 'bar',\n      exceptName: '人口',\n      legendTop: '5%',\n      gridTop: '30%',\n      unit: ''\n    },\n    {\n      id: 'PRB',\n      title: '人口出生率',\n      subtitle: '',\n      period: 'yearly',\n      zbcodeArr: ['A030201'],\n      dbCode: 'nd',\n      chartType: 'bar',\n      exceptName: '',\n      legendTop: '5%',\n      gridTop: '30%',\n      unit: ''\n    },\n    {\n      id: 'PRD',\n      title: '人口死亡率',\n      subtitle: '',\n      period: 'yearly',\n      zbcodeArr: ['A030202'],\n      dbCode: 'nd',\n      chartType: 'bar',\n      exceptName: '',\n      legendTop: '5%',\n      gridTop: '30%',\n      unit: '',\n    },\n    {\n      id: 'PRI',\n      title: '人口自然增长率',\n      subtitle: '',\n      period: 'yearly',\n      zbcodeArr: ['A030203'],\n      dbCode: 'nd',\n      chartType: 'bar',\n      exceptName: '',\n      legendTop: '5%',\n      gridTop: '30%',\n      unit: ''\n    }\n  ]\n};\n\nexport const ProvincialRealEstateInvestCharts = {\n\n    source: {\n        localJson: './json/province.json',\n        apiParams: params_province,\n        cityCodeArr: [\n            '110000', '120000', '130000', '140000',\n            '150000', '210000', '220000', '230000',\n            '310000', '320000', '330000', '340000', '350000', '360000', '370000',\n            '410000', '420000', '430000', '440000', '450000', '460000',\n            '500000', '510000', '520000', '530000', '540000',\n            '610000', '620000', '630000', '640000', '650000'\n        ]\n    },\n    charts: [\n        {\n            id: 'EI',\n            title: '住宅商品房开发投资额(亿元)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A050D02'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: ''\n        }\n\n    ]\n};\n\nexport const ProvincialRealEstateSellCharts = {\n\n    source: {\n        localJson: './json/province.json',\n        apiParams: params_province,\n        cityCodeArr: [\n            '110000', '120000', '130000', '140000',\n            '150000', '210000', '220000', '230000',\n            '310000', '320000', '330000', '340000', '350000', '360000', '370000',\n            '410000', '420000', '430000', '440000', '450000', '460000',\n            '500000', '510000', '520000', '530000', '540000',\n            '610000', '620000', '630000', '640000', '650000'\n        ]\n    },\n    charts: [\n        {\n            id: 'ES-SAY',\n            title: '住宅商品房销售面积(万平方米)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A050H02'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: ''\n        },\n        {\n            id: 'ES-SY',\n            title: '住宅商品房平均销售价格(元)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A050J02'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: ''\n        },\n\n    ]\n};\n\nexport const ProvinceRealEstatePriceIndicesCharts = {\n\n    source: {\n        localJson: './json/province.json',\n        apiParams: params_province,\n        ProvinceCodeArr: [\n            '110000', '310000', '440100', '440300', '330100',\n            '510100', '420100', '320100', '500000', '610100',\n            '410100', '340100', '430100'\n        ]\n    },\n    charts: [\n        {\n            id: 'ES-SAY',\n            title: '新建商品住宅销售价格指数(上月=100)',\n            subtitle: '',\n            period: 'monthly',\n            zbcodeArr: ['A010804'],\n            dbCode: 'yd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: '',\n        },\n        {\n            id: 'ES-SY',\n            title: '二手房住宅销售价格指数(上月=100)',\n            subtitle: '',\n            period: 'monthly',\n            zbcodeArr: ['A010807'],\n            dbCode: 'yd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: '',\n        },\n\n    ]\n};\nexport const ProvincialLivingCharts = {\n\n    source: {\n        localJson: './json/province.json',\n        apiParams: params_province,\n        cityCodeArr: [                               // ✅ 实际为省级行政区 code\n            '110000', '120000', '130000', '140000',\n            '150000', '210000', '220000', '230000',\n            '310000', '320000', '330000', '340000', '350000', '360000', '370000',\n            '410000', '420000', '430000', '440000', '450000', '460000',\n            '500000', '510000', '520000', '530000', '540000',\n            '610000', '620000', '630000', '640000', '650000'\n        ]\n    },\n    charts: [\n        {\n            id: 'FDY',\n            title: '居民人均可支配收入(元)',\n            subtitle: '',\n            period: 'yearly',\n            zbcodeArr: ['A0A0101'],\n            dbCode: 'nd',\n            chartType: 'bar',\n            exceptName: '',\n            legendTop: '5%',\n            gridTop: '25%',\n            unit: ''\n        }\n\n    ]\n};\n\n\n\n","// utils/dataLoader.js\nimport { sendRequest } from '@/utils/CommonUtil.js';\nimport { logger } from '@/utils/Logger.js';\n\n// 缓存对象\nconst dataCache = {};\n// 如果需要过期刷新，可以设置 TTL（毫秒），例如 5 分钟\nconst CACHE_TTL = 0; // 0 表示永不过期\n\nexport async function loadChartData({ localJson, apiParams }) {\n  const isLocal = process.env.VUE_APP_REQUEST_IS_LOCAL === 'true';\n  const cacheKey = isLocal ? localJson : JSON.stringify(apiParams);\n\n  // 检查缓存\n  const now = Date.now();\n  if (dataCache[cacheKey]) {\n    const { data, time } = dataCache[cacheKey];\n    if (CACHE_TTL === 0 || now - time < CACHE_TTL) {\n      return data;\n    }\n  }\n\n  if (isLocal) {\n    try {\n      const response = await fetch(localJson);\n      if (!response.ok) throw new Error(`状态码错误: ${response.status}`);\n      const jsonData = await response.json();\n      dataCache[cacheKey] = { data: jsonData, time: now };\n      return jsonData;\n    } catch (error) {\n      logger.error('本地数据加载失败:', error);\n      throw error;\n    }\n  } else {\n    try {\n      const result = await sendRequest(apiParams);\n      dataCache[cacheKey] = { data: result, time: now };\n      return result;\n    } catch (error) {\n      logger.error('接口请求失败:', error);\n      throw error;\n    }\n  }\n}","<template>\n  <div class=\"chart-container\">\n    <h3 class=\"chart-title\">{{ chart.title }}</h3>\n    <h4 v-if=\"chart.subtitle\" class=\"chart-subtitle\">{{ chart.subtitle }}</h4>\n\n    <div class=\"chart-controls\">\n      <button\n        :class=\"[\n          'chart-button',\n          { 'is-active': chartType === 'bar' && isHorizontal === false },\n        ]\"\n        @click=\"chartType = 'bar'; isHorizontal = false\"\n        type=\"button\"\n      >\n        柱状图\n      </button>\n      <button\n        :class=\"[\n          'chart-button',\n          { 'is-active': chartType === 'bar' && isHorizontal === true },\n        ]\"\n        @click=\"chartType = 'bar'; isHorizontal = true\"\n        type=\"button\"\n      >\n        条形图\n      </button>\n      <button\n        :class=\"['chart-button', { 'is-active': chartType === 'line' && isHorizontal === false }]\"\n        @click=\"chartType = 'line'; isHorizontal = false\"\n        type=\"button\"\n      >\n        折线图\n      </button>\n    </div>\n    <div class=\"year-selector\">\n      <label class=\"year-label\">选择时间范围</label>\n      <el-slider\n        v-model=\"yearLimit\"\n        :min=\"1\"\n        :max=\"20\"\n        :step=\"1\"\n        show-tooltip\n        :format-tooltip=\"formatTooltip\"\n        class=\"year-slider\"\n      />\n    </div>\n\n    <ChartCard\n      :chart=\"chart\"\n      :chartType=\"chartType\"\n      :returnData=\"returnData\"\n      :config=\"config\"\n      :yearLimit=\"yearLimit\"\n      :isHorizontal=\"isHorizontal\"\n    />\n  </div>\n</template>\n\n<script>\nimport ChartCard from \"./ChartCard.vue\";\n\nexport default {\n  components: { ChartCard },\n  props: {\n    chart: Object,\n    returnData: Object,\n    config: Object,\n    initialChartType: {\n      type: String,\n      default: \"bar\",\n    },\n    viewMode: String,\n  },\n  data() {\n    return {\n      chartType: this.initialChartType,\n      yearLimit: 10,\n      isHorizontal: false\n    };\n  },\n  computed: {\n    // 支持动态 tooltip 格式\n    formatTooltip() {\n      return (val) => {\n        const unit = this.viewMode === \"monthly\" ? \"个月\" : \"年\";\n        return `近 ${val} ${unit}`;\n      };\n    },\n  },\n};\n</script>\n\n\n\n<style scoped>\n.chart-container {\n  width: 100%;\n  max-width: 1500px;\n  margin: 0 auto 60px;\n  padding: 16px;\n  box-sizing: border-box;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n  margin-top: 50px;\n}\n\n.chart-title {\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  /* 比 500 更粗，接近 canvas 渲染视觉效果 */\n  color: #333;\n  font-family: \"Microsoft YaHei\", \"Helvetica Neue\", Arial, sans-serif;\n  margin: 24px 0 6px;\n  line-height: 1.4;\n}\n\n.chart-subtitle {\n  font-size: 13px;\n  font-weight: bold;\n  line-height: 20px;\n  color: #666;\n  /* 可改为 #aaa 如果需要更淡 */\n  text-align: center;\n  white-space: pre-line;\n  overflow-wrap: break-word;\n  margin: 0 auto 12px;\n  max-width: 80vw;\n  /* 等价于 window.innerWidth * 0.8 */\n}\n\n.chart-controls {\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  margin-top: 8px;\n  /* ✅ 确保和 legend 保持间隔 */\n}\n\n.chart-button {\n  padding: 6px 12px;\n  font-size: 13px;\n  border-radius: 10px;\n  background-color: #ccc;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  transition: background 0.3s;\n  margin-top: 10px;\n}\n\n.chart-button.is-active {\n  background-color: #0bc2d6;\n}\n\n.year-selector {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* 横向居中 */\n  justify-content: center;\n  /* 纵向居中 */\n  margin: 16px 0;\n}\n\n.year-label {\n  padding: 6px 8px;\n  font-size: 13px;\n  border-radius: 8px;\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #fff;\n  background-color: #0bc2d6 !important;\n}\n\n/* 限制滑块宽度 */\n.year-slider {\n  width: 10%; /* 默认 PC 端 */\n  min-width: 100px; /* 避免过窄 */\n}\n\n/* Vue3 推荐写法：v-deep 前缀，作用于 element-plus 内部 */\n::v-deep(.year-slider .el-slider__bar) {\n  background-color: #0bc2d6 !important;\n}\n\n::v-deep(.year-slider .el-slider__button) {\n  background-color: #0bc2d6 !important;\n  border-color: #0bc2d6 !important;\n}\n</style>","import { render } from \"./ChartContainer.vue?vue&type=template&id=10d8bf4a&scoped=true\"\nimport script from \"./ChartContainer.vue?vue&type=script&lang=js\"\nexport * from \"./ChartContainer.vue?vue&type=script&lang=js\"\n\nimport \"./ChartContainer.vue?vue&type=style&index=0&id=10d8bf4a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-10d8bf4a\"]])\n\nexport default __exports__","<template>\n  <div class=\"echart-container\">\n    <div v-if=\"internalShowToggles\" class=\"segment-container\">\n      <div class=\"segment-wrapper\">\n        <div class=\"segment-bg\" :class=\"viewMode\"></div>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'monthly' }\"\n          @click=\"viewMode = 'monthly'\">月度</button>\n        <button class=\"segment-button\" :class=\"{ active: viewMode === 'yearly' }\"\n          @click=\"viewMode = 'yearly'\">年度</button>\n      </div>\n    </div>\n\n    <ChartContainer v-for=\"chart in chartsToRender\" :key=\"chart.id\" :chart=\"chart\" :returnData=\"returnData\"\n      :config=\"config\" :viewMode=\"viewMode\" />\n  </div>\n</template>\n\n<script>\nimport ChartContainer from './ChartContainer.vue';\n\nexport default {\n  components: { ChartContainer },\n  props: {\n    chartMetaList: Array,\n    returnData: Object,\n    config: Object,\n    showToggles: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      viewMode: 'monthly',\n    };\n  },\n  computed: {\n    internalShowToggles() {\n      if (!this.showToggles) return false;\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      return dbCodes.has('yd') && dbCodes.has('nd');\n    },\n    defaultViewMode() {\n      const dbCodes = new Set(this.chartMetaList.map((c) => c.dbCode));\n      if (dbCodes.has('yd')) return 'monthly';\n      if (dbCodes.has('nd')) return 'yearly';\n      return 'monthly';\n    },\n    filteredCharts() {\n      if (!this.internalShowToggles) return this.chartMetaList;\n      return this.chartMetaList.filter((c) =>\n        this.viewMode === 'monthly' ? c.dbCode === 'yd' : c.dbCode === 'nd'\n      );\n    },\n    chartsToRender() {\n      return this.filteredCharts.filter((chart) => {\n        const sj = this.returnData?.dataList?.sj?.[chart.dbCode];\n        return Array.isArray(sj) && sj.length > 0;\n      });\n    },\n  },\n  created() {\n    this.viewMode = this.defaultViewMode;\n  },\n};\n</script>\n\n<style scoped>\n.segment-container {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 30px;\n}\n\n.segment-wrapper {\n  position: relative;\n  display: flex;\n  width: 200px;\n  height: 45px;\n  background-color: #fff;\n  border-radius: 999px;\n  padding: 2px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  /* ✅ 外部阴影更明显 */\n}\n\n/* 背景高亮滑块 */\n.segment-bg {\n  position: absolute;\n  top: 2px;\n  bottom: 2px;\n  width: 50%;\n  border-radius: 999px;\n  background-color: #0bc2d6;\n  transition: left 0.25s ease;\n  z-index: 0;\n}\n\n.segment-bg.monthly {\n  left: 2px;\n}\n\n.segment-bg.yearly {\n  left: 50%;\n}\n\n/* 按钮本体 */\n.segment-button {\n  position: relative;\n  flex: 1;\n  z-index: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 999px;\n  cursor: pointer;\n  transition: color 0.25s ease;\n}\n\n.segment-button.active {\n  color: #fff;\n}\n\n\n</style>","import { render } from \"./ChartPage.vue?vue&type=template&id=ce7a7c4e&scoped=true\"\nimport script from \"./ChartPage.vue?vue&type=script&lang=js\"\nexport * from \"./ChartPage.vue?vue&type=script&lang=js\"\n\nimport \"./ChartPage.vue?vue&type=style&index=0&id=ce7a7c4e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ce7a7c4e\"]])\n\nexport default __exports__"],"names":["ProvincialEducationCharts","source","localJson","apiParams","params_province","cityCodeArr","charts","id","title","subtitle","period","zbcodeArr","dbCode","chartType","exceptName","legendTop","gridTop","unit","ProvincialFinanceCharts","ProvincialGDPCharts","ProvincialMedicalCharts","ProvincialPopulationCharts","ProvincialRealEstateInvestCharts","ProvincialRealEstateSellCharts","ProvincialLivingCharts","dataCache","CACHE_TTL","async","loadChartData","isLocal","process","cacheKey","JSON","stringify","now","Date","data","time","response","fetch","ok","Error","status","jsonData","json","error","logger","result","sendRequest","class","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$props","chart","_hoisted_3","_createCommentVNode","_hoisted_4","_normalizeClass","$data","isHorizontal","onClick","_cache","$event","type","_hoisted_5","_hoisted_6","_createVNode","_component_el_slider","modelValue","yearLimit","min","max","step","$options","formatTooltip","_component_ChartCard","returnData","config","components","ChartCard","props","Object","initialChartType","String","default","viewMode","this","computed","val","__exports__","render","internalShowToggles","active","_Fragment","_renderList","chartsToRender","_createBlock","_component_ChartContainer","ChartContainer","chartMetaList","Array","showToggles","Boolean","dbCodes","Set","map","c","has","defaultViewMode","filteredCharts","filter","sj","dataList","isArray","length","created"],"sourceRoot":""}