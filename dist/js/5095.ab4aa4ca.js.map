{"version":3,"file":"js/5095.ab4aa4ca.js","mappings":"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","sources":["webpack://tangdata/./src/utils/Logger.js","webpack://tangdata/./src/components/WH/WHSecondHandHouse.vue","webpack://tangdata/./src/components/WH/WHSecondHandHouse.vue?6654"],"sourcesContent":["// utils/logger.js\nconst logLevels = ['debug', 'info', 'warn', 'error'];\nconst currentLevel = process.env.LOG_LEVEL || 'info'; // 支持动态日志级别\n\nexport const logger = {\n  debug: (...args) => {\n    if (process.env.NODE_ENV !== 'production' && logLevels.indexOf('debug') >= logLevels.indexOf(currentLevel)) {\n      logger.log('[DEBUG]', ...args);\n    }\n  },\n  error: (...args) => {\n    if (logLevels.indexOf('error') >= logLevels.indexOf(currentLevel)) {\n      logger.error('[ERROR]', ...args); // 生产环境也保留错误日志\n    }\n  }\n};\n\n","<template>\n  <div class=\"container\">\n    <!-- 第一张图：合计 -->\n    <div class=\"chart-block\">\n      <h3 class=\"chart-title\">武汉二手房月成交量</h3>\n      <div class=\"buttons\">\n        <button class=\"button\" :class=\"{ 'is-active': isBarActive }\"\n          @click=\"drawBarChart\">柱状图</button>\n        <button class=\"button\" :class=\"{ 'is-active': isLineActive }\"\n          @click=\"drawLineChart\">折线图</button>\n      </div>\n      <div class=\"chart-container\" id=\"oldHouseVolumeMonth\"></div>\n    </div>\n  </div>\n</template>\n  <script>\n  import * as echarts from 'echarts';\n  import { logger } from '@/utils/Logger.js';\n  \n  export default {\n\n    data() {\n      return {\n        isBarActive: false,\n        isLineActive: false,\n        houseList: null,\n        chartsType: null,\n        oldHouseArrayYear2019: null,\n        oldHouseArrayYear2020: null,\n        oldHouseArrayYear2021: null,\n        oldHouseArrayYear2022: null,\n        oldHouseArrayMonth2019: null,\n        oldHouseArrayMonth2020: null,\n        oldHouseArrayMonth2021: null,\n        oldHouseArrayMonth2022: null\n      };\n    },\n    mounted() {\n      this.loadData();\n    },\n\n    methods: {\n      loadData() {\n        // 读取本地的 JSON 文件\n        fetch('json/whhouseTradingInfo.json')\n          .then(response => response.json())\n          .then(data => {\n            // logger.log('读取本地数据二手房数据:', data.houseList);\n            this.houseList = data.houseList;\n            this.handleData();\n            // 处理数据绘制图表\n            this.drawBarChart();\n          })\n          .catch(error => {\n            logger.error('Error fetching data:', error)\n          })\n      },\n        handleData() {\n          // 2019-2022年二手房月成交累计数据\n          this.oldHouseArrayYear2019 = this.oldHouseTotalArr('oldHouseVolume','2019')\n          this.oldHouseArrayYear2020 = this.oldHouseTotalArr('oldHouseVolume','2020')\n          this.oldHouseArrayYear2021 = this.oldHouseTotalArr('oldHouseVolume','2021')\n          this.oldHouseArrayYear2022 = this.oldHouseTotalArr('oldHouseVolume','2022')\n          logger.debug('2022年二手房年成交数组 %o ',this.oldHouseArrayYear2022)\n          // 2019-2022年二手房月成交数据\n          this.oldHouseArrayMonth2019 = this.oldSelectMonthArr(this.oldHouseArrayYear2019)\n          this.oldHouseArrayMonth2020 = this.oldSelectMonthArr(this.oldHouseArrayYear2020)\n          this.oldHouseArrayMonth2021 = this.oldSelectMonthArr(this.oldHouseArrayYear2021)\n          this.oldHouseArrayMonth2022 = this.oldSelectMonthArr(this.oldHouseArrayYear2022)\n\n          //补全数据处理\n          this.oldHouseArrayMonth2020.unshift(0, 0, this.oldHouseArrayYear2020[0])\n          this.oldHouseArrayMonth2021.unshift(0, this.oldHouseArrayYear2021[0])\n          this.oldHouseArrayMonth2022.unshift(0, this.oldHouseArrayYear2022[0])\n          logger.debug('2022年二手房月成交数组 %o ',this.oldHouseArrayMonth2022)\n          //前面数据补齐-2020年前3月数据为0\n          this.oldHouseArrayMonth2020.unshift(0, 0, 0);\n        },\n        //按照年份与日期做筛选与排序\n        oldHouseTotalArr(houseType, year) {\n          var inventory = Number();\n          return this.houseList.filter( houseObj => {\n              var yearStr = String()\n              yearStr = houseObj.tradingDate\n              return yearStr.search(year) != -1;\n          }).sort(function(a,b) {\n              return a.statisticalTime > b.statisticalTime ? 1: -1;\n          }).map(item => {\n              if (houseType == 'oldHouseVolume') {\n                  var volume = Number(item.oldHouseVolume)\n                  return volume\n              }else if (houseType == 'newHouseVolume') {\n                  inventory = Number(item.newHouseVolume)\n                  return inventory\n              }else if (houseType == 'newHouseInventory'){\n                  inventory = Number(item.newHouseInventory)\n                  return inventory\n              }\n              \n          })\n        },\n        oldSelectMonthArr(arr) {\n                var tempArr = Array()\n                for(let i in arr) {\n                    if (i>0) {\n                        var currenthMonth = (arr[i])-(arr[i-1])\n                        tempArr.push(currenthMonth)\n                    }\n                }\n                return tempArr\n        },\n          \n\n      drawCharts() {\n        // 基于准备好的dom，初始化echarts实例（武汉新房月成交量柱状图）\n        var oldHouseVolumeBarMonthChart = echarts.init(document.getElementById('oldHouseVolumeMonth'));\n        // 指定图表的配置项和数据\n        var oldHouseVolumeBarMonthOption = {\n            // title: {\n            //     text: '武汉二手房月成交量',\n            //     left: 'center',\n            //     top: 'top'\n            // },\n            tooltip: {\n               //X轴悬浮显示所有数据\n               trigger: 'axis'\n            },\n            legend: {\n                left: 'center',\n                top: '5%'\n            },\n            grid: {\n                left: '1%',\n                right: '1%',\n                top: '20%',\n                bottom: '1%',\n                containLabel: true\n            },\n            xAxis: {\n                data: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n            },\n            yAxis: {},\n            series: [\n                {\n                    name: 2019,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2019\n                },\n                {\n                    name: 2020,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2020\n                },\n                {\n                    name: 2021,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2021\n                },\n                {\n                    name: 2022,\n                    type: this.chartsType,\n                    data: this.oldHouseArrayMonth2022\n                }\n            ]\n        };\n        // 使用刚指定的配置项和数据显示图表。\n        oldHouseVolumeBarMonthChart.setOption(oldHouseVolumeBarMonthOption);\n      },\n      drawBarChart() {\n        this.isBarActive = true;\n        this.isLineActive = false;\n        this.chartsType = \"bar\"\n        this.drawCharts();\n \n      },\n      drawLineChart() {\n        this.isBarActive = false;\n        this.isLineActive = true;\n        // 在这里绘制折线图\n        this.chartsType = \"line\"\n        this.drawCharts();\n      }\n    }\n  };\n  </script>\n\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n}\n\n/* 每个图表块：一张卡片 */\n.chart-block {\n  width: 100%;\n  max-width: 1400px;\n  margin: 0 auto 60px;\n  padding: 16px;\n  box-sizing: border-box;\n  background-color: #fff;\n  border-radius: 12px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.06);\n}\n\n/* 图表标题 */\n.chart-title {\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700; /* 比 500 更粗，接近 canvas 渲染视觉效果 */\n  color: #333;\n  font-family: 'Microsoft YaHei', 'Helvetica Neue', Arial, sans-serif;\n  margin: 24px 0 6px;\n  line-height: 1.4;\n}\n\n/* 图表副标题 */\n.chart-subtitle {\n  text-align: center;\n  font-size: 14px;\n  color: #666;\n  white-space: pre-line;\n  margin-bottom: 16px;\n}\n\n/* 图表切换按钮 */\n.buttons {\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  margin-top: 8px; /* ✅ 确保和 legend 保持间隔 */\n}\n\n.button {\n    padding: 6px 12px;\n    font-size: 13px;\n    border-radius: 10px;\n    background-color: #ccc;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n    transition: background 0.3s;\n    margin-top: 10px;\n}\n\n.button.is-active {\n  background-color: #0bc2d6;\n}\n\n/* 图表 DOM 容器 */\n.chart-container {\n  width: 100%;\n  height: 600px;\n  margin: 0 auto;\n}\n\n</style>","import { render } from \"./WHSecondHandHouse.vue?vue&type=template&id=5a4ab8f1&scoped=true\"\nimport script from \"./WHSecondHandHouse.vue?vue&type=script&lang=js\"\nexport * from \"./WHSecondHandHouse.vue?vue&type=script&lang=js\"\n\nimport \"./WHSecondHandHouse.vue?vue&type=style&index=0&id=5a4ab8f1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5a4ab8f1\"]])\n\nexport default __exports__"],"names":["logLevels","currentLevel","process","LOG_LEVEL","logger","debug","args","error","indexOf","class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_normalizeClass","$data","isBarActive","onClick","_cache","$options","drawBarChart","isLineActive","drawLineChart","_hoisted_5","data","houseList","chartsType","oldHouseArrayYear2019","oldHouseArrayYear2020","oldHouseArrayYear2021","oldHouseArrayYear2022","oldHouseArrayMonth2019","oldHouseArrayMonth2020","oldHouseArrayMonth2021","oldHouseArrayMonth2022","mounted","this","loadData","methods","fetch","then","response","json","handleData","catch","oldHouseTotalArr","oldSelectMonthArr","unshift","houseType","year","inventory","Number","filter","houseObj","yearStr","String","tradingDate","search","sort","a","b","statisticalTime","map","item","volume","oldHouseVolume","newHouseVolume","newHouseInventory","arr","tempArr","Array","i","currenthMonth","push","drawCharts","oldHouseVolumeBarMonthChart","echarts","document","getElementById","oldHouseVolumeBarMonthOption","tooltip","trigger","legend","left","top","grid","right","bottom","containLabel","xAxis","yAxis","series","name","type","setOption","__exports__","render"],"sourceRoot":""}